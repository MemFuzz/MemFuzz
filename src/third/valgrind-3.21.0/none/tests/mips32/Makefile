# Makefile.in generated by automake 1.16.5 from Makefile.am.
# none/tests/mips32/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This file is used for tool tests, and also in perf/Makefile.am.

# This file should be included (directly or indirectly) by every
# Makefile.am that builds programs.  And also the top-level Makefile.am.

#----------------------------------------------------------------------------
# Global stuff
#----------------------------------------------------------------------------


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/valgrind
pkgincludedir = $(includedir)/valgrind
pkglibdir = $(libdir)/valgrind
pkglibexecdir = $(libexecdir)/valgrind
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
#am__append_1 = -Wno-cast-align -Wno-self-assign \
#                  -Wno-tautological-compare

##am__append_2 = -Wno-expansion-to-defined
#am__append_3 = -DVGABI_
#am__append_4 = -DVGABI_
#am__append_5 = -Wl,-M,$(top_srcdir)/solaris/vgpreload-solaris.mapfile

# The Android toolchain includes all kinds of stdlib helpers present in
# bionic which is bad because we are not linking with it and the Android
# linker will panic.
#am__append_6 = -nostdlib
am__append_7 = -DVGA_SEC_x86=1  \
		-DVGP_SEC_amd64_linux=1

#am__append_8 = -DVGABI_

# Make sure that all test programs have threaded errno.
# Disable largefile support as there are test cases explicitly enabling it.
#am__append_9 = -D_REENTRANT 
#am__append_10 = -Wno-format-extra-args \
#	-Wno-literal-range \
#	-Wno-tautological-constant-out-of-range-compare \
#	-Wno-self-assign -Wno-string-plus-int \
#	-Wno-uninitialized -Wno-unused-value # \
#	clang 3.0.0
#am__append_11 = -Wno-unused-private-field    # drd/tests/tsan_unittest.cpp
check_PROGRAMS = allexec$(EXEEXT) block_size$(EXEEXT) \
	branches$(EXEEXT) branch_pc$(EXEEXT) branches_r6$(EXEEXT) \
	change_fp_mode$(EXEEXT) FPUarithmetic$(EXEEXT) \
	LoadStore$(EXEEXT) LoadStore1$(EXEEXT) MemCpyTest$(EXEEXT) \
	MIPS32int$(EXEEXT) MIPS32r6int$(EXEEXT) MoveIns$(EXEEXT) \
	round$(EXEEXT) vfp$(EXEEXT) SignalException$(EXEEXT) \
	bug320057-mips32$(EXEEXT) mips32_dsp$(EXEEXT) \
	mips32_dspr2$(EXEEXT) unaligned_load_store$(EXEEXT) \
	pc_instructions_r6$(EXEEXT) test_fcsr$(EXEEXT) \
	test_math$(EXEEXT) round_fpu64$(EXEEXT) fp_r6$(EXEEXT) \
	fpu_branches$(EXEEXT) msa_arithmetic$(EXEEXT) \
	msa_comparison$(EXEEXT) msa_data_transfer$(EXEEXT) \
	msa_fpu$(EXEEXT) msa_logical_and_shift$(EXEEXT) \
	msa_shuffle$(EXEEXT) unaligned_load_store$(EXEEXT) \
	test_fcsr$(EXEEXT) test_math$(EXEEXT) round_fpu64$(EXEEXT) \
	fpu_branches$(EXEEXT)
subdir = none/tests/mips32
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_noinst_SCRIPTS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
FPUarithmetic_SOURCES = FPUarithmetic.c
FPUarithmetic_OBJECTS = FPUarithmetic.$(OBJEXT)
FPUarithmetic_LDADD = $(LDADD)
LoadStore_SOURCES = LoadStore.c
LoadStore_OBJECTS = LoadStore.$(OBJEXT)
LoadStore_LDADD = $(LDADD)
LoadStore1_SOURCES = LoadStore1.c
LoadStore1_OBJECTS = LoadStore1.$(OBJEXT)
LoadStore1_LDADD = $(LDADD)
MIPS32int_SOURCES = MIPS32int.c
MIPS32int_OBJECTS = MIPS32int.$(OBJEXT)
MIPS32int_LDADD = $(LDADD)
MIPS32r6int_SOURCES = MIPS32r6int.c
MIPS32r6int_OBJECTS = MIPS32r6int.$(OBJEXT)
MIPS32r6int_LDADD = $(LDADD)
MemCpyTest_SOURCES = MemCpyTest.c
MemCpyTest_OBJECTS = MemCpyTest.$(OBJEXT)
MemCpyTest_LDADD = $(LDADD)
MoveIns_SOURCES = MoveIns.c
MoveIns_OBJECTS = MoveIns.$(OBJEXT)
MoveIns_LDADD = $(LDADD)
SignalException_SOURCES = SignalException.c
SignalException_OBJECTS = SignalException.$(OBJEXT)
SignalException_LDADD = $(LDADD)
allexec_SOURCES = allexec.c
allexec_OBJECTS = allexec-allexec.$(OBJEXT)
allexec_LDADD = $(LDADD)
allexec_LINK = $(CCLD) $(allexec_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
block_size_SOURCES = block_size.c
block_size_OBJECTS = block_size.$(OBJEXT)
block_size_LDADD = $(LDADD)
branch_pc_SOURCES = branch_pc.c
branch_pc_OBJECTS = branch_pc.$(OBJEXT)
branch_pc_LDADD = $(LDADD)
branches_SOURCES = branches.c
branches_OBJECTS = branches.$(OBJEXT)
branches_LDADD = $(LDADD)
branches_r6_SOURCES = branches_r6.c
branches_r6_OBJECTS = branches_r6.$(OBJEXT)
branches_r6_LDADD = $(LDADD)
bug320057_mips32_SOURCES = bug320057-mips32.c
bug320057_mips32_OBJECTS = bug320057-mips32.$(OBJEXT)
bug320057_mips32_LDADD = $(LDADD)
bug320057_mips32_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(bug320057_mips32_LDFLAGS) $(LDFLAGS) -o $@
change_fp_mode_SOURCES = change_fp_mode.c
change_fp_mode_OBJECTS = change_fp_mode.$(OBJEXT)
change_fp_mode_LDADD = $(LDADD)
fp_r6_SOURCES = fp_r6.c
fp_r6_OBJECTS = fp_r6.$(OBJEXT)
fp_r6_LDADD = $(LDADD)
fpu_branches_SOURCES = fpu_branches.c
fpu_branches_OBJECTS = fpu_branches.$(OBJEXT)
fpu_branches_LDADD = $(LDADD)
mips32_dsp_SOURCES = mips32_dsp.c
mips32_dsp_OBJECTS = mips32_dsp.$(OBJEXT)
mips32_dsp_LDADD = $(LDADD)
mips32_dspr2_SOURCES = mips32_dspr2.c
mips32_dspr2_OBJECTS = mips32_dspr2.$(OBJEXT)
mips32_dspr2_LDADD = $(LDADD)
msa_arithmetic_SOURCES = msa_arithmetic.c
msa_arithmetic_OBJECTS = msa_arithmetic-msa_arithmetic.$(OBJEXT)
msa_arithmetic_LDADD = $(LDADD)
msa_arithmetic_LINK = $(CCLD) $(msa_arithmetic_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
msa_comparison_SOURCES = msa_comparison.c
msa_comparison_OBJECTS = msa_comparison-msa_comparison.$(OBJEXT)
msa_comparison_LDADD = $(LDADD)
msa_comparison_LINK = $(CCLD) $(msa_comparison_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
msa_data_transfer_SOURCES = msa_data_transfer.c
msa_data_transfer_OBJECTS =  \
	msa_data_transfer-msa_data_transfer.$(OBJEXT)
msa_data_transfer_LDADD = $(LDADD)
msa_data_transfer_LINK = $(CCLD) $(msa_data_transfer_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
msa_fpu_SOURCES = msa_fpu.c
msa_fpu_OBJECTS = msa_fpu-msa_fpu.$(OBJEXT)
msa_fpu_LDADD = $(LDADD)
msa_fpu_LINK = $(CCLD) $(msa_fpu_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
msa_logical_and_shift_SOURCES = msa_logical_and_shift.c
msa_logical_and_shift_OBJECTS =  \
	msa_logical_and_shift-msa_logical_and_shift.$(OBJEXT)
msa_logical_and_shift_LDADD = $(LDADD)
msa_logical_and_shift_LINK = $(CCLD) $(msa_logical_and_shift_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
msa_shuffle_SOURCES = msa_shuffle.c
msa_shuffle_OBJECTS = msa_shuffle-msa_shuffle.$(OBJEXT)
msa_shuffle_LDADD = $(LDADD)
msa_shuffle_LINK = $(CCLD) $(msa_shuffle_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
pc_instructions_r6_SOURCES = pc_instructions_r6.c
pc_instructions_r6_OBJECTS = pc_instructions_r6.$(OBJEXT)
pc_instructions_r6_LDADD = $(LDADD)
round_SOURCES = round.c
round_OBJECTS = round.$(OBJEXT)
round_LDADD = $(LDADD)
round_fpu64_SOURCES = round_fpu64.c
round_fpu64_OBJECTS = round_fpu64.$(OBJEXT)
round_fpu64_LDADD = $(LDADD)
test_fcsr_SOURCES = test_fcsr.c
test_fcsr_OBJECTS = test_fcsr.$(OBJEXT)
test_fcsr_LDADD = $(LDADD)
am_test_math_OBJECTS = test_math.$(OBJEXT)
test_math_OBJECTS = $(am_test_math_OBJECTS)
test_math_LDADD = $(LDADD)
unaligned_load_store_SOURCES = unaligned_load_store.c
unaligned_load_store_OBJECTS = unaligned_load_store.$(OBJEXT)
unaligned_load_store_LDADD = $(LDADD)
vfp_SOURCES = vfp.c
vfp_OBJECTS = vfp.$(OBJEXT)
vfp_LDADD = $(LDADD)
SCRIPTS = $(dist_noinst_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/FPUarithmetic.Po \
	./$(DEPDIR)/LoadStore.Po ./$(DEPDIR)/LoadStore1.Po \
	./$(DEPDIR)/MIPS32int.Po ./$(DEPDIR)/MIPS32r6int.Po \
	./$(DEPDIR)/MemCpyTest.Po ./$(DEPDIR)/MoveIns.Po \
	./$(DEPDIR)/SignalException.Po ./$(DEPDIR)/allexec-allexec.Po \
	./$(DEPDIR)/block_size.Po ./$(DEPDIR)/branch_pc.Po \
	./$(DEPDIR)/branches.Po ./$(DEPDIR)/branches_r6.Po \
	./$(DEPDIR)/bug320057-mips32.Po ./$(DEPDIR)/change_fp_mode.Po \
	./$(DEPDIR)/fp_r6.Po ./$(DEPDIR)/fpu_branches.Po \
	./$(DEPDIR)/mips32_dsp.Po ./$(DEPDIR)/mips32_dspr2.Po \
	./$(DEPDIR)/msa_arithmetic-msa_arithmetic.Po \
	./$(DEPDIR)/msa_comparison-msa_comparison.Po \
	./$(DEPDIR)/msa_data_transfer-msa_data_transfer.Po \
	./$(DEPDIR)/msa_fpu-msa_fpu.Po \
	./$(DEPDIR)/msa_logical_and_shift-msa_logical_and_shift.Po \
	./$(DEPDIR)/msa_shuffle-msa_shuffle.Po \
	./$(DEPDIR)/pc_instructions_r6.Po ./$(DEPDIR)/round.Po \
	./$(DEPDIR)/round_fpu64.Po ./$(DEPDIR)/test_fcsr.Po \
	./$(DEPDIR)/test_math.Po ./$(DEPDIR)/unaligned_load_store.Po \
	./$(DEPDIR)/vfp.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = FPUarithmetic.c LoadStore.c LoadStore1.c MIPS32int.c \
	MIPS32r6int.c MemCpyTest.c MoveIns.c SignalException.c \
	allexec.c block_size.c branch_pc.c branches.c branches_r6.c \
	bug320057-mips32.c change_fp_mode.c fp_r6.c fpu_branches.c \
	mips32_dsp.c mips32_dspr2.c msa_arithmetic.c msa_comparison.c \
	msa_data_transfer.c msa_fpu.c msa_logical_and_shift.c \
	msa_shuffle.c pc_instructions_r6.c round.c round_fpu64.c \
	test_fcsr.c $(test_math_SOURCES) unaligned_load_store.c vfp.c
DIST_SOURCES = FPUarithmetic.c LoadStore.c LoadStore1.c MIPS32int.c \
	MIPS32r6int.c MemCpyTest.c MoveIns.c SignalException.c \
	allexec.c block_size.c branch_pc.c branches.c branches_r6.c \
	bug320057-mips32.c change_fp_mode.c fp_r6.c fpu_branches.c \
	mips32_dsp.c mips32_dspr2.c msa_arithmetic.c msa_comparison.c \
	msa_data_transfer.c msa_fpu.c msa_logical_and_shift.c \
	msa_shuffle.c pc_instructions_r6.c round.c round_fpu64.c \
	test_fcsr.c $(test_math_SOURCES) unaligned_load_store.c vfp.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/Makefile.all.am \
	$(top_srcdir)/Makefile.tool-tests.am $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/home/liu2598/MemFuzz/src/third/valgrind-3.21.0/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = /usr/bin/ar
AUTOCONF = ${SHELL} '/home/liu2598/MemFuzz/src/third/valgrind-3.21.0/missing' autoconf
AUTOHEADER = ${SHELL} '/home/liu2598/MemFuzz/src/third/valgrind-3.21.0/missing' autoheader
AUTOMAKE = ${SHELL} '/home/liu2598/MemFuzz/src/third/valgrind-3.21.0/missing' automake-1.16
AWK = gawk
BOOST_CFLAGS = 
BOOST_LIBS = 
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = 
CCDEPMODE = depmode=gcc3
CFLAGS = 
CFLAGS_MPI = -g -O -fno-omit-frame-pointer -Wall -fpic
CPP = gcc -E
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFAULT_SUPP = ./xfree-3.supp ./xfree-4.supp glibc-2.X-drd.supp glibc-2.X-helgrind.supp glibc-2.X.supp 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIFF = diff -u
DIS_PATH = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ETAGS = etags
EXEEXT = 
FLAG_FALIGNED_NEW = -faligned-new
FLAG_FINLINE_FUNCTIONS = -finline-functions
FLAG_FNO_IPA_ICF = -fno-ipa-icf
FLAG_FNO_STACK_PROTECTOR = -fno-stack-protector
FLAG_FSANITIZE = 
FLAG_FSIZED_DEALLOCATION = -fsized-deallocation
FLAG_M32 =  -m32
FLAG_M64 = -m64
FLAG_MLONG_DOUBLE_128 = -mlong-double-128
FLAG_MMMX = -mmmx
FLAG_MSA = 
FLAG_MSSE = -msse
FLAG_NO_BUILD_ID = 
FLAG_NO_PIE = -no-pie
FLAG_OCTEON = 
FLAG_OCTEON2 = 
FLAG_PIE = -pie
FLAG_T_TEXT = -Ttext-segment
FLAG_UNLIMITED_INLINE_UNIT_GROWTH = --param inline-unit-growth=900
FLAG_W_CAST_ALIGN = -Wcast-align
FLAG_W_CAST_QUAL = -Wcast-qual
FLAG_W_EMPTY_BODY = -Wempty-body
FLAG_W_ENUM_CONVERSION = 
FLAG_W_EXTRA = -Wextra
FLAG_W_FORMAT = -Wformat
FLAG_W_FORMAT_SECURITY = -Wformat-security
FLAG_W_FORMAT_SIGNEDNESS = -Wformat-signedness
FLAG_W_IGNORED_QUALIFIERS = -Wignored-qualifiers
FLAG_W_IMPLICIT_FALLTHROUGH = -Wimplicit-fallthrough=2
FLAG_W_LOGICAL_OP = -Wlogical-op
FLAG_W_MISSING_PARAMETER_TYPE = -Wmissing-parameter-type
FLAG_W_NO_ALLOC_SIZE_LARGER_THAN = -Wno-alloc-size-larger-than
FLAG_W_NO_BUILTIN_MEMCPY_CHK_SIZE = 
FLAG_W_NO_EXPANSION_TO_DEFINED = -Wno-expansion-to-defined
FLAG_W_NO_FORMAT_OVERFLOW = -Wno-format-overflow
FLAG_W_NO_FORTIFY_SOURCE = 
FLAG_W_NO_FREE_NONHEAP_OBJECT = -Wno-free-nonheap-object
FLAG_W_NO_INCOMPATIBLE_POINTER_TYPES_DISCARDS_QUALIFIERS = 
FLAG_W_NO_INFINITE_RECURSION = 
FLAG_W_NO_MAYBE_UNINITIALIZED = -Wno-maybe-uninitialized
FLAG_W_NO_MEMSET_TRANSPOSED_ARGS = -Wno-memset-transposed-args
FLAG_W_NO_MISMATCHED_NEW_DELETE = 
FLAG_W_NO_NONNULL = -Wno-nonnull
FLAG_W_NO_NON_POWER_OF_TWO_ALIGNMENT = 
FLAG_W_NO_OVERFLOW = -Wno-overflow
FLAG_W_NO_POINTER_SIGN = -Wno-pointer-sign
FLAG_W_NO_SIGN_COMPARE = -Wno-sign-compare
FLAG_W_NO_STATIC_LOCAL_IN_INLINE = 
FLAG_W_NO_STRINGOP_OVERFLOW = -Wno-stringop-overflow
FLAG_W_NO_STRINGOP_OVERREAD = 
FLAG_W_NO_STRINGOP_TRUNCATION = 
FLAG_W_NO_SUSPICIOUS_BZERO = 
FLAG_W_NO_UNINITIALIZED = -Wno-uninitialized
FLAG_W_NO_UNUSED_BUT_SET_VARIABLE = -Wno-unused-but-set-variable
FLAG_W_NO_UNUSED_FUNCTION = -Wno-unused-function
FLAG_W_NO_USE_AFTER_FREE = 
FLAG_W_OLD_STYLE_DECLARATION = -Wold-style-declaration
FLAG_W_WRITE_STRINGS = -Wwrite-strings
GDB = /usr/bin/gdb
GLIBC_LIBC_PATH = */lib*/libc-2.*so*
GLIBC_LIBPTHREAD_PATH = */lib*/libpthread-2.*so*
GLIBC_VERSION = 2.27
GREP = /bin/grep
HWCAP_HAS_ALTIVEC = 
HWCAP_HAS_DFP = 
HWCAP_HAS_HTM = 
HWCAP_HAS_ISA_2_05 = 
HWCAP_HAS_ISA_2_06 = 
HWCAP_HAS_ISA_2_07 = 
HWCAP_HAS_ISA_3_00 = 
HWCAP_HAS_ISA_3_1 = 
HWCAP_HAS_MMA = 
HWCAP_HAS_VSX = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LDFLAGS_MPI = -fpic -shared
LIBOBJS = 
LIBS = 
LIB_UBSAN = 
LN_S = ln -s
LTLIBOBJS = 
LTO_AR = /usr/bin/ar
LTO_CFLAGS = 
LTO_RANLIB = ranlib
MAINT = #
MAKEINFO = ${SHELL} '/home/liu2598/MemFuzz/src/third/valgrind-3.21.0/missing' makeinfo
MKDIR_P = /bin/mkdir -p
MPI_CC = mpicc
OBJEXT = o
PACKAGE = valgrind
PACKAGE_BUGREPORT = valgrind-users@lists.sourceforge.net
PACKAGE_NAME = Valgrind
PACKAGE_STRING = Valgrind 3.21.0
PACKAGE_TARNAME = valgrind
PACKAGE_URL = 
PACKAGE_VERSION = 3.21.0
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PREFERRED_STACK_BOUNDARY_2 = -mpreferred-stack-boundary=2
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHA256SUM = sha256sum
SHELL = /bin/bash
SOLARIS_UNDEF_LARGESOURCE = 
STRIP = 
VALT_LOAD_ADDRESS_PRI = 0x58000000
VALT_LOAD_ADDRESS_SEC = 0x58000000
VERSION = 3.21.0
VGCONF_ABI = 
VGCONF_ARCH_PRI = amd64
VGCONF_ARCH_SEC = x86
VGCONF_OS = linux
VGCONF_PLATFORM_PRI_CAPS = AMD64_LINUX
VGCONF_PLATFORM_SEC_CAPS = X86_LINUX
VGCONF_PLATVARIANT = vanilla
VG_DATE = 28 Apr 2023
VG_TMPDIR = /tmp
VG_VER_MAJOR = 3
VG_VER_MINOR = 21
XCODE_DIR = 
XCRUN = 
abs_builddir = /home/liu2598/MemFuzz/src/third/valgrind-3.21.0/none/tests/mips32
abs_srcdir = /home/liu2598/MemFuzz/src/third/valgrind-3.21.0/none/tests/mips32
abs_top_builddir = /home/liu2598/MemFuzz/src/third/valgrind-3.21.0
abs_top_srcdir = /home/liu2598/MemFuzz/src/third/valgrind-3.21.0
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/liu2598/MemFuzz/src/third/valgrind-3.21.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/youwei/MemFuzz/src/third/valgrind-3.21.0/exe
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
inplacedir = $(top_builddir)/.in_place

#----------------------------------------------------------------------------
# Flags
#----------------------------------------------------------------------------

# Baseline flags for all compilations.  Aim here is to maximise
# performance and get whatever useful warnings we can out of gcc.
# -fno-builtin is important for defeating LLVM's idiom recognition
# that somehow causes VG_(memset) to get into infinite recursion.
AM_CFLAGS_BASE = -O2 -g -Wall -Wmissing-prototypes -Wshadow \
	-Wpointer-arith -Wstrict-prototypes -Wmissing-declarations \
	-Wcast-align -Wcast-qual -Wwrite-strings \
	-Wempty-body -Wformat -Wformat-signedness \
	-Wformat-security -Wignored-qualifiers \
	-Wmissing-parameter-type -Wlogical-op \
	 -Wimplicit-fallthrough=2 \
	-Wold-style-declaration -finline-functions \
	-fno-stack-protector  \
	-fno-strict-aliasing -fno-builtin $(am__append_1) \
	$(am__append_2)
#ISA_3_0_BUILD_FLAG = -DHAS_XSCVHPDP  -DHAS_ISA_3_00

# Power ISA flag for use by guest_ppc_helpers.c
##ISA_3_0_BUILD_FLAG = -DHAS_XSCVHPDP -DHAS_DARN -DHAS_ISA_3_00
ISA_3_0_BUILD_FLAG = 
AM_CFLAGS_PSO_BASE = -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
		     -fpic -fno-builtin -fno-ipa-icf

#AM_CFLAGS_PSO_BASE = -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
#		     -fpic -fPIC -fno-builtin


# These flags are used for building the preload shared objects (PSOs).
# The aim is to give reasonable performance but also to have good
# stack traces, since users often see stack traces extending 
# into (and through) the preloads.  Also, we must use any
# -mpreferred-stack-boundary flag to build the preload shared
# objects, since that risks misaligning the client's stack and
# results in segfaults like (eg) #324050.
#AM_CFLAGS_PSO_BASE = -dynamic \
#		     -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
#		     -fpic -fPIC -fno-builtin -fno-ipa-icf


# Flags for specific targets.
#
# Nb: the AM_CPPFLAGS_* values are suitable for building tools and auxprogs.
# For building the core, coregrind/Makefile.am files add some extra things.
AM_CPPFLAGS_AMD64_LINUX = -I$(top_srcdir) \
	-I$(top_srcdir)/include -I$(top_builddir)/include \
	-I$(top_srcdir)/VEX/pub -I$(top_builddir)/VEX/pub \
	-DVGA_amd64=1 -DVGO_linux=1 \
	-DVGP_amd64_linux=1 \
	-DVGPV_amd64_linux_vanilla=1 \
	$(am__append_3)
AM_CPPFLAGS_X86_LINUX =  \
	-I$(top_srcdir) \
	-I$(top_srcdir)/include \
	-I$(top_builddir)/include \
	-I$(top_srcdir)/VEX/pub \
	-I$(top_builddir)/VEX/pub \
	-DVGA_x86=1 \
	-DVGO_linux=1 \
	-DVGP_x86_linux=1 \
	-DVGPV_x86_linux_vanilla=1 \
	$(am__append_4)
AM_FLAG_M3264_X86_LINUX =  -m32
AM_CFLAGS_X86_LINUX =  -m32 -mpreferred-stack-boundary=2 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_X86_LINUX =  -m32 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_LINUX =  -m32 -g
AM_FLAG_M3264_AMD64_LINUX = -m64
AM_CFLAGS_AMD64_LINUX = -m64 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_AMD64_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_LINUX = -m64 -g
AM_FLAG_M3264_PPC32_LINUX =  -m32
AM_CFLAGS_PPC32_LINUX =  -m32 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC32_LINUX =  -m32 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC32_LINUX =  -m32 -g
AM_FLAG_M3264_PPC64BE_LINUX = -m64
AM_CFLAGS_PPC64BE_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC64BE_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC64BE_LINUX = -m64 -g
AM_FLAG_M3264_PPC64LE_LINUX = -m64
AM_CFLAGS_PPC64LE_LINUX = -m64 $(AM_CFLAGS_BASE) $(ISA_3_0_BUILD_FLAG)
AM_CFLAGS_PSO_PPC64LE_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC64LE_LINUX = -m64 -g
AM_FLAG_M3264_X86_FREEBSD =  -m32
AM_CFLAGS_X86_FREEBSD =  -m32 -mpreferred-stack-boundary=2 \
			      $(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_X86_FREEBSD =  -m32 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_FREEBSD =  -m32 -g
AM_FLAG_M3264_ARM_LINUX =  -m32
AM_CFLAGS_ARM_LINUX =  -m32 \
			 	$(AM_CFLAGS_BASE) -marm -mcpu=cortex-a8

AM_CFLAGS_PSO_ARM_LINUX =  -m32 $(AM_CFLAGS_BASE) \
				-marm -mcpu=cortex-a8 $(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_ARM_LINUX =  -m32 \
				-marm -mcpu=cortex-a8 -g

AM_FLAG_M3264_ARM64_LINUX = -m64
AM_CFLAGS_ARM64_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_ARM64_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_ARM64_LINUX = -m64 -g
AM_FLAG_M3264_AMD64_FREEBSD = -m64
AM_CFLAGS_AMD64_FREEBSD = -m64 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_AMD64_FREEBSD = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_FREEBSD = -m64 -g
AM_FLAG_M3264_X86_DARWIN = -arch i386
AM_CFLAGS_X86_DARWIN = $(WERROR) -arch i386 $(AM_CFLAGS_BASE) \
				-mmacosx-version-min=10.6 \
				-fno-pic -fno-PIC

AM_CFLAGS_PSO_X86_DARWIN = $(AM_CFLAGS_X86_DARWIN) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_DARWIN = -arch i386 -g
AM_FLAG_M3264_AMD64_DARWIN = -arch x86_64
AM_CFLAGS_AMD64_DARWIN = $(WERROR) -arch x86_64 $(AM_CFLAGS_BASE) \
			    -mmacosx-version-min=10.6

AM_CFLAGS_PSO_AMD64_DARWIN = $(AM_CFLAGS_AMD64_DARWIN) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_DARWIN = -arch x86_64 -g
AM_FLAG_M3264_S390X_LINUX = -m64
AM_CFLAGS_S390X_LINUX = -m64 $(AM_CFLAGS_BASE) -fomit-frame-pointer
AM_CFLAGS_PSO_S390X_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_S390X_LINUX = -m64 -g -mzarch -march=z900
AM_FLAG_M3264_MIPS32_LINUX =  -m32
AM_CFLAGS_MIPS32_LINUX =  -m32 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_MIPS32_LINUX =  -m32 $(AM_CFLAGS_BASE) \
				$(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_MIPS32_LINUX =  -m32 -g
AM_FLAG_M3264_NANOMIPS_LINUX =  -m32
AM_CFLAGS_NANOMIPS_LINUX =  -m32 $(AM_CFLAGS_BASE) -mno-jump-table-opt
AM_CFLAGS_PSO_NANOMIPS_LINUX =  -m32 $(AM_CFLAGS_BASE) \
				$(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_NANOMIPS_LINUX =  -m32 -g
AM_FLAG_M3264_MIPS64_LINUX = -m64
AM_CFLAGS_MIPS64_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_MIPS64_LINUX = -m64 $(AM_CFLAGS_BASE) \
				$(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_MIPS64_LINUX = -m64 -g
AM_FLAG_M3264_X86_SOLARIS =  -m32
AM_CFLAGS_X86_SOLARIS =  -m32 -mpreferred-stack-boundary=2 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer 

AM_CFLAGS_PSO_X86_SOLARIS =  -m32 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_SOLARIS =  -m32 -g -D_ASM
AM_FLAG_M3264_AMD64_SOLARIS = -m64
AM_CFLAGS_AMD64_SOLARIS = -m64 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_AMD64_SOLARIS = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_SOLARIS = -m64 -g -D_ASM

# Flags for the primary target.  These must be used to build the
# regtests and performance tests.  In fact, these must be used to
# build anything which is built only once on a dual-arch build.
#
AM_FLAG_M3264_PRI = $(AM_FLAG_M3264_AMD64_LINUX)
AM_CPPFLAGS_PRI = $(AM_CPPFLAGS_AMD64_LINUX)
AM_CFLAGS_PRI = $(AM_CFLAGS_AMD64_LINUX)
AM_CCASFLAGS_PRI = $(AM_CCASFLAGS_AMD64_LINUX)
#AM_FLAG_M3264_SEC = 
AM_FLAG_M3264_SEC = $(AM_FLAG_M3264_X86_LINUX)

# Baseline link flags for making vgpreload shared objects.
#
PRELOAD_LDFLAGS_COMMON_LINUX = -nodefaultlibs -shared \
	-Wl,-z,interpose,-z,initfirst $(am__append_6)
PRELOAD_LDFLAGS_COMMON_FREEBSD = -nodefaultlibs -shared -Wl,-z,interpose,-z,initfirst
PRELOAD_LDFLAGS_COMMON_DARWIN = -dynamic -dynamiclib -all_load
PRELOAD_LDFLAGS_COMMON_SOLARIS = -nodefaultlibs -shared \
	-Wl,-z,interpose,-z,initfirst $(am__append_5)
PRELOAD_LDFLAGS_X86_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX)  -m32
PRELOAD_LDFLAGS_AMD64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX)  -m32
PRELOAD_LDFLAGS_PPC64BE_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC64LE_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_ARM_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX)  -m32
PRELOAD_LDFLAGS_ARM64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_X86_FREEBSD = $(PRELOAD_LDFLAGS_COMMON_FREEBSD)  -m32
PRELOAD_LDFLAGS_AMD64_FREEBSD = $(PRELOAD_LDFLAGS_COMMON_FREEBSD) -m64
PRELOAD_LDFLAGS_X86_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch i386
PRELOAD_LDFLAGS_AMD64_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch x86_64
PRELOAD_LDFLAGS_S390X_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_MIPS32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX)  -m32
PRELOAD_LDFLAGS_NANOMIPS_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX)  -m32
PRELOAD_LDFLAGS_MIPS64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_X86_SOLARIS = $(PRELOAD_LDFLAGS_COMMON_SOLARIS)  -m32
PRELOAD_LDFLAGS_AMD64_SOLARIS = $(PRELOAD_LDFLAGS_COMMON_SOLARIS) -m64
AM_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/include \
	-I$(top_srcdir)/coregrind -I$(top_builddir)/include \
	-I$(top_srcdir)/VEX/pub -I$(top_builddir)/VEX/pub \
	-DVGA_amd64=1 -DVGO_linux=1 \
	-DVGP_amd64_linux=1 \
	-DVGPV_amd64_linux_vanilla=1 \
	$(am__append_7) $(am__append_8)

# Nb: Tools need to augment these flags with an arch-selection option, such
# as $(AM_FLAG_M3264_PRI).
AM_CFLAGS = -Winline -Wall -Wshadow -Wno-long-long -g \
	-fno-stack-protector $(am__append_9) $(am__append_10) \
	 -m32 $(am__empty)
AM_CXXFLAGS = -Winline -Wall -Wshadow -Wno-long-long -g \
	-fno-stack-protector $(am__append_11)  -m32
# Include AM_CPPFLAGS in AM_CCASFLAGS to allow for older versions of
# automake;  see comments in Makefile.all.am for more detail.
AM_CCASFLAGS = $(AM_CPPFLAGS)  -m32
#noinst_DSYMS = $(check_PROGRAMS)
dist_noinst_SCRIPTS = filter_stderr
EXTRA_DIST = \
	block_size.stdout.exp block_size.stderr.exp block_size.vgtest \
	branch_pc.stdout.exp branch_pc.stderr.exp branch_pc.vgtest \
	branches.stdout.exp branches.stderr.exp branches.vgtest \
	branches.stdout.exp-r6 \
	branches_r6.stdout.exp branches_r6.stderr.exp branches_r6.vgtest \
	bug320057-mips32.stdout.exp bug320057-mips32.stderr.exp \
	bug320057-mips32.vgtest \
	change_fp_mode.stdout.exp change_fp_mode.stdout.exp-fpu32 \
	change_fp_mode.stderr.exp change_fp_mode.vgtest \
	change_fp_mode.stdout.exp-r6 \
	FPUarithmetic.stdout.exp FPUarithmetic.stdout.exp-mips32 \
	FPUarithmetic.stderr.exp FPUarithmetic.vgtest \
	fpu_branches.stdout.exp fpu_branches.stderr.exp fpu_branches.vgtest \
	LoadStore.stdout.exp LoadStore.stdout.exp-BE LoadStore.stderr.exp \
	LoadStore.vgtest LoadStore.stdout.exp-r6-LE LoadStore.stdout.exp-r6-BE \
	LoadStore1.stdout.exp LoadStore1.stdout.exp-LE LoadStore1.stderr.exp \
	LoadStore1.vgtest LoadStore1.stdout.exp-r6-LE LoadStore1.stdout.exp-r6-BE\
	MemCpyTest.stdout.exp MemCpyTest.stderr.exp MemCpyTest.vgtest \
	MIPS32int.stdout.exp-mips32-BE MIPS32int.stdout.exp-mips32r2-BE \
	MIPS32int.stdout.exp-mips32-LE MIPS32int.stdout.exp-mips32r2-LE \
	MIPS32int.stderr.exp MIPS32int.vgtest \
	MIPS32int.stdout.exp-mips32r6-LE MIPS32int.stdout.exp-mips32r6-BE \
	MIPS32r6int.stdout.exp MIPS32r6int.stderr.exp MIPS32r6int.vgtest \
	mips32_dsp.stdout.exp-LE mips32_dsp.stdout.exp-BE \
	mips32_dsp.stderr.exp mips32_dsp.vgtest \
	mips32_dspr2.stdout.exp mips32_dspr2.stderr.exp \
	mips32_dspr2.vgtest \
	MoveIns.stdout.exp MoveIns.stdout.exp-BE \
	MoveIns.stdout.exp-mips32r2-BE MoveIns.stdout.exp-mips32r2-LE \
	MoveIns.stderr.exp MoveIns.vgtest \
	MoveIns.stdout.exp-mips32r6-BE MoveIns.stdout.exp-mips32r6-LE \
	pc_instructions_r6.stdout.exp pc_instructions_r6.stderr.exp \
	pc_instructions_r6.vgtest \
	msa_arithmetic.stderr.exp msa_arithmetic.stdout.exp msa_arithmetic.vgtest \
	msa_comparison.stderr.exp msa_comparison.stdout.exp msa_comparison.vgtest \
	msa_data_transfer.stderr.exp msa_data_transfer.stdout.exp \
	msa_data_transfer.stdout.exp-BE msa_data_transfer.vgtest \
	msa_fpu.stderr.exp msa_fpu.stdout.exp msa_fpu.vgtest \
	msa_logical_and_shift.stderr.exp msa_logical_and_shift.stdout.exp \
	msa_logical_and_shift.vgtest msa_shuffle.stderr.exp msa_shuffle.stdout.exp \
	msa_shuffle.vgtest \
	round_fpu64.stdout.exp round_fpu64.stdout.exp-fpu32 \
	round_fpu64.stderr.exp round_fpu64.vgtest \
	round.stdout.exp round.stderr.exp round.vgtest \
	fp_r6.stdout.exp fp_r6.stderr.exp fp_r6.vgtest \
	SignalException.stderr.exp SignalException.vgtest \
	test_fcsr.stdout.exp test_fcsr.stderr.exp test_fcsr.vgtest \
	test_math.stdout.exp test_math.stderr.exp test_math.vgtest \
	unaligned_load_store.stdout.exp-LE unaligned_load_store.stdout.exp-BE \
	unaligned_load_store.stderr.exp unaligned_load_store.vgtest \
	vfp.stdout.exp-mips32-BE vfp.stdout.exp-mips32r2-BE \
	vfp.stdout.exp-mips32-LE vfp.stdout.exp-mips32r2-LE vfp.stderr.exp \
	vfp.stdout.exp-mips32r2-fpu_64-BE vfp.stdout.exp-mips32r2-fpu_64-LE \
	vfp.vgtest

allexec_CFLAGS = $(AM_CFLAGS) -Wno-nonnull
#msa_arithmetic_CFLAGS = $(AM_CFLAGS) 
#msa_comparison_CFLAGS = $(AM_CFLAGS) 
#msa_data_transfer_CFLAGS = $(AM_CFLAGS) 
#msa_fpu_CFLAGS = $(AM_CFLAGS)  -lm
#msa_logical_and_shift_CFLAGS = $(AM_CFLAGS) 
#msa_shuffle_CFLAGS = $(AM_CFLAGS) 
bug320057_mips32_LDFLAGS = -lrt

# C++ tests
test_math_SOURCES = test_math.cpp
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.tool-tests.am $(top_srcdir)/Makefile.all.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign none/tests/mips32/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign none/tests/mips32/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/Makefile.tool-tests.am $(top_srcdir)/Makefile.all.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

FPUarithmetic$(EXEEXT): $(FPUarithmetic_OBJECTS) $(FPUarithmetic_DEPENDENCIES) $(EXTRA_FPUarithmetic_DEPENDENCIES) 
	@rm -f FPUarithmetic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(FPUarithmetic_OBJECTS) $(FPUarithmetic_LDADD) $(LIBS)

LoadStore$(EXEEXT): $(LoadStore_OBJECTS) $(LoadStore_DEPENDENCIES) $(EXTRA_LoadStore_DEPENDENCIES) 
	@rm -f LoadStore$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(LoadStore_OBJECTS) $(LoadStore_LDADD) $(LIBS)

LoadStore1$(EXEEXT): $(LoadStore1_OBJECTS) $(LoadStore1_DEPENDENCIES) $(EXTRA_LoadStore1_DEPENDENCIES) 
	@rm -f LoadStore1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(LoadStore1_OBJECTS) $(LoadStore1_LDADD) $(LIBS)

MIPS32int$(EXEEXT): $(MIPS32int_OBJECTS) $(MIPS32int_DEPENDENCIES) $(EXTRA_MIPS32int_DEPENDENCIES) 
	@rm -f MIPS32int$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(MIPS32int_OBJECTS) $(MIPS32int_LDADD) $(LIBS)

MIPS32r6int$(EXEEXT): $(MIPS32r6int_OBJECTS) $(MIPS32r6int_DEPENDENCIES) $(EXTRA_MIPS32r6int_DEPENDENCIES) 
	@rm -f MIPS32r6int$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(MIPS32r6int_OBJECTS) $(MIPS32r6int_LDADD) $(LIBS)

MemCpyTest$(EXEEXT): $(MemCpyTest_OBJECTS) $(MemCpyTest_DEPENDENCIES) $(EXTRA_MemCpyTest_DEPENDENCIES) 
	@rm -f MemCpyTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(MemCpyTest_OBJECTS) $(MemCpyTest_LDADD) $(LIBS)

MoveIns$(EXEEXT): $(MoveIns_OBJECTS) $(MoveIns_DEPENDENCIES) $(EXTRA_MoveIns_DEPENDENCIES) 
	@rm -f MoveIns$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(MoveIns_OBJECTS) $(MoveIns_LDADD) $(LIBS)

SignalException$(EXEEXT): $(SignalException_OBJECTS) $(SignalException_DEPENDENCIES) $(EXTRA_SignalException_DEPENDENCIES) 
	@rm -f SignalException$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(SignalException_OBJECTS) $(SignalException_LDADD) $(LIBS)

allexec$(EXEEXT): $(allexec_OBJECTS) $(allexec_DEPENDENCIES) $(EXTRA_allexec_DEPENDENCIES) 
	@rm -f allexec$(EXEEXT)
	$(AM_V_CCLD)$(allexec_LINK) $(allexec_OBJECTS) $(allexec_LDADD) $(LIBS)

block_size$(EXEEXT): $(block_size_OBJECTS) $(block_size_DEPENDENCIES) $(EXTRA_block_size_DEPENDENCIES) 
	@rm -f block_size$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(block_size_OBJECTS) $(block_size_LDADD) $(LIBS)

branch_pc$(EXEEXT): $(branch_pc_OBJECTS) $(branch_pc_DEPENDENCIES) $(EXTRA_branch_pc_DEPENDENCIES) 
	@rm -f branch_pc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(branch_pc_OBJECTS) $(branch_pc_LDADD) $(LIBS)

branches$(EXEEXT): $(branches_OBJECTS) $(branches_DEPENDENCIES) $(EXTRA_branches_DEPENDENCIES) 
	@rm -f branches$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(branches_OBJECTS) $(branches_LDADD) $(LIBS)

branches_r6$(EXEEXT): $(branches_r6_OBJECTS) $(branches_r6_DEPENDENCIES) $(EXTRA_branches_r6_DEPENDENCIES) 
	@rm -f branches_r6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(branches_r6_OBJECTS) $(branches_r6_LDADD) $(LIBS)

bug320057-mips32$(EXEEXT): $(bug320057_mips32_OBJECTS) $(bug320057_mips32_DEPENDENCIES) $(EXTRA_bug320057_mips32_DEPENDENCIES) 
	@rm -f bug320057-mips32$(EXEEXT)
	$(AM_V_CCLD)$(bug320057_mips32_LINK) $(bug320057_mips32_OBJECTS) $(bug320057_mips32_LDADD) $(LIBS)

change_fp_mode$(EXEEXT): $(change_fp_mode_OBJECTS) $(change_fp_mode_DEPENDENCIES) $(EXTRA_change_fp_mode_DEPENDENCIES) 
	@rm -f change_fp_mode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(change_fp_mode_OBJECTS) $(change_fp_mode_LDADD) $(LIBS)

fp_r6$(EXEEXT): $(fp_r6_OBJECTS) $(fp_r6_DEPENDENCIES) $(EXTRA_fp_r6_DEPENDENCIES) 
	@rm -f fp_r6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fp_r6_OBJECTS) $(fp_r6_LDADD) $(LIBS)

fpu_branches$(EXEEXT): $(fpu_branches_OBJECTS) $(fpu_branches_DEPENDENCIES) $(EXTRA_fpu_branches_DEPENDENCIES) 
	@rm -f fpu_branches$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fpu_branches_OBJECTS) $(fpu_branches_LDADD) $(LIBS)

mips32_dsp$(EXEEXT): $(mips32_dsp_OBJECTS) $(mips32_dsp_DEPENDENCIES) $(EXTRA_mips32_dsp_DEPENDENCIES) 
	@rm -f mips32_dsp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mips32_dsp_OBJECTS) $(mips32_dsp_LDADD) $(LIBS)

mips32_dspr2$(EXEEXT): $(mips32_dspr2_OBJECTS) $(mips32_dspr2_DEPENDENCIES) $(EXTRA_mips32_dspr2_DEPENDENCIES) 
	@rm -f mips32_dspr2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mips32_dspr2_OBJECTS) $(mips32_dspr2_LDADD) $(LIBS)

msa_arithmetic$(EXEEXT): $(msa_arithmetic_OBJECTS) $(msa_arithmetic_DEPENDENCIES) $(EXTRA_msa_arithmetic_DEPENDENCIES) 
	@rm -f msa_arithmetic$(EXEEXT)
	$(AM_V_CCLD)$(msa_arithmetic_LINK) $(msa_arithmetic_OBJECTS) $(msa_arithmetic_LDADD) $(LIBS)

msa_comparison$(EXEEXT): $(msa_comparison_OBJECTS) $(msa_comparison_DEPENDENCIES) $(EXTRA_msa_comparison_DEPENDENCIES) 
	@rm -f msa_comparison$(EXEEXT)
	$(AM_V_CCLD)$(msa_comparison_LINK) $(msa_comparison_OBJECTS) $(msa_comparison_LDADD) $(LIBS)

msa_data_transfer$(EXEEXT): $(msa_data_transfer_OBJECTS) $(msa_data_transfer_DEPENDENCIES) $(EXTRA_msa_data_transfer_DEPENDENCIES) 
	@rm -f msa_data_transfer$(EXEEXT)
	$(AM_V_CCLD)$(msa_data_transfer_LINK) $(msa_data_transfer_OBJECTS) $(msa_data_transfer_LDADD) $(LIBS)

msa_fpu$(EXEEXT): $(msa_fpu_OBJECTS) $(msa_fpu_DEPENDENCIES) $(EXTRA_msa_fpu_DEPENDENCIES) 
	@rm -f msa_fpu$(EXEEXT)
	$(AM_V_CCLD)$(msa_fpu_LINK) $(msa_fpu_OBJECTS) $(msa_fpu_LDADD) $(LIBS)

msa_logical_and_shift$(EXEEXT): $(msa_logical_and_shift_OBJECTS) $(msa_logical_and_shift_DEPENDENCIES) $(EXTRA_msa_logical_and_shift_DEPENDENCIES) 
	@rm -f msa_logical_and_shift$(EXEEXT)
	$(AM_V_CCLD)$(msa_logical_and_shift_LINK) $(msa_logical_and_shift_OBJECTS) $(msa_logical_and_shift_LDADD) $(LIBS)

msa_shuffle$(EXEEXT): $(msa_shuffle_OBJECTS) $(msa_shuffle_DEPENDENCIES) $(EXTRA_msa_shuffle_DEPENDENCIES) 
	@rm -f msa_shuffle$(EXEEXT)
	$(AM_V_CCLD)$(msa_shuffle_LINK) $(msa_shuffle_OBJECTS) $(msa_shuffle_LDADD) $(LIBS)

pc_instructions_r6$(EXEEXT): $(pc_instructions_r6_OBJECTS) $(pc_instructions_r6_DEPENDENCIES) $(EXTRA_pc_instructions_r6_DEPENDENCIES) 
	@rm -f pc_instructions_r6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pc_instructions_r6_OBJECTS) $(pc_instructions_r6_LDADD) $(LIBS)

round$(EXEEXT): $(round_OBJECTS) $(round_DEPENDENCIES) $(EXTRA_round_DEPENDENCIES) 
	@rm -f round$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(round_OBJECTS) $(round_LDADD) $(LIBS)

round_fpu64$(EXEEXT): $(round_fpu64_OBJECTS) $(round_fpu64_DEPENDENCIES) $(EXTRA_round_fpu64_DEPENDENCIES) 
	@rm -f round_fpu64$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(round_fpu64_OBJECTS) $(round_fpu64_LDADD) $(LIBS)

test_fcsr$(EXEEXT): $(test_fcsr_OBJECTS) $(test_fcsr_DEPENDENCIES) $(EXTRA_test_fcsr_DEPENDENCIES) 
	@rm -f test_fcsr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_fcsr_OBJECTS) $(test_fcsr_LDADD) $(LIBS)

test_math$(EXEEXT): $(test_math_OBJECTS) $(test_math_DEPENDENCIES) $(EXTRA_test_math_DEPENDENCIES) 
	@rm -f test_math$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_math_OBJECTS) $(test_math_LDADD) $(LIBS)

unaligned_load_store$(EXEEXT): $(unaligned_load_store_OBJECTS) $(unaligned_load_store_DEPENDENCIES) $(EXTRA_unaligned_load_store_DEPENDENCIES) 
	@rm -f unaligned_load_store$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unaligned_load_store_OBJECTS) $(unaligned_load_store_LDADD) $(LIBS)

vfp$(EXEEXT): $(vfp_OBJECTS) $(vfp_DEPENDENCIES) $(EXTRA_vfp_DEPENDENCIES) 
	@rm -f vfp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vfp_OBJECTS) $(vfp_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/FPUarithmetic.Po # am--include-marker
include ./$(DEPDIR)/LoadStore.Po # am--include-marker
include ./$(DEPDIR)/LoadStore1.Po # am--include-marker
include ./$(DEPDIR)/MIPS32int.Po # am--include-marker
include ./$(DEPDIR)/MIPS32r6int.Po # am--include-marker
include ./$(DEPDIR)/MemCpyTest.Po # am--include-marker
include ./$(DEPDIR)/MoveIns.Po # am--include-marker
include ./$(DEPDIR)/SignalException.Po # am--include-marker
include ./$(DEPDIR)/allexec-allexec.Po # am--include-marker
include ./$(DEPDIR)/block_size.Po # am--include-marker
include ./$(DEPDIR)/branch_pc.Po # am--include-marker
include ./$(DEPDIR)/branches.Po # am--include-marker
include ./$(DEPDIR)/branches_r6.Po # am--include-marker
include ./$(DEPDIR)/bug320057-mips32.Po # am--include-marker
include ./$(DEPDIR)/change_fp_mode.Po # am--include-marker
include ./$(DEPDIR)/fp_r6.Po # am--include-marker
include ./$(DEPDIR)/fpu_branches.Po # am--include-marker
include ./$(DEPDIR)/mips32_dsp.Po # am--include-marker
include ./$(DEPDIR)/mips32_dspr2.Po # am--include-marker
include ./$(DEPDIR)/msa_arithmetic-msa_arithmetic.Po # am--include-marker
include ./$(DEPDIR)/msa_comparison-msa_comparison.Po # am--include-marker
include ./$(DEPDIR)/msa_data_transfer-msa_data_transfer.Po # am--include-marker
include ./$(DEPDIR)/msa_fpu-msa_fpu.Po # am--include-marker
include ./$(DEPDIR)/msa_logical_and_shift-msa_logical_and_shift.Po # am--include-marker
include ./$(DEPDIR)/msa_shuffle-msa_shuffle.Po # am--include-marker
include ./$(DEPDIR)/pc_instructions_r6.Po # am--include-marker
include ./$(DEPDIR)/round.Po # am--include-marker
include ./$(DEPDIR)/round_fpu64.Po # am--include-marker
include ./$(DEPDIR)/test_fcsr.Po # am--include-marker
include ./$(DEPDIR)/test_math.Po # am--include-marker
include ./$(DEPDIR)/unaligned_load_store.Po # am--include-marker
include ./$(DEPDIR)/vfp.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

allexec-allexec.o: allexec.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(allexec_CFLAGS) $(CFLAGS) -MT allexec-allexec.o -MD -MP -MF $(DEPDIR)/allexec-allexec.Tpo -c -o allexec-allexec.o `test -f 'allexec.c' || echo '$(srcdir)/'`allexec.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/allexec-allexec.Tpo $(DEPDIR)/allexec-allexec.Po
#	$(AM_V_CC)source='allexec.c' object='allexec-allexec.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(allexec_CFLAGS) $(CFLAGS) -c -o allexec-allexec.o `test -f 'allexec.c' || echo '$(srcdir)/'`allexec.c

allexec-allexec.obj: allexec.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(allexec_CFLAGS) $(CFLAGS) -MT allexec-allexec.obj -MD -MP -MF $(DEPDIR)/allexec-allexec.Tpo -c -o allexec-allexec.obj `if test -f 'allexec.c'; then $(CYGPATH_W) 'allexec.c'; else $(CYGPATH_W) '$(srcdir)/allexec.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/allexec-allexec.Tpo $(DEPDIR)/allexec-allexec.Po
#	$(AM_V_CC)source='allexec.c' object='allexec-allexec.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(allexec_CFLAGS) $(CFLAGS) -c -o allexec-allexec.obj `if test -f 'allexec.c'; then $(CYGPATH_W) 'allexec.c'; else $(CYGPATH_W) '$(srcdir)/allexec.c'; fi`

msa_arithmetic-msa_arithmetic.o: msa_arithmetic.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_arithmetic_CFLAGS) $(CFLAGS) -MT msa_arithmetic-msa_arithmetic.o -MD -MP -MF $(DEPDIR)/msa_arithmetic-msa_arithmetic.Tpo -c -o msa_arithmetic-msa_arithmetic.o `test -f 'msa_arithmetic.c' || echo '$(srcdir)/'`msa_arithmetic.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/msa_arithmetic-msa_arithmetic.Tpo $(DEPDIR)/msa_arithmetic-msa_arithmetic.Po
#	$(AM_V_CC)source='msa_arithmetic.c' object='msa_arithmetic-msa_arithmetic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_arithmetic_CFLAGS) $(CFLAGS) -c -o msa_arithmetic-msa_arithmetic.o `test -f 'msa_arithmetic.c' || echo '$(srcdir)/'`msa_arithmetic.c

msa_arithmetic-msa_arithmetic.obj: msa_arithmetic.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_arithmetic_CFLAGS) $(CFLAGS) -MT msa_arithmetic-msa_arithmetic.obj -MD -MP -MF $(DEPDIR)/msa_arithmetic-msa_arithmetic.Tpo -c -o msa_arithmetic-msa_arithmetic.obj `if test -f 'msa_arithmetic.c'; then $(CYGPATH_W) 'msa_arithmetic.c'; else $(CYGPATH_W) '$(srcdir)/msa_arithmetic.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/msa_arithmetic-msa_arithmetic.Tpo $(DEPDIR)/msa_arithmetic-msa_arithmetic.Po
#	$(AM_V_CC)source='msa_arithmetic.c' object='msa_arithmetic-msa_arithmetic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_arithmetic_CFLAGS) $(CFLAGS) -c -o msa_arithmetic-msa_arithmetic.obj `if test -f 'msa_arithmetic.c'; then $(CYGPATH_W) 'msa_arithmetic.c'; else $(CYGPATH_W) '$(srcdir)/msa_arithmetic.c'; fi`

msa_comparison-msa_comparison.o: msa_comparison.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_comparison_CFLAGS) $(CFLAGS) -MT msa_comparison-msa_comparison.o -MD -MP -MF $(DEPDIR)/msa_comparison-msa_comparison.Tpo -c -o msa_comparison-msa_comparison.o `test -f 'msa_comparison.c' || echo '$(srcdir)/'`msa_comparison.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/msa_comparison-msa_comparison.Tpo $(DEPDIR)/msa_comparison-msa_comparison.Po
#	$(AM_V_CC)source='msa_comparison.c' object='msa_comparison-msa_comparison.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_comparison_CFLAGS) $(CFLAGS) -c -o msa_comparison-msa_comparison.o `test -f 'msa_comparison.c' || echo '$(srcdir)/'`msa_comparison.c

msa_comparison-msa_comparison.obj: msa_comparison.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_comparison_CFLAGS) $(CFLAGS) -MT msa_comparison-msa_comparison.obj -MD -MP -MF $(DEPDIR)/msa_comparison-msa_comparison.Tpo -c -o msa_comparison-msa_comparison.obj `if test -f 'msa_comparison.c'; then $(CYGPATH_W) 'msa_comparison.c'; else $(CYGPATH_W) '$(srcdir)/msa_comparison.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/msa_comparison-msa_comparison.Tpo $(DEPDIR)/msa_comparison-msa_comparison.Po
#	$(AM_V_CC)source='msa_comparison.c' object='msa_comparison-msa_comparison.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_comparison_CFLAGS) $(CFLAGS) -c -o msa_comparison-msa_comparison.obj `if test -f 'msa_comparison.c'; then $(CYGPATH_W) 'msa_comparison.c'; else $(CYGPATH_W) '$(srcdir)/msa_comparison.c'; fi`

msa_data_transfer-msa_data_transfer.o: msa_data_transfer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_data_transfer_CFLAGS) $(CFLAGS) -MT msa_data_transfer-msa_data_transfer.o -MD -MP -MF $(DEPDIR)/msa_data_transfer-msa_data_transfer.Tpo -c -o msa_data_transfer-msa_data_transfer.o `test -f 'msa_data_transfer.c' || echo '$(srcdir)/'`msa_data_transfer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/msa_data_transfer-msa_data_transfer.Tpo $(DEPDIR)/msa_data_transfer-msa_data_transfer.Po
#	$(AM_V_CC)source='msa_data_transfer.c' object='msa_data_transfer-msa_data_transfer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_data_transfer_CFLAGS) $(CFLAGS) -c -o msa_data_transfer-msa_data_transfer.o `test -f 'msa_data_transfer.c' || echo '$(srcdir)/'`msa_data_transfer.c

msa_data_transfer-msa_data_transfer.obj: msa_data_transfer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_data_transfer_CFLAGS) $(CFLAGS) -MT msa_data_transfer-msa_data_transfer.obj -MD -MP -MF $(DEPDIR)/msa_data_transfer-msa_data_transfer.Tpo -c -o msa_data_transfer-msa_data_transfer.obj `if test -f 'msa_data_transfer.c'; then $(CYGPATH_W) 'msa_data_transfer.c'; else $(CYGPATH_W) '$(srcdir)/msa_data_transfer.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/msa_data_transfer-msa_data_transfer.Tpo $(DEPDIR)/msa_data_transfer-msa_data_transfer.Po
#	$(AM_V_CC)source='msa_data_transfer.c' object='msa_data_transfer-msa_data_transfer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_data_transfer_CFLAGS) $(CFLAGS) -c -o msa_data_transfer-msa_data_transfer.obj `if test -f 'msa_data_transfer.c'; then $(CYGPATH_W) 'msa_data_transfer.c'; else $(CYGPATH_W) '$(srcdir)/msa_data_transfer.c'; fi`

msa_fpu-msa_fpu.o: msa_fpu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_fpu_CFLAGS) $(CFLAGS) -MT msa_fpu-msa_fpu.o -MD -MP -MF $(DEPDIR)/msa_fpu-msa_fpu.Tpo -c -o msa_fpu-msa_fpu.o `test -f 'msa_fpu.c' || echo '$(srcdir)/'`msa_fpu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/msa_fpu-msa_fpu.Tpo $(DEPDIR)/msa_fpu-msa_fpu.Po
#	$(AM_V_CC)source='msa_fpu.c' object='msa_fpu-msa_fpu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_fpu_CFLAGS) $(CFLAGS) -c -o msa_fpu-msa_fpu.o `test -f 'msa_fpu.c' || echo '$(srcdir)/'`msa_fpu.c

msa_fpu-msa_fpu.obj: msa_fpu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_fpu_CFLAGS) $(CFLAGS) -MT msa_fpu-msa_fpu.obj -MD -MP -MF $(DEPDIR)/msa_fpu-msa_fpu.Tpo -c -o msa_fpu-msa_fpu.obj `if test -f 'msa_fpu.c'; then $(CYGPATH_W) 'msa_fpu.c'; else $(CYGPATH_W) '$(srcdir)/msa_fpu.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/msa_fpu-msa_fpu.Tpo $(DEPDIR)/msa_fpu-msa_fpu.Po
#	$(AM_V_CC)source='msa_fpu.c' object='msa_fpu-msa_fpu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_fpu_CFLAGS) $(CFLAGS) -c -o msa_fpu-msa_fpu.obj `if test -f 'msa_fpu.c'; then $(CYGPATH_W) 'msa_fpu.c'; else $(CYGPATH_W) '$(srcdir)/msa_fpu.c'; fi`

msa_logical_and_shift-msa_logical_and_shift.o: msa_logical_and_shift.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_logical_and_shift_CFLAGS) $(CFLAGS) -MT msa_logical_and_shift-msa_logical_and_shift.o -MD -MP -MF $(DEPDIR)/msa_logical_and_shift-msa_logical_and_shift.Tpo -c -o msa_logical_and_shift-msa_logical_and_shift.o `test -f 'msa_logical_and_shift.c' || echo '$(srcdir)/'`msa_logical_and_shift.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/msa_logical_and_shift-msa_logical_and_shift.Tpo $(DEPDIR)/msa_logical_and_shift-msa_logical_and_shift.Po
#	$(AM_V_CC)source='msa_logical_and_shift.c' object='msa_logical_and_shift-msa_logical_and_shift.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_logical_and_shift_CFLAGS) $(CFLAGS) -c -o msa_logical_and_shift-msa_logical_and_shift.o `test -f 'msa_logical_and_shift.c' || echo '$(srcdir)/'`msa_logical_and_shift.c

msa_logical_and_shift-msa_logical_and_shift.obj: msa_logical_and_shift.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_logical_and_shift_CFLAGS) $(CFLAGS) -MT msa_logical_and_shift-msa_logical_and_shift.obj -MD -MP -MF $(DEPDIR)/msa_logical_and_shift-msa_logical_and_shift.Tpo -c -o msa_logical_and_shift-msa_logical_and_shift.obj `if test -f 'msa_logical_and_shift.c'; then $(CYGPATH_W) 'msa_logical_and_shift.c'; else $(CYGPATH_W) '$(srcdir)/msa_logical_and_shift.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/msa_logical_and_shift-msa_logical_and_shift.Tpo $(DEPDIR)/msa_logical_and_shift-msa_logical_and_shift.Po
#	$(AM_V_CC)source='msa_logical_and_shift.c' object='msa_logical_and_shift-msa_logical_and_shift.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_logical_and_shift_CFLAGS) $(CFLAGS) -c -o msa_logical_and_shift-msa_logical_and_shift.obj `if test -f 'msa_logical_and_shift.c'; then $(CYGPATH_W) 'msa_logical_and_shift.c'; else $(CYGPATH_W) '$(srcdir)/msa_logical_and_shift.c'; fi`

msa_shuffle-msa_shuffle.o: msa_shuffle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_shuffle_CFLAGS) $(CFLAGS) -MT msa_shuffle-msa_shuffle.o -MD -MP -MF $(DEPDIR)/msa_shuffle-msa_shuffle.Tpo -c -o msa_shuffle-msa_shuffle.o `test -f 'msa_shuffle.c' || echo '$(srcdir)/'`msa_shuffle.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/msa_shuffle-msa_shuffle.Tpo $(DEPDIR)/msa_shuffle-msa_shuffle.Po
#	$(AM_V_CC)source='msa_shuffle.c' object='msa_shuffle-msa_shuffle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_shuffle_CFLAGS) $(CFLAGS) -c -o msa_shuffle-msa_shuffle.o `test -f 'msa_shuffle.c' || echo '$(srcdir)/'`msa_shuffle.c

msa_shuffle-msa_shuffle.obj: msa_shuffle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_shuffle_CFLAGS) $(CFLAGS) -MT msa_shuffle-msa_shuffle.obj -MD -MP -MF $(DEPDIR)/msa_shuffle-msa_shuffle.Tpo -c -o msa_shuffle-msa_shuffle.obj `if test -f 'msa_shuffle.c'; then $(CYGPATH_W) 'msa_shuffle.c'; else $(CYGPATH_W) '$(srcdir)/msa_shuffle.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/msa_shuffle-msa_shuffle.Tpo $(DEPDIR)/msa_shuffle-msa_shuffle.Po
#	$(AM_V_CC)source='msa_shuffle.c' object='msa_shuffle-msa_shuffle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(msa_shuffle_CFLAGS) $(CFLAGS) -c -o msa_shuffle-msa_shuffle.obj `if test -f 'msa_shuffle.c'; then $(CYGPATH_W) 'msa_shuffle.c'; else $(CYGPATH_W) '$(srcdir)/msa_shuffle.c'; fi`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(SCRIPTS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/FPUarithmetic.Po
	-rm -f ./$(DEPDIR)/LoadStore.Po
	-rm -f ./$(DEPDIR)/LoadStore1.Po
	-rm -f ./$(DEPDIR)/MIPS32int.Po
	-rm -f ./$(DEPDIR)/MIPS32r6int.Po
	-rm -f ./$(DEPDIR)/MemCpyTest.Po
	-rm -f ./$(DEPDIR)/MoveIns.Po
	-rm -f ./$(DEPDIR)/SignalException.Po
	-rm -f ./$(DEPDIR)/allexec-allexec.Po
	-rm -f ./$(DEPDIR)/block_size.Po
	-rm -f ./$(DEPDIR)/branch_pc.Po
	-rm -f ./$(DEPDIR)/branches.Po
	-rm -f ./$(DEPDIR)/branches_r6.Po
	-rm -f ./$(DEPDIR)/bug320057-mips32.Po
	-rm -f ./$(DEPDIR)/change_fp_mode.Po
	-rm -f ./$(DEPDIR)/fp_r6.Po
	-rm -f ./$(DEPDIR)/fpu_branches.Po
	-rm -f ./$(DEPDIR)/mips32_dsp.Po
	-rm -f ./$(DEPDIR)/mips32_dspr2.Po
	-rm -f ./$(DEPDIR)/msa_arithmetic-msa_arithmetic.Po
	-rm -f ./$(DEPDIR)/msa_comparison-msa_comparison.Po
	-rm -f ./$(DEPDIR)/msa_data_transfer-msa_data_transfer.Po
	-rm -f ./$(DEPDIR)/msa_fpu-msa_fpu.Po
	-rm -f ./$(DEPDIR)/msa_logical_and_shift-msa_logical_and_shift.Po
	-rm -f ./$(DEPDIR)/msa_shuffle-msa_shuffle.Po
	-rm -f ./$(DEPDIR)/pc_instructions_r6.Po
	-rm -f ./$(DEPDIR)/round.Po
	-rm -f ./$(DEPDIR)/round_fpu64.Po
	-rm -f ./$(DEPDIR)/test_fcsr.Po
	-rm -f ./$(DEPDIR)/test_math.Po
	-rm -f ./$(DEPDIR)/unaligned_load_store.Po
	-rm -f ./$(DEPDIR)/vfp.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/FPUarithmetic.Po
	-rm -f ./$(DEPDIR)/LoadStore.Po
	-rm -f ./$(DEPDIR)/LoadStore1.Po
	-rm -f ./$(DEPDIR)/MIPS32int.Po
	-rm -f ./$(DEPDIR)/MIPS32r6int.Po
	-rm -f ./$(DEPDIR)/MemCpyTest.Po
	-rm -f ./$(DEPDIR)/MoveIns.Po
	-rm -f ./$(DEPDIR)/SignalException.Po
	-rm -f ./$(DEPDIR)/allexec-allexec.Po
	-rm -f ./$(DEPDIR)/block_size.Po
	-rm -f ./$(DEPDIR)/branch_pc.Po
	-rm -f ./$(DEPDIR)/branches.Po
	-rm -f ./$(DEPDIR)/branches_r6.Po
	-rm -f ./$(DEPDIR)/bug320057-mips32.Po
	-rm -f ./$(DEPDIR)/change_fp_mode.Po
	-rm -f ./$(DEPDIR)/fp_r6.Po
	-rm -f ./$(DEPDIR)/fpu_branches.Po
	-rm -f ./$(DEPDIR)/mips32_dsp.Po
	-rm -f ./$(DEPDIR)/mips32_dspr2.Po
	-rm -f ./$(DEPDIR)/msa_arithmetic-msa_arithmetic.Po
	-rm -f ./$(DEPDIR)/msa_comparison-msa_comparison.Po
	-rm -f ./$(DEPDIR)/msa_data_transfer-msa_data_transfer.Po
	-rm -f ./$(DEPDIR)/msa_fpu-msa_fpu.Po
	-rm -f ./$(DEPDIR)/msa_logical_and_shift-msa_logical_and_shift.Po
	-rm -f ./$(DEPDIR)/msa_shuffle-msa_shuffle.Po
	-rm -f ./$(DEPDIR)/pc_instructions_r6.Po
	-rm -f ./$(DEPDIR)/round.Po
	-rm -f ./$(DEPDIR)/round_fpu64.Po
	-rm -f ./$(DEPDIR)/test_fcsr.Po
	-rm -f ./$(DEPDIR)/test_math.Po
	-rm -f ./$(DEPDIR)/unaligned_load_store.Po
	-rm -f ./$(DEPDIR)/vfp.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am \
	check-local clean clean-checkPROGRAMS clean-generic \
	clean-local cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


# This used to be required when Vex had a handwritten Makefile.  It
# shouldn't be needed any more, though.

#----------------------------------------------------------------------------
# noinst_PROGRAMS and noinst_DSYMS targets
#----------------------------------------------------------------------------

# On Darwin, for a program 'p', the DWARF debug info is stored in the
# directory 'p.dSYM'.  This must be generated after the executable is
# created, with 'dsymutil p'.  We could redefine LINK with a script that
# executes 'dsymutil' after linking, but that's a pain.  Instead we use this
# hook so that every time "make check" is run, we subsequently invoke
# 'dsymutil' on all the executables that lack a .dSYM directory, or that are
# newer than their corresponding .dSYM directory.
build-noinst_DSYMS: $(noinst_DSYMS)
	for f in $(noinst_DSYMS); do \
	  if [ ! -e $$f.dSYM  -o  $$f -nt $$f.dSYM ] ; then \
	      echo "dsymutil $$f"; \
	      dsymutil $$f; \
	  fi; \
	done

# This is used by coregrind/Makefile.am and Makefile.tool.am for doing
# "in-place" installs.  It copies $(noinst_PROGRAMS) into $inplacedir.
# It needs to be depended on by an 'all-local' rule.
inplace-noinst_PROGRAMS: $(noinst_PROGRAMS)
	mkdir -p $(inplacedir); \
	for f in $(noinst_PROGRAMS) ; do \
	  rm -f $(inplacedir)/$$f; \
	  ln -f -s ../$(subdir)/$$f $(inplacedir); \
	done

# Similar to inplace-noinst_PROGRAMS
inplace-noinst_DSYMS: build-noinst_DSYMS
	mkdir -p $(inplacedir); \
	for f in $(noinst_DSYMS); do \
	  rm -f $(inplacedir)/$$f.dSYM; \
	  ln -f -s ../$(subdir)/$$f.dSYM $(inplacedir); \
	done

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make install".  It copies $(noinst_PROGRAMS) into $prefix/libexec/valgrind/.
# It needs to be depended on by an 'install-exec-local' rule.
install-noinst_PROGRAMS: $(noinst_PROGRAMS)
	$(mkinstalldirs) $(DESTDIR)$(pkglibexecdir); \
	for f in $(noinst_PROGRAMS); do \
	  $(INSTALL_PROGRAM) $$f $(DESTDIR)$(pkglibexecdir); \
	done

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make uninstall".  It removes $(noinst_PROGRAMS) from $prefix/libexec/valgrind/.
# It needs to be depended on by an 'uninstall-local' rule.
uninstall-noinst_PROGRAMS:
	for f in $(noinst_PROGRAMS); do \
	  rm -f $(DESTDIR)$(pkglibexecdir)/$$f; \
	done

# Similar to install-noinst_PROGRAMS.
# Nb: we don't use $(INSTALL_PROGRAM) here because it doesn't work with
# directories.  XXX: not sure whether the resulting permissions will be
# correct when using 'cp -R'...
install-noinst_DSYMS: build-noinst_DSYMS
	$(mkinstalldirs) $(DESTDIR)$(pkglibexecdir); \
	for f in $(noinst_DSYMS); do \
	  cp -R $$f.dSYM $(DESTDIR)$(pkglibexecdir); \
	done

# Similar to uninstall-noinst_PROGRAMS.
uninstall-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -f $(DESTDIR)$(pkglibexecdir)/$$f.dSYM; \
	done

# This needs to be depended on by a 'clean-local' rule.
clean-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -rf $$f.dSYM; \
	done

check-local: build-noinst_DSYMS

clean-local: clean-noinst_DSYMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
