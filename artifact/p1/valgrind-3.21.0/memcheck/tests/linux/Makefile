# Makefile.in generated by automake 1.16.5 from Makefile.am.
# memcheck/tests/linux/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This file is used for tool tests, and also in perf/Makefile.am.

# This file should be included (directly or indirectly) by every
# Makefile.am that builds programs.  And also the top-level Makefile.am.

#----------------------------------------------------------------------------
# Global stuff
#----------------------------------------------------------------------------


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/valgrind
pkgincludedir = $(includedir)/valgrind
pkglibdir = $(libdir)/valgrind
pkglibexecdir = $(libexecdir)/valgrind
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
#am__append_1 = -Wno-cast-align -Wno-self-assign \
#                  -Wno-tautological-compare

##am__append_2 = -Wno-expansion-to-defined
#am__append_3 = -DVGABI_
#am__append_4 = -DVGABI_
#am__append_5 = -Wl,-M,$(top_srcdir)/solaris/vgpreload-solaris.mapfile

# The Android toolchain includes all kinds of stdlib helpers present in
# bionic which is bad because we are not linking with it and the Android
# linker will panic.
#am__append_6 = -nostdlib
am__append_7 = -DVGA_SEC_x86=1  \
		-DVGP_SEC_amd64_linux=1

#am__append_8 = -DVGABI_

# Make sure that all test programs have threaded errno.
# Disable largefile support as there are test cases explicitly enabling it.
#am__append_9 = -D_REENTRANT 
#am__append_10 = -Wno-format-extra-args \
#	-Wno-literal-range \
#	-Wno-tautological-constant-out-of-range-compare \
#	-Wno-self-assign -Wno-string-plus-int \
#	-Wno-uninitialized -Wno-unused-value # \
#	clang 3.0.0
#am__append_11 = -Wno-unused-private-field    # drd/tests/tsan_unittest.cpp
check_PROGRAMS = aligned_alloc$(EXEEXT) brk$(EXEEXT) capget$(EXEEXT) \
	check_preadv2_pwritev2$(EXEEXT) debuginfod-check$(EXEEXT) \
	dlclose_leak$(EXEEXT) dlclose_leak_so.so$(EXEEXT) \
	ioctl-tiocsig$(EXEEXT) getregset$(EXEEXT) lsframe1$(EXEEXT) \
	lsframe2$(EXEEXT) rfcomm$(EXEEXT) sigqueue$(EXEEXT) \
	stack_switch$(EXEEXT) syscalls-2007$(EXEEXT) \
	syslog-syscall$(EXEEXT) sys-statx$(EXEEXT) \
	timerfd-syscall$(EXEEXT) proc-auxv$(EXEEXT) \
	sys-execveat$(EXEEXT) check_execveat$(EXEEXT) enomem$(EXEEXT) \
	memalign$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2) \
	$(am__EXEEXT_3) $(am__EXEEXT_4) $(am__EXEEXT_5) \
	$(am__EXEEXT_6)
am__append_12 = sys-openat
am__append_13 = memfd_create
am__append_14 = sys-copy_file_range
am__append_15 = sys-preadv_pwritev
am__append_16 = sys-preadv2_pwritev2
am__append_17 = stack_changes
subdir = memcheck/tests/linux
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_noinst_SCRIPTS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = debuginfod-check.vgtest
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = sys-openat$(EXEEXT)
am__EXEEXT_2 = memfd_create$(EXEEXT)
am__EXEEXT_3 =  \
	sys-copy_file_range$(EXEEXT)
am__EXEEXT_4 = sys-preadv_pwritev$(EXEEXT)
am__EXEEXT_5 =  \
	sys-preadv2_pwritev2$(EXEEXT)
am__EXEEXT_6 = stack_changes$(EXEEXT)
aligned_alloc_SOURCES = aligned_alloc.c
aligned_alloc_OBJECTS = aligned_alloc.$(OBJEXT)
aligned_alloc_LDADD = $(LDADD)
brk_SOURCES = brk.c
brk_OBJECTS = brk.$(OBJEXT)
brk_LDADD = $(LDADD)
capget_SOURCES = capget.c
capget_OBJECTS = capget.$(OBJEXT)
capget_LDADD = $(LDADD)
check_execveat_SOURCES = check_execveat.c
check_execveat_OBJECTS = check_execveat.$(OBJEXT)
check_execveat_LDADD = $(LDADD)
check_preadv2_pwritev2_SOURCES = check_preadv2_pwritev2.c
check_preadv2_pwritev2_OBJECTS = check_preadv2_pwritev2.$(OBJEXT)
check_preadv2_pwritev2_LDADD = $(LDADD)
debuginfod_check_SOURCES = debuginfod-check.c
debuginfod_check_OBJECTS = debuginfod-check.$(OBJEXT)
debuginfod_check_LDADD = $(LDADD)
am_dlclose_leak_OBJECTS = dlclose_leak.$(OBJEXT)
dlclose_leak_OBJECTS = $(am_dlclose_leak_OBJECTS)
dlclose_leak_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(dlclose_leak_LDFLAGS) $(LDFLAGS) -o $@
am_dlclose_leak_so_so_OBJECTS =  \
	dlclose_leak_so_so-dlclose_leak_so.$(OBJEXT)
dlclose_leak_so_so_OBJECTS = $(am_dlclose_leak_so_so_OBJECTS)
dlclose_leak_so_so_LDADD = $(LDADD)
dlclose_leak_so_so_LINK = $(CCLD) $(dlclose_leak_so_so_CFLAGS) \
	$(CFLAGS) $(dlclose_leak_so_so_LDFLAGS) $(LDFLAGS) -o $@
enomem_SOURCES = enomem.c
enomem_OBJECTS = enomem-enomem.$(OBJEXT)
enomem_LDADD = $(LDADD)
enomem_LINK = $(CCLD) $(enomem_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
getregset_SOURCES = getregset.c
getregset_OBJECTS = getregset.$(OBJEXT)
getregset_LDADD = $(LDADD)
ioctl_tiocsig_SOURCES = ioctl-tiocsig.c
ioctl_tiocsig_OBJECTS = ioctl-tiocsig.$(OBJEXT)
ioctl_tiocsig_LDADD = $(LDADD)
lsframe1_SOURCES = lsframe1.c
lsframe1_OBJECTS = lsframe1.$(OBJEXT)
lsframe1_LDADD = $(LDADD)
lsframe2_SOURCES = lsframe2.c
lsframe2_OBJECTS = lsframe2.$(OBJEXT)
lsframe2_LDADD = $(LDADD)
memalign_SOURCES = memalign.c
memalign_OBJECTS = memalign.$(OBJEXT)
memalign_LDADD = $(LDADD)
memfd_create_SOURCES = memfd_create.c
memfd_create_OBJECTS = memfd_create.$(OBJEXT)
memfd_create_LDADD = $(LDADD)
proc_auxv_SOURCES = proc-auxv.c
proc_auxv_OBJECTS = proc-auxv.$(OBJEXT)
proc_auxv_LDADD = $(LDADD)
rfcomm_SOURCES = rfcomm.c
rfcomm_OBJECTS = rfcomm.$(OBJEXT)
rfcomm_LDADD = $(LDADD)
sigqueue_SOURCES = sigqueue.c
sigqueue_OBJECTS = sigqueue.$(OBJEXT)
sigqueue_LDADD = $(LDADD)
stack_changes_SOURCES = stack_changes.c
stack_changes_OBJECTS = stack_changes.$(OBJEXT)
stack_changes_LDADD = $(LDADD)
stack_switch_SOURCES = stack_switch.c
stack_switch_OBJECTS = stack_switch.$(OBJEXT)
stack_switch_DEPENDENCIES =
sys_copy_file_range_SOURCES = sys-copy_file_range.c
sys_copy_file_range_OBJECTS = sys-copy_file_range.$(OBJEXT)
sys_copy_file_range_LDADD = $(LDADD)
sys_execveat_SOURCES = sys-execveat.c
sys_execveat_OBJECTS = sys-execveat.$(OBJEXT)
sys_execveat_LDADD = $(LDADD)
sys_openat_SOURCES = sys-openat.c
sys_openat_OBJECTS = sys-openat.$(OBJEXT)
sys_openat_LDADD = $(LDADD)
sys_preadv2_pwritev2_SOURCES = sys-preadv2_pwritev2.c
sys_preadv2_pwritev2_OBJECTS =  \
	sys_preadv2_pwritev2-sys-preadv2_pwritev2.$(OBJEXT)
sys_preadv2_pwritev2_LDADD = $(LDADD)
sys_preadv2_pwritev2_LINK = $(CCLD) $(sys_preadv2_pwritev2_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
sys_preadv_pwritev_SOURCES = sys-preadv_pwritev.c
sys_preadv_pwritev_OBJECTS =  \
	sys_preadv_pwritev-sys-preadv_pwritev.$(OBJEXT)
sys_preadv_pwritev_LDADD = $(LDADD)
sys_preadv_pwritev_LINK = $(CCLD) $(sys_preadv_pwritev_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
sys_statx_SOURCES = sys-statx.c
sys_statx_OBJECTS = sys-statx.$(OBJEXT)
sys_statx_LDADD = $(LDADD)
syscalls_2007_SOURCES = syscalls-2007.c
syscalls_2007_OBJECTS = syscalls-2007.$(OBJEXT)
syscalls_2007_LDADD = $(LDADD)
syslog_syscall_SOURCES = syslog-syscall.c
syslog_syscall_OBJECTS = syslog-syscall.$(OBJEXT)
syslog_syscall_LDADD = $(LDADD)
timerfd_syscall_SOURCES = timerfd-syscall.c
timerfd_syscall_OBJECTS = timerfd-syscall.$(OBJEXT)
timerfd_syscall_DEPENDENCIES =
SCRIPTS = $(dist_noinst_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/aligned_alloc.Po ./$(DEPDIR)/brk.Po \
	./$(DEPDIR)/capget.Po ./$(DEPDIR)/check_execveat.Po \
	./$(DEPDIR)/check_preadv2_pwritev2.Po \
	./$(DEPDIR)/debuginfod-check.Po ./$(DEPDIR)/dlclose_leak.Po \
	./$(DEPDIR)/dlclose_leak_so_so-dlclose_leak_so.Po \
	./$(DEPDIR)/enomem-enomem.Po ./$(DEPDIR)/getregset.Po \
	./$(DEPDIR)/ioctl-tiocsig.Po ./$(DEPDIR)/lsframe1.Po \
	./$(DEPDIR)/lsframe2.Po ./$(DEPDIR)/memalign.Po \
	./$(DEPDIR)/memfd_create.Po ./$(DEPDIR)/proc-auxv.Po \
	./$(DEPDIR)/rfcomm.Po ./$(DEPDIR)/sigqueue.Po \
	./$(DEPDIR)/stack_changes.Po ./$(DEPDIR)/stack_switch.Po \
	./$(DEPDIR)/sys-copy_file_range.Po ./$(DEPDIR)/sys-execveat.Po \
	./$(DEPDIR)/sys-openat.Po ./$(DEPDIR)/sys-statx.Po \
	./$(DEPDIR)/sys_preadv2_pwritev2-sys-preadv2_pwritev2.Po \
	./$(DEPDIR)/sys_preadv_pwritev-sys-preadv_pwritev.Po \
	./$(DEPDIR)/syscalls-2007.Po ./$(DEPDIR)/syslog-syscall.Po \
	./$(DEPDIR)/timerfd-syscall.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = aligned_alloc.c brk.c capget.c check_execveat.c \
	check_preadv2_pwritev2.c debuginfod-check.c \
	$(dlclose_leak_SOURCES) $(dlclose_leak_so_so_SOURCES) enomem.c \
	getregset.c ioctl-tiocsig.c lsframe1.c lsframe2.c memalign.c \
	memfd_create.c proc-auxv.c rfcomm.c sigqueue.c stack_changes.c \
	stack_switch.c sys-copy_file_range.c sys-execveat.c \
	sys-openat.c sys-preadv2_pwritev2.c sys-preadv_pwritev.c \
	sys-statx.c syscalls-2007.c syslog-syscall.c timerfd-syscall.c
DIST_SOURCES = aligned_alloc.c brk.c capget.c check_execveat.c \
	check_preadv2_pwritev2.c debuginfod-check.c \
	$(dlclose_leak_SOURCES) $(dlclose_leak_so_so_SOURCES) enomem.c \
	getregset.c ioctl-tiocsig.c lsframe1.c lsframe2.c memalign.c \
	memfd_create.c proc-auxv.c rfcomm.c sigqueue.c stack_changes.c \
	stack_switch.c sys-copy_file_range.c sys-execveat.c \
	sys-openat.c sys-preadv2_pwritev2.c sys-preadv_pwritev.c \
	sys-statx.c syscalls-2007.c syslog-syscall.c timerfd-syscall.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(srcdir)/debuginfod-check.vgtest.in \
	$(top_srcdir)/Makefile.all.am \
	$(top_srcdir)/Makefile.tool-tests.am $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/home/liu2598/MemFuzz/src/third/valgrind-3.21.0/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = /usr/bin/ar
AUTOCONF = ${SHELL} '/home/liu2598/MemFuzz/src/third/valgrind-3.21.0/missing' autoconf
AUTOHEADER = ${SHELL} '/home/liu2598/MemFuzz/src/third/valgrind-3.21.0/missing' autoheader
AUTOMAKE = ${SHELL} '/home/liu2598/MemFuzz/src/third/valgrind-3.21.0/missing' automake-1.16
AWK = gawk
BOOST_CFLAGS = 
BOOST_LIBS = 
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = 
CCDEPMODE = depmode=gcc3
CFLAGS = 
CFLAGS_MPI = -g -O -fno-omit-frame-pointer -Wall -fpic
CPP = gcc -E
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFAULT_SUPP = ./xfree-3.supp ./xfree-4.supp glibc-2.X-drd.supp glibc-2.X-helgrind.supp glibc-2.X.supp 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIFF = diff -u
DIS_PATH = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ETAGS = etags
EXEEXT = 
FLAG_FALIGNED_NEW = -faligned-new
FLAG_FINLINE_FUNCTIONS = -finline-functions
FLAG_FNO_IPA_ICF = -fno-ipa-icf
FLAG_FNO_STACK_PROTECTOR = -fno-stack-protector
FLAG_FSANITIZE = 
FLAG_FSIZED_DEALLOCATION = -fsized-deallocation
FLAG_M32 =  -m32
FLAG_M64 = -m64
FLAG_MLONG_DOUBLE_128 = -mlong-double-128
FLAG_MMMX = -mmmx
FLAG_MSA = 
FLAG_MSSE = -msse
FLAG_NO_BUILD_ID = 
FLAG_NO_PIE = -no-pie
FLAG_OCTEON = 
FLAG_OCTEON2 = 
FLAG_PIE = -pie
FLAG_T_TEXT = -Ttext-segment
FLAG_UNLIMITED_INLINE_UNIT_GROWTH = --param inline-unit-growth=900
FLAG_W_CAST_ALIGN = -Wcast-align
FLAG_W_CAST_QUAL = -Wcast-qual
FLAG_W_EMPTY_BODY = -Wempty-body
FLAG_W_ENUM_CONVERSION = 
FLAG_W_EXTRA = -Wextra
FLAG_W_FORMAT = -Wformat
FLAG_W_FORMAT_SECURITY = -Wformat-security
FLAG_W_FORMAT_SIGNEDNESS = -Wformat-signedness
FLAG_W_IGNORED_QUALIFIERS = -Wignored-qualifiers
FLAG_W_IMPLICIT_FALLTHROUGH = -Wimplicit-fallthrough=2
FLAG_W_LOGICAL_OP = -Wlogical-op
FLAG_W_MISSING_PARAMETER_TYPE = -Wmissing-parameter-type
FLAG_W_NO_ALLOC_SIZE_LARGER_THAN = -Wno-alloc-size-larger-than
FLAG_W_NO_BUILTIN_MEMCPY_CHK_SIZE = 
FLAG_W_NO_EXPANSION_TO_DEFINED = -Wno-expansion-to-defined
FLAG_W_NO_FORMAT_OVERFLOW = -Wno-format-overflow
FLAG_W_NO_FORTIFY_SOURCE = 
FLAG_W_NO_FREE_NONHEAP_OBJECT = -Wno-free-nonheap-object
FLAG_W_NO_INCOMPATIBLE_POINTER_TYPES_DISCARDS_QUALIFIERS = 
FLAG_W_NO_INFINITE_RECURSION = 
FLAG_W_NO_MAYBE_UNINITIALIZED = -Wno-maybe-uninitialized
FLAG_W_NO_MEMSET_TRANSPOSED_ARGS = -Wno-memset-transposed-args
FLAG_W_NO_MISMATCHED_NEW_DELETE = 
FLAG_W_NO_NONNULL = -Wno-nonnull
FLAG_W_NO_NON_POWER_OF_TWO_ALIGNMENT = 
FLAG_W_NO_OVERFLOW = -Wno-overflow
FLAG_W_NO_POINTER_SIGN = -Wno-pointer-sign
FLAG_W_NO_SIGN_COMPARE = -Wno-sign-compare
FLAG_W_NO_STATIC_LOCAL_IN_INLINE = 
FLAG_W_NO_STRINGOP_OVERFLOW = -Wno-stringop-overflow
FLAG_W_NO_STRINGOP_OVERREAD = 
FLAG_W_NO_STRINGOP_TRUNCATION = 
FLAG_W_NO_SUSPICIOUS_BZERO = 
FLAG_W_NO_UNINITIALIZED = -Wno-uninitialized
FLAG_W_NO_UNUSED_BUT_SET_VARIABLE = -Wno-unused-but-set-variable
FLAG_W_NO_UNUSED_FUNCTION = -Wno-unused-function
FLAG_W_NO_USE_AFTER_FREE = 
FLAG_W_OLD_STYLE_DECLARATION = -Wold-style-declaration
FLAG_W_WRITE_STRINGS = -Wwrite-strings
GDB = /usr/bin/gdb
GLIBC_LIBC_PATH = */lib*/libc-2.*so*
GLIBC_LIBPTHREAD_PATH = */lib*/libpthread-2.*so*
GLIBC_VERSION = 2.27
GREP = /bin/grep
HWCAP_HAS_ALTIVEC = 
HWCAP_HAS_DFP = 
HWCAP_HAS_HTM = 
HWCAP_HAS_ISA_2_05 = 
HWCAP_HAS_ISA_2_06 = 
HWCAP_HAS_ISA_2_07 = 
HWCAP_HAS_ISA_3_00 = 
HWCAP_HAS_ISA_3_1 = 
HWCAP_HAS_MMA = 
HWCAP_HAS_VSX = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LDFLAGS_MPI = -fpic -shared
LIBOBJS = 
LIBS = 
LIB_UBSAN = 
LN_S = ln -s
LTLIBOBJS = 
LTO_AR = /usr/bin/ar
LTO_CFLAGS = 
LTO_RANLIB = ranlib
MAINT = #
MAKEINFO = ${SHELL} '/home/liu2598/MemFuzz/src/third/valgrind-3.21.0/missing' makeinfo
MKDIR_P = /bin/mkdir -p
MPI_CC = mpicc
OBJEXT = o
PACKAGE = valgrind
PACKAGE_BUGREPORT = valgrind-users@lists.sourceforge.net
PACKAGE_NAME = Valgrind
PACKAGE_STRING = Valgrind 3.21.0
PACKAGE_TARNAME = valgrind
PACKAGE_URL = 
PACKAGE_VERSION = 3.21.0
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PREFERRED_STACK_BOUNDARY_2 = -mpreferred-stack-boundary=2
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHA256SUM = sha256sum
SHELL = /bin/bash
SOLARIS_UNDEF_LARGESOURCE = 
STRIP = 
VALT_LOAD_ADDRESS_PRI = 0x58000000
VALT_LOAD_ADDRESS_SEC = 0x58000000
VERSION = 3.21.0
VGCONF_ABI = 
VGCONF_ARCH_PRI = amd64
VGCONF_ARCH_SEC = x86
VGCONF_OS = linux
VGCONF_PLATFORM_PRI_CAPS = AMD64_LINUX
VGCONF_PLATFORM_SEC_CAPS = X86_LINUX
VGCONF_PLATVARIANT = vanilla
VG_DATE = 28 Apr 2023
VG_TMPDIR = /tmp
VG_VER_MAJOR = 3
VG_VER_MINOR = 21
XCODE_DIR = 
XCRUN = 
abs_builddir = /home/liu2598/MemFuzz/src/third/valgrind-3.21.0/memcheck/tests/linux
abs_srcdir = /home/liu2598/MemFuzz/src/third/valgrind-3.21.0/memcheck/tests/linux
abs_top_builddir = /home/liu2598/MemFuzz/src/third/valgrind-3.21.0
abs_top_srcdir = /home/liu2598/MemFuzz/src/third/valgrind-3.21.0
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/liu2598/MemFuzz/src/third/valgrind-3.21.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/youwei/MemFuzz/src/third/valgrind-3.21.0/exe
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
inplacedir = $(top_builddir)/.in_place

#----------------------------------------------------------------------------
# Flags
#----------------------------------------------------------------------------

# Baseline flags for all compilations.  Aim here is to maximise
# performance and get whatever useful warnings we can out of gcc.
# -fno-builtin is important for defeating LLVM's idiom recognition
# that somehow causes VG_(memset) to get into infinite recursion.
AM_CFLAGS_BASE = -O2 -g -Wall -Wmissing-prototypes -Wshadow \
	-Wpointer-arith -Wstrict-prototypes -Wmissing-declarations \
	-Wcast-align -Wcast-qual -Wwrite-strings \
	-Wempty-body -Wformat -Wformat-signedness \
	-Wformat-security -Wignored-qualifiers \
	-Wmissing-parameter-type -Wlogical-op \
	 -Wimplicit-fallthrough=2 \
	-Wold-style-declaration -finline-functions \
	-fno-stack-protector  \
	-fno-strict-aliasing -fno-builtin $(am__append_1) \
	$(am__append_2)
#ISA_3_0_BUILD_FLAG = -DHAS_XSCVHPDP  -DHAS_ISA_3_00

# Power ISA flag for use by guest_ppc_helpers.c
##ISA_3_0_BUILD_FLAG = -DHAS_XSCVHPDP -DHAS_DARN -DHAS_ISA_3_00
ISA_3_0_BUILD_FLAG = 
AM_CFLAGS_PSO_BASE = -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
		     -fpic -fno-builtin -fno-ipa-icf

#AM_CFLAGS_PSO_BASE = -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
#		     -fpic -fPIC -fno-builtin


# These flags are used for building the preload shared objects (PSOs).
# The aim is to give reasonable performance but also to have good
# stack traces, since users often see stack traces extending 
# into (and through) the preloads.  Also, we must use any
# -mpreferred-stack-boundary flag to build the preload shared
# objects, since that risks misaligning the client's stack and
# results in segfaults like (eg) #324050.
#AM_CFLAGS_PSO_BASE = -dynamic \
#		     -O -g -fno-omit-frame-pointer -fno-strict-aliasing \
#		     -fpic -fPIC -fno-builtin -fno-ipa-icf


# Flags for specific targets.
#
# Nb: the AM_CPPFLAGS_* values are suitable for building tools and auxprogs.
# For building the core, coregrind/Makefile.am files add some extra things.
AM_CPPFLAGS_AMD64_LINUX = -I$(top_srcdir) \
	-I$(top_srcdir)/include -I$(top_builddir)/include \
	-I$(top_srcdir)/VEX/pub -I$(top_builddir)/VEX/pub \
	-DVGA_amd64=1 -DVGO_linux=1 \
	-DVGP_amd64_linux=1 \
	-DVGPV_amd64_linux_vanilla=1 \
	$(am__append_3)
AM_CPPFLAGS_X86_LINUX =  \
	-I$(top_srcdir) \
	-I$(top_srcdir)/include \
	-I$(top_builddir)/include \
	-I$(top_srcdir)/VEX/pub \
	-I$(top_builddir)/VEX/pub \
	-DVGA_x86=1 \
	-DVGO_linux=1 \
	-DVGP_x86_linux=1 \
	-DVGPV_x86_linux_vanilla=1 \
	$(am__append_4)
AM_FLAG_M3264_X86_LINUX =  -m32
AM_CFLAGS_X86_LINUX =  -m32 -mpreferred-stack-boundary=2 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_X86_LINUX =  -m32 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_LINUX =  -m32 -g
AM_FLAG_M3264_AMD64_LINUX = -m64
AM_CFLAGS_AMD64_LINUX = -m64 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_AMD64_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_LINUX = -m64 -g
AM_FLAG_M3264_PPC32_LINUX =  -m32
AM_CFLAGS_PPC32_LINUX =  -m32 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC32_LINUX =  -m32 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC32_LINUX =  -m32 -g
AM_FLAG_M3264_PPC64BE_LINUX = -m64
AM_CFLAGS_PPC64BE_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_PPC64BE_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC64BE_LINUX = -m64 -g
AM_FLAG_M3264_PPC64LE_LINUX = -m64
AM_CFLAGS_PPC64LE_LINUX = -m64 $(AM_CFLAGS_BASE) $(ISA_3_0_BUILD_FLAG)
AM_CFLAGS_PSO_PPC64LE_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_PPC64LE_LINUX = -m64 -g
AM_FLAG_M3264_X86_FREEBSD =  -m32
AM_CFLAGS_X86_FREEBSD =  -m32 -mpreferred-stack-boundary=2 \
			      $(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_X86_FREEBSD =  -m32 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_FREEBSD =  -m32 -g
AM_FLAG_M3264_ARM_LINUX =  -m32
AM_CFLAGS_ARM_LINUX =  -m32 \
			 	$(AM_CFLAGS_BASE) -marm -mcpu=cortex-a8

AM_CFLAGS_PSO_ARM_LINUX =  -m32 $(AM_CFLAGS_BASE) \
				-marm -mcpu=cortex-a8 $(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_ARM_LINUX =  -m32 \
				-marm -mcpu=cortex-a8 -g

AM_FLAG_M3264_ARM64_LINUX = -m64
AM_CFLAGS_ARM64_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_ARM64_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_ARM64_LINUX = -m64 -g
AM_FLAG_M3264_AMD64_FREEBSD = -m64
AM_CFLAGS_AMD64_FREEBSD = -m64 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_AMD64_FREEBSD = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_FREEBSD = -m64 -g
AM_FLAG_M3264_X86_DARWIN = -arch i386
AM_CFLAGS_X86_DARWIN = $(WERROR) -arch i386 $(AM_CFLAGS_BASE) \
				-mmacosx-version-min=10.6 \
				-fno-pic -fno-PIC

AM_CFLAGS_PSO_X86_DARWIN = $(AM_CFLAGS_X86_DARWIN) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_DARWIN = -arch i386 -g
AM_FLAG_M3264_AMD64_DARWIN = -arch x86_64
AM_CFLAGS_AMD64_DARWIN = $(WERROR) -arch x86_64 $(AM_CFLAGS_BASE) \
			    -mmacosx-version-min=10.6

AM_CFLAGS_PSO_AMD64_DARWIN = $(AM_CFLAGS_AMD64_DARWIN) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_DARWIN = -arch x86_64 -g
AM_FLAG_M3264_S390X_LINUX = -m64
AM_CFLAGS_S390X_LINUX = -m64 $(AM_CFLAGS_BASE) -fomit-frame-pointer
AM_CFLAGS_PSO_S390X_LINUX = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_S390X_LINUX = -m64 -g -mzarch -march=z900
AM_FLAG_M3264_MIPS32_LINUX =  -m32
AM_CFLAGS_MIPS32_LINUX =  -m32 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_MIPS32_LINUX =  -m32 $(AM_CFLAGS_BASE) \
				$(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_MIPS32_LINUX =  -m32 -g
AM_FLAG_M3264_NANOMIPS_LINUX =  -m32
AM_CFLAGS_NANOMIPS_LINUX =  -m32 $(AM_CFLAGS_BASE) -mno-jump-table-opt
AM_CFLAGS_PSO_NANOMIPS_LINUX =  -m32 $(AM_CFLAGS_BASE) \
				$(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_NANOMIPS_LINUX =  -m32 -g
AM_FLAG_M3264_MIPS64_LINUX = -m64
AM_CFLAGS_MIPS64_LINUX = -m64 $(AM_CFLAGS_BASE)
AM_CFLAGS_PSO_MIPS64_LINUX = -m64 $(AM_CFLAGS_BASE) \
				$(AM_CFLAGS_PSO_BASE)

AM_CCASFLAGS_MIPS64_LINUX = -m64 -g
AM_FLAG_M3264_X86_SOLARIS =  -m32
AM_CFLAGS_X86_SOLARIS =  -m32 -mpreferred-stack-boundary=2 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer 

AM_CFLAGS_PSO_X86_SOLARIS =  -m32 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_X86_SOLARIS =  -m32 -g -D_ASM
AM_FLAG_M3264_AMD64_SOLARIS = -m64
AM_CFLAGS_AMD64_SOLARIS = -m64 \
				$(AM_CFLAGS_BASE) -fomit-frame-pointer

AM_CFLAGS_PSO_AMD64_SOLARIS = -m64 $(AM_CFLAGS_BASE) $(AM_CFLAGS_PSO_BASE)
AM_CCASFLAGS_AMD64_SOLARIS = -m64 -g -D_ASM

# Flags for the primary target.  These must be used to build the
# regtests and performance tests.  In fact, these must be used to
# build anything which is built only once on a dual-arch build.
#
AM_FLAG_M3264_PRI = $(AM_FLAG_M3264_AMD64_LINUX)
AM_CPPFLAGS_PRI = $(AM_CPPFLAGS_AMD64_LINUX)
AM_CFLAGS_PRI = $(AM_CFLAGS_AMD64_LINUX)
AM_CCASFLAGS_PRI = $(AM_CCASFLAGS_AMD64_LINUX)
#AM_FLAG_M3264_SEC = 
AM_FLAG_M3264_SEC = $(AM_FLAG_M3264_X86_LINUX)

# Baseline link flags for making vgpreload shared objects.
#
PRELOAD_LDFLAGS_COMMON_LINUX = -nodefaultlibs -shared \
	-Wl,-z,interpose,-z,initfirst $(am__append_6)
PRELOAD_LDFLAGS_COMMON_FREEBSD = -nodefaultlibs -shared -Wl,-z,interpose,-z,initfirst
PRELOAD_LDFLAGS_COMMON_DARWIN = -dynamic -dynamiclib -all_load
PRELOAD_LDFLAGS_COMMON_SOLARIS = -nodefaultlibs -shared \
	-Wl,-z,interpose,-z,initfirst $(am__append_5)
PRELOAD_LDFLAGS_X86_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX)  -m32
PRELOAD_LDFLAGS_AMD64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX)  -m32
PRELOAD_LDFLAGS_PPC64BE_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC64LE_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_ARM_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX)  -m32
PRELOAD_LDFLAGS_ARM64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_X86_FREEBSD = $(PRELOAD_LDFLAGS_COMMON_FREEBSD)  -m32
PRELOAD_LDFLAGS_AMD64_FREEBSD = $(PRELOAD_LDFLAGS_COMMON_FREEBSD) -m64
PRELOAD_LDFLAGS_X86_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch i386
PRELOAD_LDFLAGS_AMD64_DARWIN = $(PRELOAD_LDFLAGS_COMMON_DARWIN) -arch x86_64
PRELOAD_LDFLAGS_S390X_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_MIPS32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX)  -m32
PRELOAD_LDFLAGS_NANOMIPS_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX)  -m32
PRELOAD_LDFLAGS_MIPS64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_X86_SOLARIS = $(PRELOAD_LDFLAGS_COMMON_SOLARIS)  -m32
PRELOAD_LDFLAGS_AMD64_SOLARIS = $(PRELOAD_LDFLAGS_COMMON_SOLARIS) -m64
AM_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/include \
	-I$(top_srcdir)/coregrind -I$(top_builddir)/include \
	-I$(top_srcdir)/VEX/pub -I$(top_builddir)/VEX/pub \
	-DVGA_amd64=1 -DVGO_linux=1 \
	-DVGP_amd64_linux=1 \
	-DVGPV_amd64_linux_vanilla=1 \
	$(am__append_7) $(am__append_8)

# Nb: Tools need to augment these flags with an arch-selection option, such
# as $(AM_FLAG_M3264_PRI).
AM_CFLAGS = -Winline -Wall -Wshadow -Wno-long-long -g \
	-fno-stack-protector $(am__append_9) $(am__append_10) \
	$(AM_FLAG_M3264_PRI)
AM_CXXFLAGS = -Winline -Wall -Wshadow -Wno-long-long -g \
	-fno-stack-protector $(am__append_11) \
	$(AM_FLAG_M3264_PRI)
# Include AM_CPPFLAGS in AM_CCASFLAGS to allow for older versions of
# automake;  see comments in Makefile.all.am for more detail.
AM_CCASFLAGS = $(AM_CPPFLAGS)
#noinst_DSYMS = $(check_PROGRAMS)
dist_noinst_SCRIPTS = filter_stderr
EXTRA_DIST = \
	aligned_alloc.vgtest aligned_alloc.stderr.exp \
	brk.stderr.exp brk.vgtest \
	capget.vgtest capget.stderr.exp capget.stderr.exp2 capget.stderr.exp3 \
	debuginfod-check.stderr.exp debuginfod-check.vgtest.in \
	debuginfod-check.pl \
	dlclose_leak-no-keep.stderr.exp dlclose_leak-no-keep.stdout.exp \
	    dlclose_leak-no-keep.vgtest \
	dlclose_leak.stderr.exp dlclose_leak.stdout.exp \
	    dlclose_leak.vgtest \
	ioctl-tiocsig.vgtest ioctl-tiocsig.stderr.exp \
	lsframe1.vgtest lsframe1.stdout.exp lsframe1.stderr.exp \
	lsframe2.vgtest lsframe2.stdout.exp lsframe2.stderr.exp \
	memfd_create.vgtest memfd_create.stderr.exp \
		memfd_create.stderr.exp-fcntl64 \
	rfcomm.vgtest rfcomm.stderr.exp \
	sigqueue.vgtest sigqueue.stderr.exp \
	stack_changes.stderr.exp stack_changes.stdout.exp \
	    stack_changes.stdout.exp2 stack_changes.vgtest \
	stack_switch.stderr.exp stack_switch.vgtest \
	syscalls-2007.vgtest syscalls-2007.stderr.exp \
	syslog-syscall.vgtest syslog-syscall.stderr.exp \
	sys-copy_file_range.vgtest sys-copy_file_range.stderr.exp \
	sys-openat.vgtest sys-openat.stderr.exp sys-openat.stdout.exp \
	sys-statx.vgtest sys-statx.stderr.exp \
	timerfd-syscall.vgtest timerfd-syscall.stderr.exp \
	with-space.stderr.exp with-space.stdout.exp with-space.vgtest \
	proc-auxv.vgtest proc-auxv.stderr.exp getregset.vgtest \
	getregset.stderr.exp getregset.stdout.exp \
	sys-preadv_pwritev.vgtest sys-preadv_pwritev.stderr.exp \
	sys-preadv2_pwritev2.vgtest sys-preadv2_pwritev2.stderr.exp \
	sys-execveat.vgtest sys-execveat.stderr.exp sys-execveat.stdout.exp \
	enomem.vgtest enomem.stderr.exp enomem.stdout.exp \
	memalign.vgtest memalign.stderr.exp

stack_switch_LDADD = -lpthread
timerfd_syscall_LDADD = -lrt

# Build shared object for dlclose_leak
dlclose_leak_so_so_SOURCES = dlclose_leak_so.c
dlclose_leak_so_so_CFLAGS = $(AM_CFLAGS) -fpic -g -O0
dlclose_leak_so_so_LDFLAGS = -fpic $(AM_FLAG_M3264_PRI) -shared -Wl,-soname \
                              -Wl,dlclose_leak_so.so

dlclose_leak_SOURCES = dlclose_leak.c
dlclose_leak_DEPENDENCIES = dlclose_leak_so.so
# Do NOT uncomment the below line: we must not link with the .so,
# in order to properly test a 'fully dynamic' use of dlopen/dlclose
# dlclose_leak_LDADD            = dlclose_leak_so.so
dlclose_leak_LDADD = -ldl
dlclose_leak_LDFLAGS = $(AM_FLAG_M3264_PRI) \
                                -Wl,-rpath,$(top_builddir)/memcheck/tests/linux

enomem_CFLAGS = $(AM_CFLAGS) 
sys_preadv_pwritev_CFLAGS = $(AM_CFLAGS) -Wno-stringop-overflow  \
                                -Wno-nonnull

sys_preadv2_pwritev2_CFLAGS = $(AM_CFLAGS) -Wno-nonnull  \
                                -Wno-stringop-overflow

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.tool-tests.am $(top_srcdir)/Makefile.all.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign memcheck/tests/linux/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign memcheck/tests/linux/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/Makefile.tool-tests.am $(top_srcdir)/Makefile.all.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
debuginfod-check.vgtest: $(top_builddir)/config.status $(srcdir)/debuginfod-check.vgtest.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

aligned_alloc$(EXEEXT): $(aligned_alloc_OBJECTS) $(aligned_alloc_DEPENDENCIES) $(EXTRA_aligned_alloc_DEPENDENCIES) 
	@rm -f aligned_alloc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aligned_alloc_OBJECTS) $(aligned_alloc_LDADD) $(LIBS)

brk$(EXEEXT): $(brk_OBJECTS) $(brk_DEPENDENCIES) $(EXTRA_brk_DEPENDENCIES) 
	@rm -f brk$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(brk_OBJECTS) $(brk_LDADD) $(LIBS)

capget$(EXEEXT): $(capget_OBJECTS) $(capget_DEPENDENCIES) $(EXTRA_capget_DEPENDENCIES) 
	@rm -f capget$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(capget_OBJECTS) $(capget_LDADD) $(LIBS)

check_execveat$(EXEEXT): $(check_execveat_OBJECTS) $(check_execveat_DEPENDENCIES) $(EXTRA_check_execveat_DEPENDENCIES) 
	@rm -f check_execveat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_execveat_OBJECTS) $(check_execveat_LDADD) $(LIBS)

check_preadv2_pwritev2$(EXEEXT): $(check_preadv2_pwritev2_OBJECTS) $(check_preadv2_pwritev2_DEPENDENCIES) $(EXTRA_check_preadv2_pwritev2_DEPENDENCIES) 
	@rm -f check_preadv2_pwritev2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_preadv2_pwritev2_OBJECTS) $(check_preadv2_pwritev2_LDADD) $(LIBS)

debuginfod-check$(EXEEXT): $(debuginfod_check_OBJECTS) $(debuginfod_check_DEPENDENCIES) $(EXTRA_debuginfod_check_DEPENDENCIES) 
	@rm -f debuginfod-check$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(debuginfod_check_OBJECTS) $(debuginfod_check_LDADD) $(LIBS)

dlclose_leak$(EXEEXT): $(dlclose_leak_OBJECTS) $(dlclose_leak_DEPENDENCIES) $(EXTRA_dlclose_leak_DEPENDENCIES) 
	@rm -f dlclose_leak$(EXEEXT)
	$(AM_V_CCLD)$(dlclose_leak_LINK) $(dlclose_leak_OBJECTS) $(dlclose_leak_LDADD) $(LIBS)

dlclose_leak_so.so$(EXEEXT): $(dlclose_leak_so_so_OBJECTS) $(dlclose_leak_so_so_DEPENDENCIES) $(EXTRA_dlclose_leak_so_so_DEPENDENCIES) 
	@rm -f dlclose_leak_so.so$(EXEEXT)
	$(AM_V_CCLD)$(dlclose_leak_so_so_LINK) $(dlclose_leak_so_so_OBJECTS) $(dlclose_leak_so_so_LDADD) $(LIBS)

enomem$(EXEEXT): $(enomem_OBJECTS) $(enomem_DEPENDENCIES) $(EXTRA_enomem_DEPENDENCIES) 
	@rm -f enomem$(EXEEXT)
	$(AM_V_CCLD)$(enomem_LINK) $(enomem_OBJECTS) $(enomem_LDADD) $(LIBS)

getregset$(EXEEXT): $(getregset_OBJECTS) $(getregset_DEPENDENCIES) $(EXTRA_getregset_DEPENDENCIES) 
	@rm -f getregset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(getregset_OBJECTS) $(getregset_LDADD) $(LIBS)

ioctl-tiocsig$(EXEEXT): $(ioctl_tiocsig_OBJECTS) $(ioctl_tiocsig_DEPENDENCIES) $(EXTRA_ioctl_tiocsig_DEPENDENCIES) 
	@rm -f ioctl-tiocsig$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ioctl_tiocsig_OBJECTS) $(ioctl_tiocsig_LDADD) $(LIBS)

lsframe1$(EXEEXT): $(lsframe1_OBJECTS) $(lsframe1_DEPENDENCIES) $(EXTRA_lsframe1_DEPENDENCIES) 
	@rm -f lsframe1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lsframe1_OBJECTS) $(lsframe1_LDADD) $(LIBS)

lsframe2$(EXEEXT): $(lsframe2_OBJECTS) $(lsframe2_DEPENDENCIES) $(EXTRA_lsframe2_DEPENDENCIES) 
	@rm -f lsframe2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lsframe2_OBJECTS) $(lsframe2_LDADD) $(LIBS)

memalign$(EXEEXT): $(memalign_OBJECTS) $(memalign_DEPENDENCIES) $(EXTRA_memalign_DEPENDENCIES) 
	@rm -f memalign$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(memalign_OBJECTS) $(memalign_LDADD) $(LIBS)

memfd_create$(EXEEXT): $(memfd_create_OBJECTS) $(memfd_create_DEPENDENCIES) $(EXTRA_memfd_create_DEPENDENCIES) 
	@rm -f memfd_create$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(memfd_create_OBJECTS) $(memfd_create_LDADD) $(LIBS)

proc-auxv$(EXEEXT): $(proc_auxv_OBJECTS) $(proc_auxv_DEPENDENCIES) $(EXTRA_proc_auxv_DEPENDENCIES) 
	@rm -f proc-auxv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(proc_auxv_OBJECTS) $(proc_auxv_LDADD) $(LIBS)

rfcomm$(EXEEXT): $(rfcomm_OBJECTS) $(rfcomm_DEPENDENCIES) $(EXTRA_rfcomm_DEPENDENCIES) 
	@rm -f rfcomm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rfcomm_OBJECTS) $(rfcomm_LDADD) $(LIBS)

sigqueue$(EXEEXT): $(sigqueue_OBJECTS) $(sigqueue_DEPENDENCIES) $(EXTRA_sigqueue_DEPENDENCIES) 
	@rm -f sigqueue$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sigqueue_OBJECTS) $(sigqueue_LDADD) $(LIBS)

stack_changes$(EXEEXT): $(stack_changes_OBJECTS) $(stack_changes_DEPENDENCIES) $(EXTRA_stack_changes_DEPENDENCIES) 
	@rm -f stack_changes$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stack_changes_OBJECTS) $(stack_changes_LDADD) $(LIBS)

stack_switch$(EXEEXT): $(stack_switch_OBJECTS) $(stack_switch_DEPENDENCIES) $(EXTRA_stack_switch_DEPENDENCIES) 
	@rm -f stack_switch$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stack_switch_OBJECTS) $(stack_switch_LDADD) $(LIBS)

sys-copy_file_range$(EXEEXT): $(sys_copy_file_range_OBJECTS) $(sys_copy_file_range_DEPENDENCIES) $(EXTRA_sys_copy_file_range_DEPENDENCIES) 
	@rm -f sys-copy_file_range$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sys_copy_file_range_OBJECTS) $(sys_copy_file_range_LDADD) $(LIBS)

sys-execveat$(EXEEXT): $(sys_execveat_OBJECTS) $(sys_execveat_DEPENDENCIES) $(EXTRA_sys_execveat_DEPENDENCIES) 
	@rm -f sys-execveat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sys_execveat_OBJECTS) $(sys_execveat_LDADD) $(LIBS)

sys-openat$(EXEEXT): $(sys_openat_OBJECTS) $(sys_openat_DEPENDENCIES) $(EXTRA_sys_openat_DEPENDENCIES) 
	@rm -f sys-openat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sys_openat_OBJECTS) $(sys_openat_LDADD) $(LIBS)

sys-preadv2_pwritev2$(EXEEXT): $(sys_preadv2_pwritev2_OBJECTS) $(sys_preadv2_pwritev2_DEPENDENCIES) $(EXTRA_sys_preadv2_pwritev2_DEPENDENCIES) 
	@rm -f sys-preadv2_pwritev2$(EXEEXT)
	$(AM_V_CCLD)$(sys_preadv2_pwritev2_LINK) $(sys_preadv2_pwritev2_OBJECTS) $(sys_preadv2_pwritev2_LDADD) $(LIBS)

sys-preadv_pwritev$(EXEEXT): $(sys_preadv_pwritev_OBJECTS) $(sys_preadv_pwritev_DEPENDENCIES) $(EXTRA_sys_preadv_pwritev_DEPENDENCIES) 
	@rm -f sys-preadv_pwritev$(EXEEXT)
	$(AM_V_CCLD)$(sys_preadv_pwritev_LINK) $(sys_preadv_pwritev_OBJECTS) $(sys_preadv_pwritev_LDADD) $(LIBS)

sys-statx$(EXEEXT): $(sys_statx_OBJECTS) $(sys_statx_DEPENDENCIES) $(EXTRA_sys_statx_DEPENDENCIES) 
	@rm -f sys-statx$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sys_statx_OBJECTS) $(sys_statx_LDADD) $(LIBS)

syscalls-2007$(EXEEXT): $(syscalls_2007_OBJECTS) $(syscalls_2007_DEPENDENCIES) $(EXTRA_syscalls_2007_DEPENDENCIES) 
	@rm -f syscalls-2007$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(syscalls_2007_OBJECTS) $(syscalls_2007_LDADD) $(LIBS)

syslog-syscall$(EXEEXT): $(syslog_syscall_OBJECTS) $(syslog_syscall_DEPENDENCIES) $(EXTRA_syslog_syscall_DEPENDENCIES) 
	@rm -f syslog-syscall$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(syslog_syscall_OBJECTS) $(syslog_syscall_LDADD) $(LIBS)

timerfd-syscall$(EXEEXT): $(timerfd_syscall_OBJECTS) $(timerfd_syscall_DEPENDENCIES) $(EXTRA_timerfd_syscall_DEPENDENCIES) 
	@rm -f timerfd-syscall$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(timerfd_syscall_OBJECTS) $(timerfd_syscall_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/aligned_alloc.Po # am--include-marker
include ./$(DEPDIR)/brk.Po # am--include-marker
include ./$(DEPDIR)/capget.Po # am--include-marker
include ./$(DEPDIR)/check_execveat.Po # am--include-marker
include ./$(DEPDIR)/check_preadv2_pwritev2.Po # am--include-marker
include ./$(DEPDIR)/debuginfod-check.Po # am--include-marker
include ./$(DEPDIR)/dlclose_leak.Po # am--include-marker
include ./$(DEPDIR)/dlclose_leak_so_so-dlclose_leak_so.Po # am--include-marker
include ./$(DEPDIR)/enomem-enomem.Po # am--include-marker
include ./$(DEPDIR)/getregset.Po # am--include-marker
include ./$(DEPDIR)/ioctl-tiocsig.Po # am--include-marker
include ./$(DEPDIR)/lsframe1.Po # am--include-marker
include ./$(DEPDIR)/lsframe2.Po # am--include-marker
include ./$(DEPDIR)/memalign.Po # am--include-marker
include ./$(DEPDIR)/memfd_create.Po # am--include-marker
include ./$(DEPDIR)/proc-auxv.Po # am--include-marker
include ./$(DEPDIR)/rfcomm.Po # am--include-marker
include ./$(DEPDIR)/sigqueue.Po # am--include-marker
include ./$(DEPDIR)/stack_changes.Po # am--include-marker
include ./$(DEPDIR)/stack_switch.Po # am--include-marker
include ./$(DEPDIR)/sys-copy_file_range.Po # am--include-marker
include ./$(DEPDIR)/sys-execveat.Po # am--include-marker
include ./$(DEPDIR)/sys-openat.Po # am--include-marker
include ./$(DEPDIR)/sys-statx.Po # am--include-marker
include ./$(DEPDIR)/sys_preadv2_pwritev2-sys-preadv2_pwritev2.Po # am--include-marker
include ./$(DEPDIR)/sys_preadv_pwritev-sys-preadv_pwritev.Po # am--include-marker
include ./$(DEPDIR)/syscalls-2007.Po # am--include-marker
include ./$(DEPDIR)/syslog-syscall.Po # am--include-marker
include ./$(DEPDIR)/timerfd-syscall.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

dlclose_leak_so_so-dlclose_leak_so.o: dlclose_leak_so.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dlclose_leak_so_so_CFLAGS) $(CFLAGS) -MT dlclose_leak_so_so-dlclose_leak_so.o -MD -MP -MF $(DEPDIR)/dlclose_leak_so_so-dlclose_leak_so.Tpo -c -o dlclose_leak_so_so-dlclose_leak_so.o `test -f 'dlclose_leak_so.c' || echo '$(srcdir)/'`dlclose_leak_so.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dlclose_leak_so_so-dlclose_leak_so.Tpo $(DEPDIR)/dlclose_leak_so_so-dlclose_leak_so.Po
#	$(AM_V_CC)source='dlclose_leak_so.c' object='dlclose_leak_so_so-dlclose_leak_so.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dlclose_leak_so_so_CFLAGS) $(CFLAGS) -c -o dlclose_leak_so_so-dlclose_leak_so.o `test -f 'dlclose_leak_so.c' || echo '$(srcdir)/'`dlclose_leak_so.c

dlclose_leak_so_so-dlclose_leak_so.obj: dlclose_leak_so.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dlclose_leak_so_so_CFLAGS) $(CFLAGS) -MT dlclose_leak_so_so-dlclose_leak_so.obj -MD -MP -MF $(DEPDIR)/dlclose_leak_so_so-dlclose_leak_so.Tpo -c -o dlclose_leak_so_so-dlclose_leak_so.obj `if test -f 'dlclose_leak_so.c'; then $(CYGPATH_W) 'dlclose_leak_so.c'; else $(CYGPATH_W) '$(srcdir)/dlclose_leak_so.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dlclose_leak_so_so-dlclose_leak_so.Tpo $(DEPDIR)/dlclose_leak_so_so-dlclose_leak_so.Po
#	$(AM_V_CC)source='dlclose_leak_so.c' object='dlclose_leak_so_so-dlclose_leak_so.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dlclose_leak_so_so_CFLAGS) $(CFLAGS) -c -o dlclose_leak_so_so-dlclose_leak_so.obj `if test -f 'dlclose_leak_so.c'; then $(CYGPATH_W) 'dlclose_leak_so.c'; else $(CYGPATH_W) '$(srcdir)/dlclose_leak_so.c'; fi`

enomem-enomem.o: enomem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enomem_CFLAGS) $(CFLAGS) -MT enomem-enomem.o -MD -MP -MF $(DEPDIR)/enomem-enomem.Tpo -c -o enomem-enomem.o `test -f 'enomem.c' || echo '$(srcdir)/'`enomem.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/enomem-enomem.Tpo $(DEPDIR)/enomem-enomem.Po
#	$(AM_V_CC)source='enomem.c' object='enomem-enomem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enomem_CFLAGS) $(CFLAGS) -c -o enomem-enomem.o `test -f 'enomem.c' || echo '$(srcdir)/'`enomem.c

enomem-enomem.obj: enomem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enomem_CFLAGS) $(CFLAGS) -MT enomem-enomem.obj -MD -MP -MF $(DEPDIR)/enomem-enomem.Tpo -c -o enomem-enomem.obj `if test -f 'enomem.c'; then $(CYGPATH_W) 'enomem.c'; else $(CYGPATH_W) '$(srcdir)/enomem.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/enomem-enomem.Tpo $(DEPDIR)/enomem-enomem.Po
#	$(AM_V_CC)source='enomem.c' object='enomem-enomem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enomem_CFLAGS) $(CFLAGS) -c -o enomem-enomem.obj `if test -f 'enomem.c'; then $(CYGPATH_W) 'enomem.c'; else $(CYGPATH_W) '$(srcdir)/enomem.c'; fi`

sys_preadv2_pwritev2-sys-preadv2_pwritev2.o: sys-preadv2_pwritev2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sys_preadv2_pwritev2_CFLAGS) $(CFLAGS) -MT sys_preadv2_pwritev2-sys-preadv2_pwritev2.o -MD -MP -MF $(DEPDIR)/sys_preadv2_pwritev2-sys-preadv2_pwritev2.Tpo -c -o sys_preadv2_pwritev2-sys-preadv2_pwritev2.o `test -f 'sys-preadv2_pwritev2.c' || echo '$(srcdir)/'`sys-preadv2_pwritev2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sys_preadv2_pwritev2-sys-preadv2_pwritev2.Tpo $(DEPDIR)/sys_preadv2_pwritev2-sys-preadv2_pwritev2.Po
#	$(AM_V_CC)source='sys-preadv2_pwritev2.c' object='sys_preadv2_pwritev2-sys-preadv2_pwritev2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sys_preadv2_pwritev2_CFLAGS) $(CFLAGS) -c -o sys_preadv2_pwritev2-sys-preadv2_pwritev2.o `test -f 'sys-preadv2_pwritev2.c' || echo '$(srcdir)/'`sys-preadv2_pwritev2.c

sys_preadv2_pwritev2-sys-preadv2_pwritev2.obj: sys-preadv2_pwritev2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sys_preadv2_pwritev2_CFLAGS) $(CFLAGS) -MT sys_preadv2_pwritev2-sys-preadv2_pwritev2.obj -MD -MP -MF $(DEPDIR)/sys_preadv2_pwritev2-sys-preadv2_pwritev2.Tpo -c -o sys_preadv2_pwritev2-sys-preadv2_pwritev2.obj `if test -f 'sys-preadv2_pwritev2.c'; then $(CYGPATH_W) 'sys-preadv2_pwritev2.c'; else $(CYGPATH_W) '$(srcdir)/sys-preadv2_pwritev2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sys_preadv2_pwritev2-sys-preadv2_pwritev2.Tpo $(DEPDIR)/sys_preadv2_pwritev2-sys-preadv2_pwritev2.Po
#	$(AM_V_CC)source='sys-preadv2_pwritev2.c' object='sys_preadv2_pwritev2-sys-preadv2_pwritev2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sys_preadv2_pwritev2_CFLAGS) $(CFLAGS) -c -o sys_preadv2_pwritev2-sys-preadv2_pwritev2.obj `if test -f 'sys-preadv2_pwritev2.c'; then $(CYGPATH_W) 'sys-preadv2_pwritev2.c'; else $(CYGPATH_W) '$(srcdir)/sys-preadv2_pwritev2.c'; fi`

sys_preadv_pwritev-sys-preadv_pwritev.o: sys-preadv_pwritev.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sys_preadv_pwritev_CFLAGS) $(CFLAGS) -MT sys_preadv_pwritev-sys-preadv_pwritev.o -MD -MP -MF $(DEPDIR)/sys_preadv_pwritev-sys-preadv_pwritev.Tpo -c -o sys_preadv_pwritev-sys-preadv_pwritev.o `test -f 'sys-preadv_pwritev.c' || echo '$(srcdir)/'`sys-preadv_pwritev.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sys_preadv_pwritev-sys-preadv_pwritev.Tpo $(DEPDIR)/sys_preadv_pwritev-sys-preadv_pwritev.Po
#	$(AM_V_CC)source='sys-preadv_pwritev.c' object='sys_preadv_pwritev-sys-preadv_pwritev.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sys_preadv_pwritev_CFLAGS) $(CFLAGS) -c -o sys_preadv_pwritev-sys-preadv_pwritev.o `test -f 'sys-preadv_pwritev.c' || echo '$(srcdir)/'`sys-preadv_pwritev.c

sys_preadv_pwritev-sys-preadv_pwritev.obj: sys-preadv_pwritev.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sys_preadv_pwritev_CFLAGS) $(CFLAGS) -MT sys_preadv_pwritev-sys-preadv_pwritev.obj -MD -MP -MF $(DEPDIR)/sys_preadv_pwritev-sys-preadv_pwritev.Tpo -c -o sys_preadv_pwritev-sys-preadv_pwritev.obj `if test -f 'sys-preadv_pwritev.c'; then $(CYGPATH_W) 'sys-preadv_pwritev.c'; else $(CYGPATH_W) '$(srcdir)/sys-preadv_pwritev.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sys_preadv_pwritev-sys-preadv_pwritev.Tpo $(DEPDIR)/sys_preadv_pwritev-sys-preadv_pwritev.Po
#	$(AM_V_CC)source='sys-preadv_pwritev.c' object='sys_preadv_pwritev-sys-preadv_pwritev.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sys_preadv_pwritev_CFLAGS) $(CFLAGS) -c -o sys_preadv_pwritev-sys-preadv_pwritev.obj `if test -f 'sys-preadv_pwritev.c'; then $(CYGPATH_W) 'sys-preadv_pwritev.c'; else $(CYGPATH_W) '$(srcdir)/sys-preadv_pwritev.c'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(SCRIPTS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/aligned_alloc.Po
	-rm -f ./$(DEPDIR)/brk.Po
	-rm -f ./$(DEPDIR)/capget.Po
	-rm -f ./$(DEPDIR)/check_execveat.Po
	-rm -f ./$(DEPDIR)/check_preadv2_pwritev2.Po
	-rm -f ./$(DEPDIR)/debuginfod-check.Po
	-rm -f ./$(DEPDIR)/dlclose_leak.Po
	-rm -f ./$(DEPDIR)/dlclose_leak_so_so-dlclose_leak_so.Po
	-rm -f ./$(DEPDIR)/enomem-enomem.Po
	-rm -f ./$(DEPDIR)/getregset.Po
	-rm -f ./$(DEPDIR)/ioctl-tiocsig.Po
	-rm -f ./$(DEPDIR)/lsframe1.Po
	-rm -f ./$(DEPDIR)/lsframe2.Po
	-rm -f ./$(DEPDIR)/memalign.Po
	-rm -f ./$(DEPDIR)/memfd_create.Po
	-rm -f ./$(DEPDIR)/proc-auxv.Po
	-rm -f ./$(DEPDIR)/rfcomm.Po
	-rm -f ./$(DEPDIR)/sigqueue.Po
	-rm -f ./$(DEPDIR)/stack_changes.Po
	-rm -f ./$(DEPDIR)/stack_switch.Po
	-rm -f ./$(DEPDIR)/sys-copy_file_range.Po
	-rm -f ./$(DEPDIR)/sys-execveat.Po
	-rm -f ./$(DEPDIR)/sys-openat.Po
	-rm -f ./$(DEPDIR)/sys-statx.Po
	-rm -f ./$(DEPDIR)/sys_preadv2_pwritev2-sys-preadv2_pwritev2.Po
	-rm -f ./$(DEPDIR)/sys_preadv_pwritev-sys-preadv_pwritev.Po
	-rm -f ./$(DEPDIR)/syscalls-2007.Po
	-rm -f ./$(DEPDIR)/syslog-syscall.Po
	-rm -f ./$(DEPDIR)/timerfd-syscall.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/aligned_alloc.Po
	-rm -f ./$(DEPDIR)/brk.Po
	-rm -f ./$(DEPDIR)/capget.Po
	-rm -f ./$(DEPDIR)/check_execveat.Po
	-rm -f ./$(DEPDIR)/check_preadv2_pwritev2.Po
	-rm -f ./$(DEPDIR)/debuginfod-check.Po
	-rm -f ./$(DEPDIR)/dlclose_leak.Po
	-rm -f ./$(DEPDIR)/dlclose_leak_so_so-dlclose_leak_so.Po
	-rm -f ./$(DEPDIR)/enomem-enomem.Po
	-rm -f ./$(DEPDIR)/getregset.Po
	-rm -f ./$(DEPDIR)/ioctl-tiocsig.Po
	-rm -f ./$(DEPDIR)/lsframe1.Po
	-rm -f ./$(DEPDIR)/lsframe2.Po
	-rm -f ./$(DEPDIR)/memalign.Po
	-rm -f ./$(DEPDIR)/memfd_create.Po
	-rm -f ./$(DEPDIR)/proc-auxv.Po
	-rm -f ./$(DEPDIR)/rfcomm.Po
	-rm -f ./$(DEPDIR)/sigqueue.Po
	-rm -f ./$(DEPDIR)/stack_changes.Po
	-rm -f ./$(DEPDIR)/stack_switch.Po
	-rm -f ./$(DEPDIR)/sys-copy_file_range.Po
	-rm -f ./$(DEPDIR)/sys-execveat.Po
	-rm -f ./$(DEPDIR)/sys-openat.Po
	-rm -f ./$(DEPDIR)/sys-statx.Po
	-rm -f ./$(DEPDIR)/sys_preadv2_pwritev2-sys-preadv2_pwritev2.Po
	-rm -f ./$(DEPDIR)/sys_preadv_pwritev-sys-preadv_pwritev.Po
	-rm -f ./$(DEPDIR)/syscalls-2007.Po
	-rm -f ./$(DEPDIR)/syslog-syscall.Po
	-rm -f ./$(DEPDIR)/timerfd-syscall.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am \
	check-local clean clean-checkPROGRAMS clean-generic \
	clean-local cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


# This used to be required when Vex had a handwritten Makefile.  It
# shouldn't be needed any more, though.

#----------------------------------------------------------------------------
# noinst_PROGRAMS and noinst_DSYMS targets
#----------------------------------------------------------------------------

# On Darwin, for a program 'p', the DWARF debug info is stored in the
# directory 'p.dSYM'.  This must be generated after the executable is
# created, with 'dsymutil p'.  We could redefine LINK with a script that
# executes 'dsymutil' after linking, but that's a pain.  Instead we use this
# hook so that every time "make check" is run, we subsequently invoke
# 'dsymutil' on all the executables that lack a .dSYM directory, or that are
# newer than their corresponding .dSYM directory.
build-noinst_DSYMS: $(noinst_DSYMS)
	for f in $(noinst_DSYMS); do \
	  if [ ! -e $$f.dSYM  -o  $$f -nt $$f.dSYM ] ; then \
	      echo "dsymutil $$f"; \
	      dsymutil $$f; \
	  fi; \
	done

# This is used by coregrind/Makefile.am and Makefile.tool.am for doing
# "in-place" installs.  It copies $(noinst_PROGRAMS) into $inplacedir.
# It needs to be depended on by an 'all-local' rule.
inplace-noinst_PROGRAMS: $(noinst_PROGRAMS)
	mkdir -p $(inplacedir); \
	for f in $(noinst_PROGRAMS) ; do \
	  rm -f $(inplacedir)/$$f; \
	  ln -f -s ../$(subdir)/$$f $(inplacedir); \
	done

# Similar to inplace-noinst_PROGRAMS
inplace-noinst_DSYMS: build-noinst_DSYMS
	mkdir -p $(inplacedir); \
	for f in $(noinst_DSYMS); do \
	  rm -f $(inplacedir)/$$f.dSYM; \
	  ln -f -s ../$(subdir)/$$f.dSYM $(inplacedir); \
	done

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make install".  It copies $(noinst_PROGRAMS) into $prefix/libexec/valgrind/.
# It needs to be depended on by an 'install-exec-local' rule.
install-noinst_PROGRAMS: $(noinst_PROGRAMS)
	$(mkinstalldirs) $(DESTDIR)$(pkglibexecdir); \
	for f in $(noinst_PROGRAMS); do \
	  $(INSTALL_PROGRAM) $$f $(DESTDIR)$(pkglibexecdir); \
	done

# This is used by coregrind/Makefile.am and by <tool>/Makefile.am for doing
# "make uninstall".  It removes $(noinst_PROGRAMS) from $prefix/libexec/valgrind/.
# It needs to be depended on by an 'uninstall-local' rule.
uninstall-noinst_PROGRAMS:
	for f in $(noinst_PROGRAMS); do \
	  rm -f $(DESTDIR)$(pkglibexecdir)/$$f; \
	done

# Similar to install-noinst_PROGRAMS.
# Nb: we don't use $(INSTALL_PROGRAM) here because it doesn't work with
# directories.  XXX: not sure whether the resulting permissions will be
# correct when using 'cp -R'...
install-noinst_DSYMS: build-noinst_DSYMS
	$(mkinstalldirs) $(DESTDIR)$(pkglibexecdir); \
	for f in $(noinst_DSYMS); do \
	  cp -R $$f.dSYM $(DESTDIR)$(pkglibexecdir); \
	done

# Similar to uninstall-noinst_PROGRAMS.
uninstall-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -f $(DESTDIR)$(pkglibexecdir)/$$f.dSYM; \
	done

# This needs to be depended on by a 'clean-local' rule.
clean-noinst_DSYMS:
	for f in $(noinst_DSYMS); do \
	  rm -rf $$f.dSYM; \
	done

check-local: build-noinst_DSYMS

clean-local: clean-noinst_DSYMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
