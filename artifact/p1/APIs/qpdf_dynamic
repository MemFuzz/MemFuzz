_M_realloc_insert<const std::shared_ptr<Pipeline>&>
setLastOffset
__uninitialized_copy_a<std::move_iterator<char*>, char*, char>
replaceKeyAndGetOld
_M_access<(anonymous namespace)::Handlers::setupOutputFile()::<lambda(char const*)>*>
pbase
_GLOBAL__sub_I__ZN9QPDF_NameC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
__throw_regex_error
move<std::__shared_ptr<Pl_QPDFTokenizer, (__gnu_cxx::_Lock_policy)2>&>
_M_eliminate_dummy
move<std::shared_ptr<QPDFJob::UOConfig>&>
unordered_map
fgetwc
forward<const std::shared_ptr<Pipeline>&>
__exchange_and_add
forward<char const (&)[7]>
is_explicit_utf8
pair<std::_Rb_tree_iterator<QPDF::ObjUser>&, bool&>
move<const std::allocator<QPDFAcroFormDocumentHelper>&>
widen
_M_access<(anonymous namespace)::ImageOptimizer::makePipeline(const string&, Pipeline*)::<lambda(Pipeline&, const string&)>*>
_M_emplace_hint_unique<const std::piecewise_construct_t&, std::tuple<int const&>, std::tuple<> >
_Construct<QPDFExc, const QPDFExc&>
getFieldsWithQualifiedName
operator()<(anonymous namespace)::Handlers*&>
swap<Pipeline*>
_M_enable_shared_from_this_with<QPDFNameTreeObjectHelper>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<NNTreeImpl, std::allocator<NNTreeImpl>, (__gnu_cxx::_Lock_policy)2> > >
move<std::allocator<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > >&>
operator!=<const std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >
~Handlers
allocate_shared<Pl_StdioFile, std::allocator<Pl_StdioFile>, char const (&)[12], _IO_FILE*&>
_M_conjure_hashtable
_M_insert_state
_M_insert<const QPDFJob::AddAttachment&>
_M_get_previous_node
shared_ptr<QPDFFormFieldObjectHelper::Members>
_M_rep_once_more
make_shared<SF_ASCIIHexDecode>
getFontName
_M_copy<std::_Rb_tree<QPDFObjGen, std::pair<const QPDFObjGen, std::set<QPDF::ObjUser> >, std::_Select1st<std::pair<const QPDFObjGen, std::set<QPDF::ObjUser> > >, std::less<QPDFObjGen>, std::allocator<std::pair<const QPDFObjGen, std::set<QPDF::ObjUser> > > >::_Reuse_or_alloc_node>
__shared_ptr<std::allocator<Pl_AES_PDF>, char const (&)[22], Pipeline*&, bool, unsigned char*, long unsigned int>
__addressof<const (anonymous namespace)::Handlers::setupUnderlayPassword()::<lambda(char const*)> >
destroy<std::pair<const std::__cxx11::basic_string<char>, ClosedFileInputSource*> >
move<const std::allocator<Pl_Flate>&>
_M_create_node<std::pair<long long int, QPDFObjectHandle>&>
allocate_shared<JSON::JSON_null, std::allocator<JSON::JSON_null> >
Buffer
flattenAnnotations
getStart
~_Bind
forward<std::shared_ptr<InputSource>&>
__alloc_on_move<std::allocator<int> >
function<std::shared_ptr<QPDFStreamFilter> (*)()>
_M_enable_shared_from_this_with<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >
destroy<char>
__shared_count<QPDFJob::CopyAttConfig*>
setWarnCallback
~_Impl
__call<void, QPDF*&&, char const*&&, 0, 1, 2>
get_current_time
operator!=<std::__cxx11::sub_match<char const*>*>
__niter_base<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
sin
~QPDFArrayItems
construct<std::pair<const std::__cxx11::basic_string<char>, std::map<long unsigned int, std::__cxx11::basic_string<char> > >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
construct<std::pair<int const, int>, const std::piecewise_construct_t&, std::tuple<int const&>, std::tuple<> >
sqrt
__copy_move_a2<true, char const**, char const**>
QPDFPageObjectHelper
newBool
_M_not_empty_function<QPDFPageObjectHelper::getBleedBox(bool, bool)::<lambda()> >
getUTF8Value
asStreamWithAssert
move<const std::allocator<Pl_RC4>&>
__alloc_on_move<std::allocator<QPDFObjectHandle> >
__shared_ptr<QPDFJob::Members>
forward<std::_Rb_tree_iterator<QPDF::ObjUser> >
shared_ptr<std::allocator<QPDFCryptoProvider::Members> >
forward<const QPDFFormFieldObjectHelper&>
uninitialized_copy<__gnu_cxx::__normal_iterator<const QPDFObjectHandle*, std::vector<QPDFObjectHandle> >, QPDFObjectHandle*>
__do_alloc_on_move<std::allocator<QPDF::CHPageOffsetEntry> >
beginJsonKeyArray
operator!=<const std::__cxx11::regex_traits<char>::_RegexMask*, std::vector<std::__cxx11::regex_traits<char>::_RegexMask, std::allocator<std::__cxx11::regex_traits<char>::_RegexMask> > >
move<std::__cxx11::basic_string<char>*&>
_Destroy<std::pair<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, int>*, std::pair<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, int> >
~ContentProvider
setupEmpty
operator==<const std::shared_ptr<QPDFObjectHandle::TokenFilter>*, std::vector<std::shared_ptr<QPDFObjectHandle::TokenFilter> > >
_M_initialize_dispatch<__gnu_cxx::__normal_iterator<QPDFObjectHandle*, std::vector<QPDFObjectHandle> > >
QPDFObjGen
make_shared<Pl_Flate, char const (&)[16], Pipeline*&, Pl_Flate::action_e>
_M_do_set
__addressof<std::pair<char, char> >
JSON_number
__shared_count<BufferInputSource*>
_M_access<(anonymous namespace)::Handlers::initHandlers()::<lambda(const string&)>*>
_M_access<(anonymous namespace)::Handlers::beginDict((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&)>*>
shared_ptr<QPDFLogger::Members>
allocate_shared<Pl_AES_PDF, std::allocator<Pl_AES_PDF>, char const (&)[22], Pipeline*&, bool, unsigned char*, long unsigned int>
strpbrk
string_to_ll
make_shared<NNTreeIterator, NNTreeIterator>
lldiv
forward<long unsigned int>
allowInsecure
move<std::shared_ptr<QPDFValue>&>
operator()<const QPDFObjGen&>
__addressof<const QPDFJob::handleUnderOverlay(QPDF&)::<lambda(Pipeline&, const string&)> >
__invoke<void ((anonymous namespace)::ArgParser::* const&)(const std::__cxx11::basic_string<char>&), (anonymous namespace)::ArgParser*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
ResourceReplacer
_S_copy
_Construct<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >, std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >
forward<QPDFPageObjectHelper>
rehash
_Rb_tree
_M_search_from_first
move<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, false, true>&>
__shared_ptr<char const*, std::default_delete<char const* []> >
_M_emplace_hint_unique<const std::piecewise_construct_t&, std::tuple<long long unsigned int const&>, std::tuple<> >
__shared_ptr<Pl_Count::Members>
tuple<long unsigned int>
forward<char const (&)[15]>
is_digit
__niter_base<QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> >
destroy<std::pair<long unsigned int const, std::__cxx11::basic_string<char> > >
mem_fn<void(), (anonymous namespace)::ArgParser>
argEndEncryption
operator std::__atomic_base<long long unsigned int>::__int_type
move<(anonymous namespace)::Handlers::initHandlers()::<lambda()>&>
~QPDFDocumentHelper
move<std::shared_ptr<SF_RunLengthDecode>&>
_M_construct_node<const std::piecewise_construct_t&, std::tuple<int&&>, std::tuple<> >
allocator<Pl_String>
wcsrtombs
setR6EncryptionParameters
inTokenReady
checkDataChecksum
shared_ptr<QPDFOutlineDocumentHelper::Members>
uninitialized_copy<std::__cxx11::sub_match<char const*>*, std::__cxx11::sub_match<char const*>*>
_M_store_code
tuple<const std::_Placeholder<1>&, std::shared_ptr<InputSource>&, const std::_Placeholder<2>&>
_Sp_counted_ptr_inplace<QPDF&>
__shared_count<(anonymous namespace)::ContentProvider*>
_Destroy<std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char> >
~QPDFExc
_Sp_counted_ptr_inplace<JSON>
operator-<QPDFParser::parser_state_e*, std::vector<QPDFParser::parser_state_e> >
_M_emplace_aux
_Sp_counted_ptr_inplace<long unsigned int>
__niter_base<const std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >
forward<const std::pair<const QPDFObjGen, QPDFXRefEntry>&>
writeXRefStream
staticAesIv
~JSON_string
~map
allocate_shared<SF_DCTDecode, std::allocator<SF_DCTDecode> >
move<std::vector<QPDFPageObjectHelper>&>
_M_access<std::shared_ptr<QPDFCrypto_openssl> (**)()>
_M_insert_unique_<const std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> >&, std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> > > >::_Alloc_node>
operator==<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*>
getValueAsName
construct<JSON::JSON_number, long long int&>
emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
swap<char*>
operator!=<const QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> >
_M_copy<std::_Rb_tree<long unsigned int, long unsigned int, std::_Identity<long unsigned int>, std::less<long unsigned int>, std::allocator<long unsigned int> >::_Alloc_node>
Pl_Concatenate
_M_state
destroy<QPDF::CHSharedObjectEntry>
__miter_base<__gnu_cxx::__normal_iterator<QPDFObjectHandle*, std::vector<QPDFObjectHandle> > >
adjustInheritedFields
_Sp_counted_ptr_inplace<const std::locale&, std::regex_constants::syntax_option_type&>
~ObjCache
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_OStream, std::allocator<Pl_OStream>, (__gnu_cxx::_Lock_policy)2> > >
shared_ptr<JSON::JSON_blob>
construct<QPDFPageObjectHelper, QPDFPageObjectHelper>
_M_dec_size
makeDirect
setCreationDate
function<(anonymous namespace)::Handlers::beginPages(JSON)::<lambda(const string&, JSON)> >
_M_erase_at_begin
_S_propagate_on_copy_assign
setFilterOnWrite
destroy<std::pair<const QPDFObjGen, std::shared_ptr<QPDF::ForeignStreamData> > >
__copy_move_a2<false, __gnu_cxx::__normal_iterator<const std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >, __gnu_cxx::__normal_iterator<std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >
__uninit_copy<std::move_iterator<QPDFObjectHandle*>, QPDFObjectHandle*>
forward<std::regex_constants::syntax_option_type&>
operator==<QPDFObjGen*>
__shared_ptr<Pl_OStream::Members>
uninitialized_copy<QPDFOutlineObjectHelper*, QPDFOutlineObjectHelper*>
check_owner_password
~FileInputSource
operator==<const Buffer*, std::vector<Buffer> >
_Destroy<std::pair<char const*, int>*, std::pair<char const*, int> >
destroy<std::shared_ptr<QPDF> >
__shared_ptr<Pl_DCT::Members>
lrint
~CHPageOffsetEntry
getUIntValueAsUInt
move<const std::allocator<JSON::JSON_dictionary>&>
__shared_count<QPDFJob::Config*>
forward<NNTreeIterator&>
__copy_move_a<false, int*, int*>
_M_realloc_insert<QPDFObjectHandle>
destroy<Pipeline*>
__shared_count<FileInputSource, std::allocator<FileInputSource>, char const*>
_GLOBAL__sub_I__ZN4JSON7MembersC2ESt10shared_ptrINS_10JSON_valueEE
_M_insert<long unsigned int>
__uninit_copy<__gnu_cxx::__normal_iterator<const std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >, std::__cxx11::sub_match<char const*>*>
_M_insert_any_matcher_posix<true, true>
__shared_ptr<QPDFCrypto_gnutls>
__do_alloc_on_move<std::allocator<char> >
__uninitialized_default_n<QPDF::CHPageOffsetEntry*, long unsigned int>
_Sp_counted_ptr_inplace<std::function<void(Pipeline*)>&>
Pl_StdioFile
construct<Pl_String, char const (&)[13], Pipeline*&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
forward<const std::__cxx11::regex_traits<char>::_RegexMask&>
setFormFieldName
wcstok
destroy<Pl_RC4>
QPDFCrypto_openssl
~QPDFPageObjectHelper
_Sp_counted_ptr_inplace<const QPDFObjectHandle&>
processRow
setContentNormalization
move<QUtil::read_lines_from_file(std::istream&, bool)::<lambda(char&)>&>
writeStringNoQDF
_M_construct_node<const QPDFObjGen&>
getStreamDataBuffer
construct<std::pair<const QPDFObjGen, QPDFObjectHandle>, const std::piecewise_construct_t&, std::tuple<QPDFObjGen&&>, std::tuple<> >
getStreamJSON
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_TIFFPredictor, std::allocator<Pl_TIFFPredictor>, (__gnu_cxx::_Lock_policy)2> > >
_M_create_node<const std::piecewise_construct_t&, std::tuple<long long unsigned int const&>, std::tuple<> >
forward<std::_Rb_tree_iterator<std::pair<const QPDFObjGen, std::vector<QPDFAnnotationObjectHelper> > > >
flip
writeBuffer
operator==<QPDFAnnotationObjectHelper*>
operator std::integral_constant<long unsigned int, 2>::value_type
ResolveRecorder
pad_short_parameter
__destroy<__gnu_cxx::__normal_iterator<QPDFObjectHandle*, std::vector<QPDFObjectHandle> > >
~ArgParser
InputSource
_M_init_functor
isArray
_Destroy<(anonymous namespace)::QPDFPageData*>
__unique<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, ClosedFileInputSource*> >*&, std::_Rb_tree_node_base*&>
operator!=<(anonymous namespace)::StackFrame*>
QPDFWordTokenFinder
handlePageSpecs
emplace_back<std::shared_ptr<QPDFStreamFilter> >
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, QPDFArgParser::OptionEntry> > >*&>
min<long unsigned int>
_M_is_grep
__uninitialized_copy_a<std::move_iterator<std::shared_ptr<Pipeline>*>, std::shared_ptr<Pipeline>*, std::shared_ptr<Pipeline> >
keepFilesOpen
move<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >&>
reserve
_M_get_token
_M_construct_node<const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&>
vfwscanf
~Pipeline
move<std::allocator<std::_List_node<std::__cxx11::basic_string<char> > >&>
destroy<JSON>
_M_create_node<std::shared_ptr<JSONHandler> >
_M_access<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, false, true> >
shared_ptr<std::allocator<JSON::JSON_number>, double&>
__addressof<QPDFPageObjectHelper>
keyValid
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> >*&>
_M_enable_shared_from_this_with<SF_ASCII85Decode>
forward<std::_Mem_fn<void (QPDFArgParser::*)(const std::__cxx11::basic_string<char>&)> >
construct<NNTreeIterator::PathElement, NNTreeIterator::PathElement>
isDictionaryOfType
__niter_base<char const*>
asctime
parse_xrefFirst
move<(anonymous namespace)::StackFrame&>
_M_remove_bucket_begin
operator std::integral_constant<int, 0>::value_type
move<std::_Bind<std::_Mem_fn<void (QPDFArgParser::*)(const std::__cxx11::basic_string<char>&)>(QPDFArgParser*, std::_Placeholder<1>)>&>
jsonOutput
__shared_ptr<std::allocator<Pl_String>, char const (&)[13], Pipeline*&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
__invoke_impl<void, std::_Mem_fn<void ((anonymous namespace)::Handlers::*)()>&, (anonymous namespace)::Handlers*&>
swap<std::__cxx11::regex_traits<char>::_RegexMask*>
_Construct<QPDFFormFieldObjectHelper, QPDFFormFieldObjectHelper>
QPDFXRefEntry
operator()<const std::pair<const QPDFObjGen, std::set<QPDF::ObjUser> >&>
_M_weak_release
iterator
_Sp_counted_ptr_inplace<char const (&)[15], Pipeline*&>
operator==<std::shared_ptr<char const>*>
forward<std::_Rb_tree_iterator<QPDF::ObjUser>&>
setlocale
__miter_base<char const*>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Buffer, std::allocator<Buffer>, (__gnu_cxx::_Lock_policy)2> > >
_M_transfer
move<const std::allocator<JSON::JSON_number>&>
oiMinHeight
ParserCallbacks
_M_access<(anonymous namespace)::Handlers::setupReplaceInput()::<lambda()>*>
strtold
_M_enable_shared_from_this_with<QPDF_Destroyed>
setWarn
map
_M_access<std::shared_ptr<QPDFCrypto_gnutls> (*)()>
ilogb
writeHeader
move<QPDFNumberTreeObjectHelper*&>
any
__addressof<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >
generateObjectStreams
_M_emplace_hint_unique<const std::piecewise_construct_t&, std::tuple<int&&>, std::tuple<> >
fill_buffer_input_buffer
setupUnderlayFile
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFCryptoImpl>()> > >*&, std::_Rb_tree_node_base*&>
__copy_m<const QPDFAnnotationObjectHelper*, QPDFAnnotationObjectHelper*>
addExplicitElementsToList
_M_enable_shared_from_this_with<QPDFJob::Config>
_M_insert<std::shared_ptr<JSONHandler> >
SF_ASCIIHexDecode
function<QPDFPageObjectHelper::getArtBox(bool, bool)::<lambda()> >
basic_istream
__shared_ptr<Pl_Discard>
operator!=<Pipeline>
_M_enable_shared_from_this_with<BufferInputSource>
move<QPDF_Stream::pipeStreamData(Pipeline*, bool*, int, qpdf_stream_decode_level_e, bool, bool)::<lambda(char const*, int)>&>
forward<void ((anonymous namespace)::ArgParser::* const&)(const std::__cxx11::basic_string<char>&)>
_M_enable_shared_from_this_with<SF_ASCIIHexDecode>
move<const std::allocator<(anonymous namespace)::SF_Crypt>&>
move<std::__shared_ptr<JSON::JSON_null, (__gnu_cxx::_Lock_policy)2>&>
__destroy<std::shared_ptr<QPDF>*>
__invoke_impl<void, std::_Mem_fn<void (QPDFArgParser::*)(const std::__cxx11::basic_string<char>&)>&, QPDFArgParser*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
jobJsonFile
destroy<Pl_PNGFilter>
getDictAsMap
recompressFlate
construct<QPDFExc, const QPDFExc&>
handleEOF
__builtin_strchr
_M_insert_<int, std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node>
_M_not_empty_function<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, false, true> >
is
move<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, false, true>&>
Pipeline
destroy<QPDFPageObjectHelper>
key
move<const std::allocator<QPDF::StringDecrypter>&>
move<const std::allocator<Pl_ASCIIHexDecoder>&>
_M_eat_escape_ecma
~basic_istream
oct
operator!=<char>
_M_drop_node
sub_match
_GLOBAL__sub_I__ZN11QPDF_Stream20filter_abbreviationsB5cxx11E
__addressof<std::shared_ptr<QPDFStreamFilter> (* const)()>
construct<std::pair<const QPDFObjGen, std::__cxx11::basic_string<char> >, const std::piecewise_construct_t&, std::tuple<const QPDFObjGen&>, std::tuple<> >
addDictKeyHandler
~ResourceFinder
allocate_shared<JSON::JSON_string, std::allocator<JSON::JSON_string>, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
_Destroy<(anonymous namespace)::StackFrame*>
forward<const QPDFExc&>
maxEnd
__invoke<void (QPDF::* const&)(std::shared_ptr<InputSource>, char const*), QPDF*, std::shared_ptr<InputSource>&, char const*>
move<const std::allocator<Pl_ASCII85Decoder>&>
expired
_M_ptr
_M_uses_single_bucket
asDictionary
_M_expression_term<true, true>
_M_insert_unique<__gnu_cxx::__normal_iterator<QPDFObjGen*, std::vector<QPDFObjGen> > >
function<QPDFJob::addAttachments(QPDF&)::<lambda(Pipeline&, const string&)> >
function<QPDF_Stream::<lambda()> >
_S_compare
move<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*&>
arrayItem
addParameter
toI<long long int>
__shared_count<Pl_Buffer, std::allocator<Pl_Buffer>, char const (&)[12]>
_M_clone_node<std::_Rb_tree<QPDFObjGen, std::pair<const QPDFObjGen, QPDFXRefEntry>, std::_Select1st<std::pair<const QPDFObjGen, QPDFXRefEntry> >, std::less<QPDFObjGen>, std::allocator<std::pair<const QPDFObjGen, QPDFXRefEntry> > >::_Alloc_node>
__invoke_impl<void, void (QPDF::* const&)(char const*, char const*), QPDF*, char const*&, char const*>
allocate_shared<QPDFWriter::PipelinePopper, std::allocator<QPDFWriter::PipelinePopper>, QPDFWriter*>
_M_prefix
decryptStream
swap<std::locale>
setV
CopiedStreamDataProvider
construct<std::shared_ptr<JSON::JSON_value>, const std::shared_ptr<JSON::JSON_value>&>
eq_int_type
construct<Pipeline*, Pipeline*>
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, QPDFArgParser::OptionEntry> > >*&, std::_Rb_tree_node_base*&>
getObjectHandle
__destroy<Buffer*>
forward<QPDFObjectHandle::TokenFilter*>
warningExit0
addHelpTopic
operator!=<std::shared_ptr<QPDFObjectHandle::TokenFilter>*>
shared_ptr<QPDFJob::UOConfig>
regex_search<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >, char, std::__cxx11::regex_traits<char> >
move<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, true, true>&>
_Destroy<(anonymous namespace)::StackFrame*, (anonymous namespace)::StackFrame>
move<std::__shared_ptr<Pl_DCT, (__gnu_cxx::_Lock_policy)2>&>
__uninit_copy<std::move_iterator<QPDF::HSharedObjectEntry*>, QPDF::HSharedObjectEntry*>
jpeg_read_header
_M_access<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, true, false> >
make_shared<std::__detail::_NFA<std::__cxx11::regex_traits<char> >, const std::locale&, std::regex_constants::syntax_option_type&>
getInheritableFieldValueAsString
function<QPDFPageObjectHelper::getImages()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
move<std::locale&>
outputFile
_M_need_rehash
_M_insert_unique_node
_M_create_node<const QPDF::ObjUser&>
rawStreamData
_Sp_counted_ptr_inplace<QPDFObjectHandle&, QPDF&>
~SF_Crypt
end
allocator<(anonymous namespace)::SF_Crypt>
shared_ptr<JSON::JSON_array>
__destroy<std::shared_ptr<JSON::JSON_value>*>
destroy<JSONHandler>
_Head_base
move<(anonymous namespace)::ImageOptimizer::makePipeline(const string&, Pipeline*)::<lambda(Pipeline&, const string&)>&>
fdim
function<provide_data(std::shared_ptr<InputSource>, qpdf_offset_t, qpdf_offset_t)::<lambda(Pipeline*)> >
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_PNGFilter, std::allocator<Pl_PNGFilter>, (__gnu_cxx::_Lock_policy)2> > >
uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int> >, int*>
_GLOBAL__sub_I__ZN26QPDFAnnotationObjectHelperC2E16QPDFObjectHandle
clearerr
newReserved
__miter_base<QPDF::JSONReactor::state_e*>
__shared_ptr<std::allocator<NNTreeIterator>, NNTreeIterator&>
optimize
__do_alloc_on_move<std::allocator<QPDFObjectHandle> >
copyAnnotations
shared_ptr<std::allocator<QPDFOutlineObjectHelper>, QPDFOutlineObjectHelper&>
mem_fn<void(), (anonymous namespace)::Handlers>
move<std::shared_ptr<Pl_AES_PDF>&>
getEmbeddedFile
_M_not_empty_function<(anonymous namespace)::Handlers::beginDict((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&, JSON)> >
shared_ptr<std::allocator<Pl_Buffer>, char const (&)[12]>
writeString
allocate_shared<QPDFAcroFormDocumentHelper, std::allocator<QPDFAcroFormDocumentHelper>, QPDF&>
function<QPDFPageObjectHelper::getCropBox(bool, bool)::<lambda()> >
make_shared<QPDFFileSpecObjectHelper, QPDFObjectHandle&>
insert<__gnu_cxx::__normal_iterator<QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> > >
__copy_move_a<true, QPDF::JSONReactor::state_e*, QPDF::JSONReactor::state_e*>
~_Sp_counted_ptr_inplace
forward<const std::pair<long unsigned int const, QPDFObjectHandle>&>
Pl_RunLength
__throw_length_error
__addressof<std::__cxx11::basic_string<char> >
_Tuple_impl<(anonymous namespace)::Handlers*, const std::_Placeholder<1>&>
_S_buffer_size
construct<Pl_PNGFilter, char const (&)[11], Pipeline*&, Pl_PNGFilter::action_e, unsigned int, unsigned int, unsigned int>
~JSONParser
insertAfter
_M_add_ref_lock
forward<char**>
destroy<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >
popHandler
move<QPDF::CHSharedObjectEntry*&>
requiresPassword
pair<std::_Rb_tree_iterator<std::pair<const QPDFObjGen, QPDFXRefEntry> >, std::_Rb_tree_iterator<std::pair<const QPDFObjGen, QPDFXRefEntry> > >
make_shared<Pl_String, char const (&)[13], Pipeline*&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
_M_realloc_insert<int const&>
construct<std::shared_ptr<JSON>, const std::shared_ptr<JSON>&>
Rectangle
~basic_ostream
job_json_schema
swap<std::shared_ptr<QPDFCryptoImpl> (*)(const std::_Any_data&)>
__shared_ptr<std::allocator<JSONHandler> >
getValueAsReal
hasIndex
_M_access<QPDFPageObjectHelper::getFormXObjects()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
_Head_base<int>
shouldRemoveUnreferencedResources
__addressof<const QPDFJob::handlePageSpecs(QPDF&, bool&, std::vector<std::shared_ptr<QPDF> >&)::<lambda(Pipeline&, const string&)> >
_M_get_sol_pos
_M_access<QPDFJob::copyAttachments(QPDF&)::<lambda(Pipeline&, const string&)> >
nothrow_t
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<JSON::JSON_array, std::allocator<JSON::JSON_array>, (__gnu_cxx::_Lock_policy)2> > >
_M_construct_node<const std::piecewise_construct_t&, std::tuple<long unsigned int const&>, std::tuple<> >
_Sp_counted_deleter
construct<std::pair<long unsigned int const, QPDFObjectHandle>, const std::piecewise_construct_t&, std::tuple<long unsigned int&&>, std::tuple<> >
getBleedBox
operator<< <std::char_traits<char> >
_M_clone_node<std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::set<long unsigned int> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::set<long unsigned int> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::set<long unsigned int> > > >::_Alloc_node>
_M_access<provide_data(std::shared_ptr<InputSource>, qpdf_offset_t, qpdf_offset_t)::<lambda(Pipeline*)>*>
_List_const_iterator
_M_realloc_insert<QPDF::HPageOffsetEntry>
construct<QPDFFormFieldObjectHelper, const QPDFFormFieldObjectHelper&>
scalbn
forward<const std::shared_ptr<JSONHandler>&>
operator=<Pl_Flate>
_M_limit
move<std::shared_ptr<QPDFCrypto_openssl>&>
_Head_base<char const*>
PaethPredictor
getFormXObjects
operator()<const std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::set<long unsigned int> > >&>
flattenRotation
setMinimumPDFVersion
__niter_base<QPDFObjectHandle*>
__shared_count<JSON::Members*>
__copy_move_a2<false, __gnu_cxx::__normal_iterator<const QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> >, __gnu_cxx::__normal_iterator<QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> > >
_M_assign<std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>&) [with _Key = long unsigned int; _Value = std::pair<long unsigned int const, QPDFObjectHandle>; _Alloc = std::allocator<std::pair<long unsigned int const, QPDFObjectHandle> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<long unsigned int>; _H1 = std::hash<long unsigned int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]::<lambda(const __node_type*)> >
_M_enable_shared_from_this_with<ClosedFileInputSource>
get<0, const QPDFObjGen&>
pair<char const (&)[16], std::shared_ptr<QPDFStreamFilter> (&)()>
merge
move<std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > >&>
mblen
find_first_of
setFilename
_M_clone_node<std::_Rb_tree<QPDFObjGen, QPDFObjGen, std::_Identity<QPDFObjGen>, std::less<QPDFObjGen>, std::allocator<QPDFObjGen> >::_Reuse_or_alloc_node>
assertInteger
setupEncryptUserPassword
construct<Pl_Buffer, char const (&)[12]>
make_shared<JSON::JSON_bool, bool&>
construct<char const*, char const*>
_Destroy<QPDFObjectHandle*, QPDFObjectHandle>
operator=<Pl_PNGFilter>
assertOperator
setupPagesRange
_GLOBAL__sub_I__ZN24QPDFFileSpecObjectHelperC2E16QPDFObjectHandle
__shared_count<JSON::JSON_number, std::allocator<JSON::JSON_number>, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
_Tuple_impl<const std::_Placeholder<1>&, char const*&, const std::_Placeholder<2>&>
construct<std::pair<const QPDF::ObjUser, std::set<QPDFObjGen> >, const std::pair<const QPDF::ObjUser, std::set<QPDFObjGen, std::less<QPDFObjGen>, std::allocator<QPDFObjGen> > >&>
emplace_back<QPDFFormFieldObjectHelper>
_M_insert_unique_<const std::__cxx11::basic_string<char>&, std::_Rb_tree<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>, std::_Identity<std::__cxx11::basic_string<char> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::__cxx11::basic_string<char> > >::_Alloc_node>
pair<char const (&)[13], std::shared_ptr<QPDFStreamFilter> (&)()>
getDataChecksum
Pl_TIFFPredictor
__copy_m<const QPDFObjectHandle*, QPDFObjectHandle*>
getTypeCode
uninitialized_copy<std::move_iterator<QPDFParser::parser_state_e*>, QPDFParser::parser_state_e*>
file_provider
__lg
hasDescription
getChoices
__shared_ptr<char>
QPDFOutlineObjectHelper
__addressof<std::shared_ptr<JSON> >
move<QPDFParser::parser_state_e&>
_Construct<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >
operator-<std::shared_ptr<JSON::JSON_value>*, std::vector<std::shared_ptr<JSON::JSON_value> > >
allocate_shared<QPDFNumberTreeObjectHelper, std::allocator<QPDFNumberTreeObjectHelper>, QPDFObjectHandle, QPDF&>
copyAttachments
construct<SF_ASCII85Decode>
_M_range_initialize<const std::__cxx11::basic_string<char>*>
_Tuple_impl<const std::_Placeholder<1>&, std::shared_ptr<InputSource>&, const std::_Placeholder<2>&>
argEndPages
operator!=<const QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> >
__copy_move_a2<false, QPDFOutlineObjectHelper*, QPDFOutlineObjectHelper*>
pair<std::_Rb_tree_iterator<int>&, bool&>
wcsxfrm
fprintf
tuple<(anonymous namespace)::Handlers*>
inReal
__shared_ptr<JSON::JSON_dictionary>
_M_fill_assign
operator!=<QPDFObjectHandle*, std::vector<QPDFObjectHandle> >
_M_enable_shared_from_this_with<QPDFOutlineObjectHelper::Members>
showXRefTable
~QPDF_Array
_M_do_count
__uninitialized_default_n_a<std::pair<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, int>*, long unsigned int, std::pair<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, int> >
make_pair<std::__detail::_Node_iterator<std::pair<long unsigned int const, QPDFObjectHandle>, false, false>, bool>
uninitialized_copy<std::move_iterator<QPDFObjGen*>, QPDFObjGen*>
operator=<Pl_RunLength>
_List_iterator
_M_get_value
beginAddAttachment
_S_propagate_on_move_assign
to_longlong<long long unsigned int>
getDescription
_M_access<QUtil::read_lines_from_file(std::istream&, bool)::<lambda(char&)>*>
range_check_substract<long long int>
swap<ContentNormalizer*>
operator!=<long unsigned int*, std::vector<long unsigned int> >
setOutputPipeline
iterate_md5_digest
forward<std::tuple<> >
swap<void (*)(const std::_Any_data&, char const*&&)>
transform<char*>
_M_insert_unique<QPDFObjGen>
forward<std::allocator<std::__detail::_Hash_node<std::pair<long unsigned int const, QPDFObjectHandle>, false> > >
QPDFTime
_M_not_empty_function<(anonymous namespace)::Handlers::ignoreItem()::<lambda(const string&, JSON)> >
_Destroy<std::unique_ptr<char []>*>
~basic_ostringstream
forward<const std::shared_ptr<QPDF>&>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<QPDF::StringDecrypter, std::allocator<QPDF::StringDecrypter>, (__gnu_cxx::_Lock_policy)2> > >
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, true, false>*>
destroy<QPDFFormFieldObjectHelper>
_Deque_iterator
move<std::vector<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >, std::allocator<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > > >&>
_M_access<(anonymous namespace)::Handlers::setupOutputFile()::<lambda(char const*)> >
make_shared<QPDFNameTreeObjectHelper, QPDFObjectHandle&, QPDF&>
_GLOBAL__sub_I__ZN12QPDF_IntegerC2Ex
_M_handle_line_end_assertion
operator==<QPDFFormFieldObjectHelper*>
operator""_qpdf
getProgname
forward<QPDF::HPageOffsetEntry>
swap<QPDFWriter::PipelinePopper*>
_M_create_storage
move<const std::allocator<JSON::JSON_bool>&>
__addressof<std::allocator<std::_List_node<QPDFOutlineObjectHelper> > >
forward<std::tuple<int&&> >
_GLOBAL__sub_I__ZN6Pl_DCT7MembersC2ENS_8action_eEPKcjji13J_COLOR_SPACEPNS_14CompressConfigE
__addressof<std::allocator<std::_List_node<QPDFJob::AddAttachment> > >
__uninitialized_copy_a<const QPDFExc*, QPDFExc*, QPDFExc>
setIV
_Tuple_impl<(anonymous namespace)::Handlers*>
newNull
shared_ptr<std::allocator<ContentNormalizer> >
allowEOF
is_obj_key
insertItemAndGetNew
_M_not_empty_function<std::shared_ptr<QPDFCrypto_gnutls>()>
move<QPDFJob::CopyAttConfig*&>
move<std::shared_ptr<QPDFCrypto_gnutls>&>
getObjectCount
destroy<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >
base
function<(anonymous namespace)::Handlers::beginDict((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&, JSON)> >
move<void (*&)(const std::_Any_data&, char const*&&)>
_Sp_counted_ptr_inplace<char const (&)[11], Pipeline*&, bool&>
~Pl_Discard
operator!=<char, std::char_traits<char>, std::allocator<char> >
_M_construct_node<QPDFObjGen&>
_Construct<std::shared_ptr<JSON>, std::shared_ptr<JSON> >
~__nonesuch
__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> >, QPDFAnnotationObjectHelper*, QPDFAnnotationObjectHelper>
shared_ptr<std::allocator<QPDF> >
construct<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle>, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, QPDFObjectHandle>&>
decodeAverage
QPDF_Operator
_Destroy<std::pair<char, char>*>
operator!=<QPDFObjGen*>
getTrimBox
_Head_base<(anonymous namespace)::ArgParser*>
_M_resize_pos
nestedState
_M_construct_node<const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
jpeg_buffer_src
destroy<QPDFJob::CopyAttachmentFrom>
__throw_bad_function_call
move<std::__shared_ptr<Pipeline, (__gnu_cxx::_Lock_policy)2>&>
replaceOrRemoveKey
move<__gnu_cxx::__ops::_Iter_less_iter&>
_M_enable_shared_from_this_with<NNTreeImpl>
shared_ptr<std::allocator<JSONHandler> >
forward<std::_Rb_tree_node<long long int>*&>
key_comp
staticId
construct<Pl_RunLength, char const (&)[17], Pipeline*&, Pl_RunLength::action_e>
_M_extract<long int>
read_xrefTable
wctrans
_GLOBAL__sub_I__ZN13Pl_LZWDecoderC2EPKcP8Pipelineb
construct<std::pair<const std::__cxx11::basic_string<char>, QPDFArgParser::HelpTopic>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
operator=<Pl_LZWDecoder>
getMajor
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, true, true>*>
construct<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >, long int&, const std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&>
construct<std::pair<const std::__cxx11::basic_string<char>, QPDF::encryption_method_e>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
__alloc_on_move<std::allocator<QPDF::CHSharedObjectEntry> >
_M_access<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, false, false>*>
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::set<QPDFObjGen> > >*&>
shared_ptr<std::allocator<SF_FlateLzwDecode>, bool>
pair<std::_Rb_tree_iterator<std::pair<const QPDFObjGen, std::vector<QPDFAnnotationObjectHelper> > >, std::_Rb_tree_iterator<std::pair<const QPDFObjGen, std::vector<QPDFAnnotationObjectHelper> > > >
_Hashtable_base
operator==<const std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*, std::vector<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >, std::allocator<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > > > >
data
_RegexTranslator
compareKeyItem
isChoice
function<JSONHandler::handle(const string&, JSON)::<lambda(const string&, JSON)> >
move<std::__shared_ptr<InputSource, (__gnu_cxx::_Lock_policy)2>&>
gnutls_cipher_get_key_size
_Unchecked_test
jpeg_pipeline_dest
_M_enable_shared_from_this_with<QPDFOutlineDocumentHelper::Members>
_Destroy<double*>
__builtin___vsnprintf_chk
~_Alloc_hider
tmpnam
setDescriptionFromInput
_M_enable_shared_from_this_with<NNTreeIterator>
_M_insert_backref
~Pl_Concatenate
EVP_DigestInit_ex
_BracketMatcher
writeArrayItem
__uninitialized_move_if_noexcept_a<QPDF::CHSharedObjectEntry*, QPDF::CHSharedObjectEntry*, std::allocator<QPDF::CHSharedObjectEntry> >
emplace_back<(anonymous namespace)::StackFrame>
forward<JSON&&>
everCalledGetAllPages
~AttConfig
assertString
remainder
__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > >
_M_reserve_elements_at_front
lastPathElement
_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> > >
~CHSharedObject
run
tolower
construct<JSON::JSON_number, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
__copy_move_a<false, QPDFObjectHandle*, QPDFObjectHandle*>
insertCompletion
_Sp_counted_ptr_inplace<char const (&)[7], std::basic_ostream<char, std::char_traits<char> >&>
construct<std::pair<const QPDFObjGen, std::vector<QPDFOutlineObjectHelper> >, const std::piecewise_construct_t&, std::tuple<QPDFObjGen&&>, std::tuple<> >
shared_ptr<std::allocator<NNTreeImpl>, (anonymous namespace)::NameTreeDetails&, QPDF&, QPDFObjectHandle&, bool&>
init_pipeline_destination
allowWeakCrypto
__uninitialized_copy_a<std::move_iterator<std::shared_ptr<JSON::JSON_value>*>, std::shared_ptr<JSON::JSON_value>*, std::shared_ptr<JSON::JSON_value> >
~Pl_Buffer
__shared_ptr<Pl_RunLength::Members>
forward_as_tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
position
operator<=<char, std::char_traits<char>, std::allocator<char> >
~_Vector_base
__addressof<std::__detail::_Hash_node_base*>
doJSONObjectinfo
_M_not_empty_function<QPDFJob::addAttachments(QPDF&)::<lambda(Pipeline&, const string&)> >
newArray
construct<Pl_StdioFile, char const (&)[12], _IO_FILE*&>
move<std::shared_ptr<Pl_QPDFTokenizer>&>
Token
_M_not_empty_function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, true, true> >
make_shared<QPDFNameTreeObjectHelper, QPDFNameTreeObjectHelper&>
__shared_ptr<std::allocator<Pl_DCT>, char const (&)[4], Pipeline*&, unsigned int&, unsigned int&, int&, J_COLOR_SPACE&>
_M_not_empty_function<std::_Bind<std::_Mem_fn<void (QPDFArgParser::*)(const std::__cxx11::basic_string<char>&)>(QPDFArgParser*, std::_Placeholder<1>)> >
forceV4
_Sp_counted_ptr_inplace<char const (&)[17], Pipeline*&, Pl_RunLength::action_e>
__niter_base<(anonymous namespace)::QPDFPageData*>
_Destroy<(anonymous namespace)::JSONParser::parser_state_e*>
_Destroy<std::unique_ptr<char []> >
forward<std::shared_ptr<QPDF> >
__uninit_copy<std::move_iterator<std::pair<char, char>*>, std::pair<char, char>*>
HelpTopic
construct<Pl_QPDFTokenizer, char const (&)[11], ContentNormalizer*, Pipeline*&>
wrapInArray
move<ContentNormalizer*&>
log1p
move<QUtil::call_main_from_wmain(int, wchar_t const* const*, std::function<int(int, char const* const*)>)::<lambda(int, char**)>&>
__shared_count<NNTreeIterator, std::allocator<NNTreeIterator>, NNTreeIterator>
move<std::tuple<(anonymous namespace)::Handlers*, std::_Placeholder<1> >&>
getFieldType
newIndirect
getObjStreamIndex
showAttachment
__make_move_if_noexcept_iterator<QPDFObjGen>
_M_enable_shared_from_this_with<JSON::JSON_bool>
toI<unsigned char>
operator!=<char const**, std::vector<char const*> >
EncryptionParameters
__addressof<Buffer>
__addressof<QPDFObjectHandle>
bind<std::_Mem_fn<void (QPDF::*)(std::shared_ptr<InputSource>, char const*)>&, const std::_Placeholder<1>&, std::shared_ptr<InputSource>&, const std::_Placeholder<2>&>
__uninitialized_copy_a<std::move_iterator<std::shared_ptr<QPDF>*>, std::shared_ptr<QPDF>*, std::shared_ptr<QPDF> >
discard
_M_at_end
__uninit_copy<std::move_iterator<QPDF::JSONReactor::state_e*>, QPDF::JSONReactor::state_e*>
pushOutlinesToPart
removePage
swap<std::__uniq_ptr_impl<Buffer::Members, std::default_delete<Buffer::Members> > >
__to_xstring<std::__cxx11::basic_string<char>, char>
setSuppressOriginalObjectIDs
forward<char*&>
forward<(anonymous namespace)::StackFrame>
getItem
__copy_move_a<true, long unsigned int*, long unsigned int*>
strstr
destroy<std::pair<const QPDFObjGen, QPDF::ObjCache> >
__shared_ptr<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >
getInheritableFieldValue
__uninit_copy<std::move_iterator<QPDF::CHSharedObjectEntry*>, QPDF::CHSharedObjectEntry*>
__get_helper<0, std::_Placeholder<1>, std::shared_ptr<InputSource>, std::_Placeholder<2> >
destroy<QPDFCrypto_openssl>
forward<int&&>
mac_roman_to_utf8
make_shared<QPDF::StringDecrypter, QPDF*, const QPDFObjGen&>
uninitialized_copy<std::move_iterator<(anonymous namespace)::JSONParser::parser_state_e*>, (anonymous namespace)::JSONParser::parser_state_e*>
shared_ptr<QPDFLogger>
__destroy<std::__cxx11::regex_traits<char>::_RegexMask*>
writeAppearance
setCompressionLevel
_Rb_tree_const_iterator
make_shared<JSON::JSON_string, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
accessibility
_M_access<QPDFJob::shouldRemoveUnreferencedResources(QPDF&)::<lambda(Pipeline&, const string&)> >
move<std::__shared_ptr<Pl_StdioFile, (__gnu_cxx::_Lock_policy)2>&>
_M_enable_shared_from_this_with<(anonymous namespace)::InvalidInputSource>
_Sp_counted_ptr_inplace<char const (&)[16], Pipeline*&, Pl_Flate::action_e>
__niter_base<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >
_M_access<(anonymous namespace)::ImageOptimizer::evaluate(const string&)::<lambda(Pipeline&, const string&)>*>
__copy_move_backward_a2<false, std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >**, std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >**>
fgetc
__uninit_copy<std::move_iterator<(anonymous namespace)::StackFrame*>, (anonymous namespace)::StackFrame*>
_M_realloc_insert<const std::shared_ptr<JSON>&>
__shared_ptr<(anonymous namespace)::FunctionProvider>
underlay
__alloc_on_move<std::allocator<std::_Rb_tree_node<std::__cxx11::basic_string<char> > > >
__destroy<QPDFFormFieldObjectHelper*>
unsigned_char_pointer
move<QUtil::file_provider(const string&)::<lambda(Pipeline*)>&>
readToken
addPathElement
__uninitialized_copy_a<std::move_iterator<std::__cxx11::sub_match<char const*>*>, std::__cxx11::sub_match<char const*>*, std::__cxx11::sub_match<char const*> >
_M_enable_shared_from_this_with<(anonymous namespace)::ValueSetter>
__copy_move_a2<true, long long int*, long long int*>
regex_search<std::char_traits<char>, std::allocator<char>, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >, char, std::__cxx11::regex_traits<char> >
setLinearization
__shared_count<QPDFEFStreamObjectHelper::Members*>
construct<std::pair<const QPDF::ObjUser, std::set<QPDFObjGen> >, const std::piecewise_construct_t&, std::tuple<QPDF::ObjUser&&>, std::tuple<> >
shared_ptr<std::allocator<JSON::JSON_dictionary> >
QPDF_Bool
_M_unique
_M_access<QPDFPageObjectHelper::getImages()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)>*>
_M_cur_int_value
_Construct<std::pair<char, char>, const std::pair<char, char>&>
_Head_base<QPDFArgParser*&>
__shared_count<JSON::JSON_number, std::allocator<JSON::JSON_number>, double&>
~_Rb_tree_impl
__shared_count<(anonymous namespace)::CoalesceProvider*>
log10
_Destroy<QPDFExc*, QPDFExc>
_M_insert_<std::__cxx11::basic_string<char>, std::_Rb_tree<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>, std::_Identity<std::__cxx11::basic_string<char> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::__cxx11::basic_string<char> > >::_Alloc_node>
EVP_CIPHER_CTX_set_padding
_Destroy<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >
operator()<QPDFObjectHandle, std::__cxx11::basic_string<char>, QPDFObjectHandle>
move<JSON::JSON_value*&>
swap
exit
__copy_move_a<false, (anonymous namespace)::QPDFPageData*, (anonymous namespace)::QPDFPageData*>
operator()<(anonymous namespace)::ArgParser*&>
__copy_move_a<false, std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >**, std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >**>
tgamma
forward<const (anonymous namespace)::QPDFPageData&>
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::set<long unsigned int> > >*&, std::_Rb_tree_node_base*&>
__shared_ptr<Pl_DCT>
__addressof<std::shared_ptr<char const> >
uninitialized_copy<__gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char>*>
_M_install_facet
operator-<long long int*, std::vector<long long int> >
_M_access
_M_not_empty_function<(anonymous namespace)::Handlers::setupOverlayFile()::<lambda(char const*)> >
_Construct<QPDFOutlineObjectHelper, QPDFOutlineObjectHelper>
swap<bool (*)(const std::_Any_data&, char&&)>
destroy<std::shared_ptr<QPDFStreamFilter> >
_List_impl
repeat
construct<QPDFNameTreeObjectHelper, QPDFNameTreeObjectHelper&>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<QPDFNumberTreeObjectHelper, std::allocator<QPDFNumberTreeObjectHelper>, (__gnu_cxx::_Lock_policy)2> > >
move<std::__shared_ptr<ContentNormalizer, (__gnu_cxx::_Lock_policy)2>&>
tuple<QPDFArgParser*&, const std::_Placeholder<1>&>
CopyAttachmentFrom
streamData
beginDict
construct<QPDF::HSharedObjectEntry, QPDF::HSharedObjectEntry>
forward<const QPDF::ObjUser&>
operator-<Buffer*, std::vector<Buffer> >
function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, false, true> >
_M_access<QPDFPageObjectHelper::removeUnreferencedResources()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)>*>
move<Pl_Buffer*&>
_M_access<std::_Bind<std::_Mem_fn<void (QPDF::*)(char const*, char const*)>(std::_Placeholder<1>, char const*, std::_Placeholder<2>)>*>
operator!=<QPDFNumberTreeObjectHelper>
move<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)()>&>
destroy<Pl_OStream>
beginPages
move<(anonymous namespace)::QPDFPageData&>
__shared_ptr<SF_ASCIIHexDecode>
__shared_ptr<std::allocator<Pl_QPDFTokenizer>, char const (&)[11], ContentNormalizer*, Pipeline*&>
_Vector_base
__destroy<std::shared_ptr<char const>*>
getObjStreamNumber
__uninit_copy<__gnu_cxx::__normal_iterator<const std::__cxx11::regex_traits<char>::_RegexMask*, std::vector<std::__cxx11::regex_traits<char>::_RegexMask, std::allocator<std::__cxx11::regex_traits<char>::_RegexMask> > >, std::__cxx11::regex_traits<char>::_RegexMask*>
shared_ptr<std::allocator<Buffer>, long unsigned int>
forward<const std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle>&>
wprintf
binary_search<__gnu_cxx::__normal_iterator<char const*, std::vector<char, std::allocator<char> > >, char>
compute_data_key
get<0, QPDFObjGen&&>
placeFormXObject
beginEncrypt256bit
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<SF_ASCII85Decode, std::allocator<SF_ASCII85Decode>, (__gnu_cxx::_Lock_policy)2> > >
adjusted_offset
setO
_M_has_alt
destroy<JSON::JSON_string>
__partial_sort<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_less_iter>
shared_ptr<QPDFObject>
~__atomic_base
_M_construct_node<const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<long unsigned int, std::less<long unsigned int>, std::allocator<long unsigned int> > >&>
_M_construct_node<const std::piecewise_construct_t&, std::tuple<const QPDF::ObjUser&>, std::tuple<> >
_Sp_counted_ptr_inplace<(anonymous namespace)::NameTreeDetails&, QPDF&, QPDFObjectHandle&, bool&>
shrink_to_fit
_M_push_back_aux<long int const&>
__uninit_copy<std::move_iterator<std::__cxx11::sub_match<char const*>*>, std::__cxx11::sub_match<char const*>*>
__gthread_active_p
isReserved
_M_access<QPDFJob::handlePageSpecs(QPDF&, bool&, std::vector<std::shared_ptr<QPDF> >&)::<lambda(Pipeline&, const string&)>*>
_AllocNode
inInlineImage
__shared_ptr<std::allocator<Pl_Flate>, char const (&)[15], Pipeline*&, Pl_Flate::action_e>
getAllPagesInternal
make_shared<Pl_Flate, char const (&)[15], Pipeline*&, Pl_Flate::action_e>
FileInputSource
tuple<const std::_Placeholder<1>&, char const*&, const std::_Placeholder<2>&>
swap<QPDFNameTreeObjectHelper*>
operator!=<std::pair<char, char>*>
__distance<__gnu_cxx::__normal_iterator<char const*, std::vector<char, std::allocator<char> > > >
call_main_from_wmain
get<0, (anonymous namespace)::Handlers*, std::_Placeholder<1> >
_Tuple_impl<(anonymous namespace)::ArgParser*&>
max<qpdf_stream_decode_level_e>
forward<Buffer>
~Pl_QPDFTokenizer
QPDFParser
_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> >, int>
pointer_to
allocator<JSON::JSON_bool>
checkHOutlines
forward<Pl_RunLength::action_e>
copyStream
checkDictionaryKeySeen
hash_function
_M_not_empty_function<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, true, false> >
operator!=<std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >
_M_do_find_next
resolve
forward<const std::pair<long unsigned int const, unsigned char>&>
~QPDF_Name
emplace_back<QPDFObjectHandle>
~QPDF_String
truncate_password_V5
__shared_ptr<(anonymous namespace)::Pl_Track>
withImages
forward<std::_Rb_tree_iterator<long long int>&>
_Sp_counted_ptr_inplace<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
setPreserveEncryption
operator-<QPDF::CHSharedObjectEntry*, std::vector<QPDF::CHSharedObjectEntry> >
__shared_count<QPDFLogger*>
stack<>
pair<char const (&)[17], std::shared_ptr<QPDFStreamFilter> (&)()>
operator-
forceR5
_M_insert_unique<const std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*>
__addressof<const QPDFJob::doListAttachments(QPDF&)::<lambda(Pipeline&, const string&)> >
calculateHOutline
to_ushort<int>
shared_ptr<QPDFJob::CopyAttConfig>
getBuffer
operator==<__gnu_cxx::__normal_iterator<std::shared_ptr<QPDFStreamFilter>*, std::vector<std::shared_ptr<QPDFStreamFilter> > > >
forward<std::tuple<QPDF::ObjUser&&> >
operator-<std::shared_ptr<JSON>*, std::vector<std::shared_ptr<JSON> > >
forward<QPDFNameTreeObjectHelper&>
isCheckbox
__make_move_if_noexcept_iterator<QPDFFormFieldObjectHelper>
initHandlers
operator==<const QPDFObjectHandle*, std::vector<QPDFObjectHandle> >
__regex_algo_impl<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >, char, std::__cxx11::regex_traits<char>, (std::__detail::_RegexExecutorPolicy)0, true>
__destroy<QPDFJob::PageSpec*>
construct<std::__detail::_NFA<std::__cxx11::regex_traits<char> >, const std::locale&, std::regex_constants::syntax_option_type&>
~ImageOptimizer
construct<std::pair<long int const, long int>, const std::piecewise_construct_t&, std::tuple<long int const&>, std::tuple<> >
move<Pl_StdioFile*&>
~NNTreeIterator
__uninitialized_default_n_a<QPDF::HPageOffsetEntry*, long unsigned int, QPDF::HPageOffsetEntry>
path_basename
allocate_shared<Pl_ASCIIHexDecoder, std::allocator<Pl_ASCIIHexDecoder>, char const (&)[16], Pipeline*&>
pair<std::_Rb_tree_node<std::pair<const QPDFObjGen, std::vector<QPDFAnnotationObjectHelper> > >*&, std::_Rb_tree_node_base*&>
getFieldForAnnotation
reserveObjectIfNotExists
mimetype
__get_helper<1, std::default_delete<bool []> >
~regex_iterator
destroy<QPDF::ForeignStreamData>
__copy_m<long int*>
analyze_encoding
_M_fill_initialize
at
construct<std::pair<long unsigned int const, QPDFObjectHandle>, const std::pair<long unsigned int const, QPDFObjectHandle>&>
jpeg_set_defaults
operator!=<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*, std::vector<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >, std::allocator<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > > > >
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<JSON::JSON_bool, std::allocator<JSON::JSON_bool>, (__gnu_cxx::_Lock_policy)2> > >
__shared_ptr<std::allocator<Pl_Buffer>, char const (&)[12]>
seek
~QPDF_Operator
~QPDF_Reserved
_M_not_empty_function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, false, false> >
_Destroy<__gnu_cxx::__normal_iterator<QPDFObjectHandle*, std::vector<QPDFObjectHandle> >, QPDFObjectHandle>
__shared_count<JSON::JSON_null, std::allocator<JSON::JSON_null> >
copy_backward<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >**, std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >**>
_GLOBAL__sub_I__ZN9QPDFValue9do_createEPS_
pair<char const (&)[3], char const (&)[11]>
EVP_DigestUpdate
fastUnread
move<std::_Tuple_impl<1, std::_Placeholder<1> >&>
allocate_shared<QPDFNameTreeObjectHelper, std::allocator<QPDFNameTreeObjectHelper>, QPDFObjectHandle&, QPDF&>
initializePipelineStack
operator()<long unsigned int const&>
__uninitialized_move_if_noexcept_a<QPDF::HSharedObjectEntry*, QPDF::HSharedObjectEntry*, std::allocator<QPDF::HSharedObjectEntry> >
isCompleting
getAppearanceDictionary
__shared_ptr<SF_FlateLzwDecode>
_Construct<std::shared_ptr<QPDFStreamFilter>, std::shared_ptr<QPDFStreamFilter> >
Pl_Buffer
__addressof<const QPDFJob::writeOutfile(QPDF&)::<lambda(Pipeline&, const string&)> >
_M_insert_character_class_matcher<false, false>
printf
getChecksum
_M_not_empty_function<(anonymous namespace)::Handlers::beginArray((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&)> >
__atomic_add_single
_M_realloc_insert<(anonymous namespace)::QPDFPageData>
_M_rightmost
gnutls_cipher_decrypt2
~locale
construct<JSONHandler>
beginOverlay
operator()<const std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle>&>
addDictionaryMember
move<std::__shared_ptr<QPDFJob::CopyAttConfig, (__gnu_cxx::_Lock_policy)2>&>
SHA2_update
shared_ptr<JSON::JSON_dictionary>
move<QPDF::HPageOffsetEntry*&>
getStreamDataProvider
_Destroy<std::__detail::_State<char>*>
_GLOBAL__sub_I__ZN10QPDFWriter16ProgressReporterD2Ev
_M_clone_node<std::_Rb_tree<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>, std::_Identity<std::__cxx11::basic_string<char> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::__cxx11::basic_string<char> > >::_Alloc_node>
_Destroy<__gnu_cxx::__normal_iterator<QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> > >
setWriterOptions
_Construct<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >
destroy<QPDFCryptoProvider::Members>
findEI
move<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)(const std::__cxx11::basic_string<char>&)>&>
gnutls_hash
to_size<int>
construct<Pl_AES_PDF, char const (&)[22], Pipeline*&, bool, unsigned char*, long unsigned int>
shared_ptr<Pl_RunLength::Members>
difftime
find_first_not_of
swap<QPDF::HPageOffsetEntry*>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<JSON::JSON_bool, std::allocator<JSON::JSON_bool>, (__gnu_cxx::_Lock_policy)2> > >
HSharedObjectEntry
destroy<Pl_QPDFTokenizer>
_M_enable_shared_from_this_with<Pl_QPDFTokenizer>
wcstol
forward<std::_Rb_tree_iterator<int> >
__get_helper<0, (anonymous namespace)::Handlers*>
__miter_base<int*>
_Val_less_iter
forward<J_COLOR_SPACE&>
operator-<QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> >
swapObjects
__get_helper<0, Buffer*, std::default_delete<Buffer> >
encode_macroman
unparseObject
move<(anonymous namespace)::Handlers::setupAddAttachmentFile()::<lambda(char const*)>&>
_M_access<(anonymous namespace)::Handlers::setupPassword()::<lambda(char const*)>*>
operator-<std::__cxx11::regex_traits<char>::_RegexMask*, std::vector<std::__cxx11::regex_traits<char>::_RegexMask, std::allocator<std::__cxx11::regex_traits<char>::_RegexMask> > >
EVP_CipherUpdate
_Rb_tree_key_compare
HPageOffset
__copy_move_a<false, const QPDFObjectHandle*, QPDFObjectHandle*>
forward<Pl_Flate::action_e>
__niter_base<const QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> >
_Construct<QPDF::HSharedObjectEntry, QPDF::HSharedObjectEntry>
_M_get_insert_hint_equal_pos
_M_copy<std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >::_Alloc_node>
__copy_move_a<true, char*, char*>
_M_access<QUtil::read_lines_from_file(char const*, bool)::<lambda(char&)>*>
forward<std::_Rb_tree_node_base*&>
pair<std::_Rb_tree_iterator<std::__cxx11::basic_string<char> >, bool>
argEnd256BitEncryption
_M_create_nodes
description
setFieldAttribute
addOptionsToCompletions
oiMinArea
pair<long unsigned int const&, 0>
EVP_rc4
operator==<Pipeline>
__shared_count<JSON::JSON_number, std::allocator<JSON::JSON_number>, long long int&>
_M_access<QPDFPageObjectHelper::getTrimBox(bool, bool)::<lambda()>*>
__final_insertion_sort<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_less_iter>
__call<void, 0>
__get_helper<1, std::default_delete<char []> >
_Destroy<__gnu_cxx::__normal_iterator<QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> > >
doListAttachments
operator!=<std::__detail::_State<char>*, std::vector<std::__detail::_State<char>, std::allocator<std::__detail::_State<char> > > >
construct<std::pair<const QPDFObjGen, int>, const std::piecewise_construct_t&, std::tuple<const QPDFObjGen&>, std::tuple<> >
MD5
getNumber
operator()<const std::pair<long unsigned int const, QPDFObjectHandle>&>
JSON_array
_M_enable_shared_from_this_with<SF_RunLengthDecode>
argPagesPassword
cbrt
move<std::shared_ptr<JSONHandler>&>
wcsncpy
shared_ptr<JSONHandler::Members>
_Sp_counted_ptr_inplace<char const*>
__shared_ptr<BufferInputSource>
_M_clear
_M_not_empty_function<QPDFJob::shouldRemoveUnreferencedResources(QPDF&)::<lambda(Pipeline&, const string&)> >
__shared_ptr<QPDFJob::AttConfig>
_Destroy<std::shared_ptr<Pipeline>*, std::shared_ptr<Pipeline> >
forward<QPDF*>
__builtin_strlen
check_openssl
main
move<const std::allocator<SF_ASCIIHexDecode>&>
operator==<char const**, std::vector<char const*> >
writeTrailer
__shared_ptr<(anonymous namespace)::SF_Crypt>
_Sp_counted_ptr_inplace<(anonymous namespace)::NumberTreeDetails&, QPDF&, QPDFObjectHandle&, bool&>
atexit
operator-<QPDFJob::PageSpec*, std::vector<QPDFJob::PageSpec> >
getArrayAsRectangle
readHSharedObject
operator delete
makeBlob
forward<std::_Rb_tree_node<std::pair<long unsigned int const, std::__cxx11::basic_string<char> > >*&>
~_List_impl
move<QPDF*&>
forward<bool>
swap<Pl_String*>
operator()<char, __gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > > >
__uninitialized_move_if_noexcept_a<QPDFJob::PageSpec*, QPDFJob::PageSpec*, std::allocator<QPDFJob::PageSpec> >
typeWarning
~basic_istringstream
operator!=<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >
forward<const QPDF::JSONReactor::state_e&>
newlineBeforeEndstream
pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, 0>
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, true, false>*>
__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const (anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> >, (anonymous namespace)::QPDFPageData*, (anonymous namespace)::QPDFPageData>
forward<std::_Rb_tree_node<std::pair<int const, QPDFXRefEntry> >*&>
__sort_heap<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_less_iter>
verbose
uninitialized_copy<std::move_iterator<std::shared_ptr<JSON::JSON_value>*>, std::shared_ptr<JSON::JSON_value>*>
__shared_count<QPDFJob::AttConfig*>
to_int<double>
_Destroy<__gnu_cxx::__normal_iterator<QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> >, QPDFOutlineObjectHelper>
__copy_m<long long int>
__shared_ptr<JSON::Members>
allowModifyAll
_M_insert_<const std::__cxx11::basic_string<char>&, std::_Rb_tree<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>, std::_Identity<std::__cxx11::basic_string<char> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::__cxx11::basic_string<char> > >::_Alloc_node>
_M_enable_shared_from_this_with<Pl_TIFFPredictor>
_S_equals
getOwningQPDF
_M_enable_shared_from_this_with<QPDF::StringDecrypter>
setDictDescription
_M_h1
_GLOBAL__sub_I__ZN10Pl_AES_PDF13use_static_ivE
_M_is_word
forward<const std::__cxx11::basic_string<char>&>
operator!=<char*, std::__cxx11::basic_string<char> >
__shared_count<QPDFObjectHandle::QPDFArrayItems::iterator::Members*>
operator new []
QPDF_Stream
__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int> > >
forward<char const (&)[4]>
to_ullong
getUniqueId
move<std::__shared_ptr<Pl_Buffer::Members, (__gnu_cxx::_Lock_policy)2>&>
uninitialized_copy<QPDFAnnotationObjectHelper*, QPDFAnnotationObjectHelper*>
_S_whichword
__shared_ptr<Pl_PNGFilter>
_M_set_length
uninitialized_copy<std::move_iterator<char const**>, char const**>
shared_ptr<std::allocator<Buffer>, long unsigned int&>
setCompressStreams
_GLOBAL__sub_I__ZN24QPDFEFStreamObjectHelperC2E16QPDFObjectHandle
construct<Pl_DCT, char const (&)[11], Pipeline*&>
defaultLogger
move<std::shared_ptr<Pl_Buffer>&>
__shared_ptr<Pl_AES_PDF>
__shared_ptr<QPDFOutlineDocumentHelper::Members>
move<const std::allocator<SF_DCTDecode>&>
wmemset
forward_as_tuple<QPDFObjGen>
__shared_ptr<QPDFWriter::Members>
construct<QPDFJob::AddAttachment, const QPDFJob::AddAttachment&>
shared_ptr<std::allocator<JSON::JSON_blob>, std::function<void(Pipeline*)>&>
operator-<char const*, std::__cxx11::basic_string<char> >
_M_not_empty_function<QPDFJob::doProcess(std::shared_ptr<QPDF>&, std::function<void(QPDF*, char const*)>, char const*, bool, bool, bool)::<lambda(Pipeline&, const string&)> >
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, true, true> >
_M_handle_match
strtoll
bindBare<(anonymous namespace)::ArgParser>
construct<std::pair<long unsigned int const, std::__cxx11::basic_string<char> >, const std::piecewise_construct_t&, std::tuple<long unsigned int const&>, std::tuple<> >
move<std::shared_ptr<QPDFObject>&>
_M_create_node<const std::piecewise_construct_t&, std::tuple<int&&>, std::tuple<> >
mbsrtowcs
__addressof<const (anonymous namespace)::Handlers::setupReplaceInput()::<lambda()> >
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<QPDFWriter::PipelinePopper, std::allocator<QPDFWriter::PipelinePopper>, (__gnu_cxx::_Lock_policy)2> > >
operator!=<QPDFJob::PageSpec*>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<QPDFCrypto_gnutls, std::allocator<QPDFCrypto_gnutls>, (__gnu_cxx::_Lock_policy)2> > >
destroy<std::shared_ptr<JSON::JSON_value> >
~__concurrence_wait_error
forward<const std::_Placeholder<1>&>
move<std::shared_ptr<QPDFNumberTreeObjectHelper>&>
addFormField
setDescription
__niter_base<QPDF::JSONReactor::state_e*>
wcscat
_M_incr
tuple<(anonymous namespace)::Handlers*, const std::_Placeholder<1>&>
replace
forward<std::default_delete<char []> >
_Destroy<QPDFObjGen*, QPDFObjGen>
__invoke_impl<void, void ((anonymous namespace)::ArgParser::* const&)(const std::__cxx11::basic_string<char>&), (anonymous namespace)::ArgParser*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
__destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >
__uninitialized_move_if_noexcept_a<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*, std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*, std::allocator<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >
__copy_move_a<false, QPDFOutlineObjectHelper*, QPDFOutlineObjectHelper*>
PipelinePopper
_S_whichbit
move<std::vector<QPDF::CHSharedObjectEntry>&>
as<QPDF_Reserved>
_M_access<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, false, false>*>
make_shared<QPDFNumberTreeObjectHelper, QPDFObjectHandle, QPDF&>
move<std::_Hashtable<long unsigned int, std::pair<long unsigned int const, QPDFObjectHandle>, std::allocator<std::pair<long unsigned int const, QPDFObjectHandle> >, std::__detail::_Select1st, std::equal_to<long unsigned int>, std::hash<long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >&>
forward<std::_Rb_tree_node<std::pair<int const, long long int> >*&>
to_offset<long unsigned int>
__shared_count<(anonymous namespace)::SF_Crypt, std::allocator<(anonymous namespace)::SF_Crypt> >
writeObjectStreamOffsets
construct<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
__get_helper<0, QPDF*&&, char const*&&>
overlay
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, QPDFJob::RotationSpec> >*&>
_Destroy<QPDF::CHPageOffsetEntry>
_Tuple_impl<std::default_delete<Buffer::Members> >
move<QPDFPageObjectHelper::getCropBox(bool, bool)::<lambda()>&>
function<(anonymous namespace)::Handlers::beginDict((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&)> >
__destroy<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*>
forEachFormXObject
_M_access<(anonymous namespace)::Handlers::setupEmpty()::<lambda()> >
getInlineImageValue
__addressof<char>
__uninit_copy<QPDFOutlineObjectHelper*, QPDFOutlineObjectHelper*>
_M_start
__destroy<long unsigned int*>
forward<(anonymous namespace)::Handlers*&>
_Sp_counted_ptr_inplace<char const (&)[12], Pipeline*&, Pl_TIFFPredictor::action_e, unsigned int, unsigned int, unsigned int>
forward<std::default_delete<unsigned char []> >
__destroy<QPDFOutlineObjectHelper*>
function<QUtil::file_provider(const string&)::<lambda(Pipeline*)> >
__uninitialized_copy_a<std::move_iterator<std::__cxx11::regex_traits<char>::_RegexMask*>, std::__cxx11::regex_traits<char>::_RegexMask*, std::__cxx11::regex_traits<char>::_RegexMask>
process_with_aes
_Sp_counted_ptr_inplace<char const (&)[22], Pipeline*&, bool, unsigned char*, long unsigned int>
_M_not_empty_function<QPDFPageObjectHelper::getFormXObjects()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
Pl_AES_PDF
forward<std::_Rb_tree_node<std::pair<const QPDFObjGen, QPDFObjectHandle> >*&>
__addressof<const std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, false, true> >
__destroy<int*>
move<std::unique_ptr<char []>&>
construct<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFCryptoImpl>()> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
move<std::tuple<(anonymous namespace)::ArgParser*>&>
move<long long int&>
~SF_DCTDecode
setR2EncryptionParametersInsecure
_M_fill_insert
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<QPDFCrypto_gnutls, std::allocator<QPDFCrypto_gnutls>, (__gnu_cxx::_Lock_policy)2> > >
__uninitialized_copy_a<std::move_iterator<QPDF::HPageOffsetEntry*>, QPDF::HPageOffsetEntry*, QPDF::HPageOffsetEntry>
endEncrypt256bit
allocate_shared<JSON::JSON_blob, std::allocator<JSON::JSON_blob>, std::function<void(Pipeline*)>&>
~__concurrence_unlock_error
frexp
_Destroy<QPDF::HSharedObjectEntry*>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<NNTreeImpl, std::allocator<NNTreeImpl>, (__gnu_cxx::_Lock_policy)2> > >
__uninit_copy<std::move_iterator<std::shared_ptr<QPDFStreamFilter>*>, std::shared_ptr<QPDFStreamFilter>*>
__copy_m<QPDFObjectHandle*, QPDFObjectHandle*>
decryptString
_M_enable_shared_from_this_with<QPDFJob::EncConfig>
pair<char const (&)[11], std::shared_ptr<QPDFStreamFilter> (&)()>
move<const std::allocator<JSON::JSON_null>&>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<QUtil::FileCloser, std::allocator<QUtil::FileCloser>, (__gnu_cxx::_Lock_policy)2> > >
_M_enable_shared_from_this_with<JSONHandler::Members>
_M_create_node<const std::shared_ptr<Pipeline>&>
acosh
__destroy<long long int*>
swap<QPDFObjectHandle::StreamDataProvider*>
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSONHandler> > >*&, std::_Rb_tree_node_base*&>
_M_insert_unique_<const std::pair<long unsigned int const, unsigned char>&, std::_Rb_tree<long unsigned int, std::pair<long unsigned int const, unsigned char>, std::_Select1st<std::pair<long unsigned int const, unsigned char> >, std::less<long unsigned int>, std::allocator<std::pair<long unsigned int const, unsigned char> > >::_Alloc_node>
__cxa_end_catch
_Destroy<char*, char>
__uninit_copy<__gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char>*>
__addressof<const (anonymous namespace)::Handlers::setupAddAttachmentFile()::<lambda(char const*)> >
forward<unsigned int&>
shared_ptr<Pl_Count>
_Destroy<std::__cxx11::regex_traits<char>::_RegexMask*>
_M_handle_accept
ResourceFinder
_M_realloc_insert<std::shared_ptr<char const> >
wcstoull
__destroy<std::pair<char, char>*>
_M_clone_node<std::_Rb_tree<QPDFObjGen, QPDFObjGen, std::_Identity<QPDFObjGen>, std::less<QPDFObjGen>, std::allocator<QPDFObjGen> >::_Alloc_node>
getHexDigest
_M_access<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)()>((anonymous namespace)::ArgParser*)>*>
to_uint<int>
_M_not_empty_function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, true, false> >
__uninitialized_copy_a<std::move_iterator<std::__cxx11::basic_string<char>*>, std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char> >
pair<std::_Rb_tree_iterator<std::__cxx11::basic_string<char> >&, bool&>
__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> >, QPDFOutlineObjectHelper*, QPDFOutlineObjectHelper>
dumpLinearizationDataInternal
wmemchr
__make_move_if_noexcept_iterator<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > >
setupAddAttachmentFile
pair<char const (&)[5], char const (&)[16]>
pipe_file
pair<QPDF::ObjUser&&, 0>
_M_access<QPDFWriter::writeLinearized()::<lambda(QPDFObjectHandle&)>*>
as<QPDF_Name>
_Sp_counted_ptr_inplace<QPDFOutlineObjectHelper&>
copy<int*, int*>
addAttachment
swap<Buffer::Members, std::default_delete<Buffer::Members> >
operator==<std::shared_ptr<JSON::JSON_value>*>
_M_not_empty_function<QPDFJob::doUnderOverlayForPage(QPDF&, QPDFJob::UnderOverlay&, std::map<int, std::vector<int> >&, size_t, std::map<int, QPDFObjectHandle>&, std::vector<QPDFPageObjectHelper>&, QPDFPageObjectHelper&, bool)::<lambda(Pipeline&, const string&)> >
destroy<std::pair<const std::__cxx11::basic_string<char>, QPDFArgParser::OptionEntry> >
wcsftime
warn
allocate_shared<Pl_Flate, std::allocator<Pl_Flate>, char const (&)[15], Pipeline*&, Pl_Flate::action_e>
__allocate_guarded<std::allocator<std::_Sp_counted_deleter<char*, std::default_delete<char []>, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >
__addressof<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >
swap<JSON::JSON_value*>
__shared_count<Pl_OStream, std::allocator<Pl_OStream>, char const (&)[13], std::basic_ostream<char, std::char_traits<char> >&>
scalbln
move<const std::allocator<QUtil::FileCloser>&>
isctype
_M_realloc_insert<const std::__cxx11::regex_traits<char>::_RegexMask&>
write_bits
newOperator
srand
_S_cache_size
_Destroy<std::__detail::_State<char>*, std::__detail::_State<char> >
setupCopyAttachmentsFromFile
name
addressof<std::__detail::_Hash_node<std::pair<long unsigned int const, QPDFObjectHandle>, false> >
move<QPDFPageObjectHelper::getArtBox(bool, bool)::<lambda()>&>
_Hash_node
lt
handleCharacter
getAppearanceStream
copy
find_last_of
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<QPDF, std::allocator<QPDF>, (__gnu_cxx::_Lock_policy)2> > >
pair<std::__cxx11::basic_string<char>, QPDFObjectHandle>
to_offset<long int>
OptionEntry
move<int&>
setExtraHeaderText
_Destroy<QPDFObjectHandle>
read_lines_from_file
_M_suffix
_Destroy<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > >
~Pl_ASCIIHexDecoder
__static_initialization_and_destruction_0
_Sp_counted_ptr
_Destroy<(anonymous namespace)::StackFrame>
_M_not_empty_function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, true, false> >
operator()<const std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> >&>
__invoke<std::_Mem_fn<void (QPDF::*)(char const*, char const*)>&, QPDF*, char const*&, char const*>
allocator<std::pair<long unsigned int const, unsigned char> >
__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const std::pair<char, char>*, std::vector<std::pair<char, char>, std::allocator<std::pair<char, char> > > >, std::pair<char, char>*, std::pair<char, char> >
__uninitialized_default_n<std::pair<char const*, int>*, long unsigned int>
pair<int const&, 0>
pair<std::_Rb_tree_node<long long int>*&, std::_Rb_tree_node_base*&>
construct<Pl_Flate, char const (&)[15], Pipeline*&, Pl_Flate::action_e>
shared_ptr<std::allocator<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >, const std::locale&, std::regex_constants::syntax_option_type&>
destroy<std::pair<int const, std::set<QPDFObjGen> > >
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_StdioFile, std::allocator<Pl_StdioFile>, (__gnu_cxx::_Lock_policy)2> > >
__make_move_if_noexcept_iterator<QPDFPageObjectHelper>
move<QPDFOutlineObjectHelper*&>
to_uint<long unsigned int>
move<Buffer*&>
getDefaultValueAsString
Pl_Track
config
~_Sp_counted_ptr
_M_create_node<const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<long unsigned int, std::less<long unsigned int>, std::allocator<long unsigned int> > >&>
_Deque_base
construct<Buffer, long unsigned int>
unique_ptr<char*>
allocator<Pl_ASCIIHexDecoder>
isFormXObject
operator~
emplace_back<std::__detail::_State<char> >
move
_M_insert_<const QPDF::ObjUser&, std::_Rb_tree<QPDF::ObjUser, QPDF::ObjUser, std::_Identity<QPDF::ObjUser>, std::less<QPDF::ObjUser>, std::allocator<QPDF::ObjUser> >::_Alloc_node>
move<std::shared_ptr<QPDFJob::PagesConfig>&>
__addressof<const (anonymous namespace)::Handlers::setupUnderlayFile()::<lambda(char const*)> >
getTopHelp
_Sp_counted_ptr_inplace<long unsigned int&>
_M_expression_term<true, false>
after
__cxa_exception_type
setNewlineBeforeEndstream
__copy_move_backward_a<false, std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >**, std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >**>
reserveStream
operator-<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*, std::vector<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::allocator<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > > >
uninitialized_copy<std::move_iterator<std::__cxx11::basic_string<char>*>, std::__cxx11::basic_string<char>*>
fill_n<double*, long unsigned int, double>
~list
forward<std::__cxx11::basic_string<char> >
tuple<QPDFArgParser*&>
newFromMatrix
_M_access<QPDFPageObjectHelper::getArtBox(bool, bool)::<lambda()>*>
_M_enable_shared_from_this_with<Pl_PNGFilter>
tell
oiMinWidth
_Destroy<std::shared_ptr<JSON>*, std::shared_ptr<JSON> >
QPDFWriter
getStreamData
_Sp_counted_ptr_inplace<char const (&)[13], QPDFObjectHandle::TokenFilter*, Pipeline*&>
operator=<Pl_ASCIIHexDecoder>
destroy<QPDFExc>
_M_enable_shared_from_this_with<(anonymous namespace)::Pl_Track>
__shared_ptr<std::allocator<QPDF::StringDecrypter>, QPDF*, const QPDFObjGen&>
ctime
destroy<std::pair<const QPDFObjGen, QPDFFormFieldObjectHelper> >
__uninitialized_copy_a<std::move_iterator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >
move<(anonymous namespace)::Handlers::initHandlers()::<lambda(const string&, JSON)>&>
function<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, false, false> >
allocate_shared<JSON::JSON_dictionary, std::allocator<JSON::JSON_dictionary> >
__miter_base<long unsigned int*>
~_Vector_impl
construct<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSONHandler> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
_M_check
pair<long unsigned int&&>
Pl_QPDFTokenizer
release
hypot
_M_assign_dispatch<std::_List_const_iterator<NNTreeIterator::PathElement> >
operator==<char const*, std::__cxx11::basic_string<char> >
QPDFEFStreamObjectHelper
Pl_String
_GLOBAL__sub_I__ZN26QPDFNumberTreeObjectHelperD2Ev
_M_enable_shared_from_this_with<JSON::JSON_array>
beginUnderlay
__uninitialized_copy_a<std::move_iterator<int*>, int*, int>
useHexString
move<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*&>
operator!=<QPDF::HPageOffsetEntry*>
__get_helper<1, char const*, std::_Placeholder<2> >
forward<std::tuple<long unsigned int&&> >
_M_create_node<long long int const&>
getEncryptMetadata
~_Tuple_impl
operator[]
__unguarded_linear_insert<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Val_less_iter>
operator+
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<SF_ASCII85Decode, std::allocator<SF_ASCII85Decode>, (__gnu_cxx::_Lock_policy)2> > >
inSpace
__uninit_copy<std::move_iterator<std::shared_ptr<Pipeline>*>, std::shared_ptr<Pipeline>*>
QPDFAcroFormDocumentHelper
create_utf16
allowPrintLowRes
construct<std::shared_ptr<Pipeline>, std::shared_ptr<Pipeline> >
QPDFOutlineDocumentHelper
__pop_heap<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_less_iter>
destroy<SF_ASCIIHexDecode>
showPages
~QPDFAcroFormDocumentHelper
allocate_shared<QPDFCrypto_gnutls, std::allocator<QPDFCrypto_gnutls> >
__uninitialized_default_n_a<std::__cxx11::sub_match<char const*>*, long unsigned int, std::__cxx11::sub_match<char const*> >
forward<QPDF*&&>
add_help_3
allocator<JSON::JSON_null>
_M_enable_shared_from_this_with<FileInputSource>
__uninit_copy<std::move_iterator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
allocator<JSON::JSON_string>
construct<std::__detail::_State<char>, std::__detail::_State<char> >
_M_const_cast
forward<long unsigned int&>
move<QPDFPageObjectHelper::forEachImage(bool, std::function<void(QPDFObjectHandle&, QPDFObjectHandle&, const std::__cxx11::basic_string<char>&)>)::<lambda(QPDFObjectHandle)>&>
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::set<long unsigned int> > > >*&, std::_Rb_tree_node_base*&>
__assert_fail
move<JSON*&>
copy<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
_M_insert_unique<QPDFNumberTreeObjectHelper::iterator>
operator==<QPDF::HSharedObjectEntry*>
fwscanf
setOutputFile
_M_expression_term<false, true>
forward_as_tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_ASCIIHexDecoder, std::allocator<Pl_ASCIIHexDecoder>, (__gnu_cxx::_Lock_policy)2> > >
make_shared<Pl_DCT, char const (&)[11], Pipeline*&>
__destroy<std::unique_ptr<char []>*>
analyze
emplace_back<std::shared_ptr<char const> >
function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, true, false> >
move<const std::allocator<JSON::JSON_string>&>
get<0, const QPDF::ObjUser&>
clock
__uninit_copy<std::move_iterator<QPDFJob::PageSpec*>, QPDFJob::PageSpec*>
_M_reset
construct<std::pair<const QPDFObjGen, QPDFFormFieldObjectHelper>, const std::piecewise_construct_t&, std::tuple<const QPDFObjGen&>, std::tuple<> >
__niter_base<long long int*>
~JSON_blob
beginEncrypt40bit
endEncrypt
_M_access<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, true, true>*>
pair<std::_Rb_tree_node<std::pair<long int const, long int> >*&, std::_Rb_tree_node_base*&>
setprecision
allowExtractAll
move_iterator
iiMinBytes
__miter_base<long long int*>
__uninit_default_n<std::__cxx11::sub_match<char const*>*, long unsigned int>
_M_insert_<long long int const&, std::_Rb_tree<long long int, long long int, std::_Identity<long long int>, std::less<long long int>, std::allocator<long long int> >::_Alloc_node>
swap<QPDFJob::EncConfig*>
__uninitialized_copy_a<std::move_iterator<QPDFPageObjectHelper*>, QPDFPageObjectHelper*, QPDFPageObjectHelper>
fgetpos
__niter_base<std::__cxx11::sub_match<char const*>*>
__shared_ptr<JSON::JSON_null>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<SF_FlateLzwDecode, std::allocator<SF_FlateLzwDecode>, (__gnu_cxx::_Lock_policy)2> > >
_Head_base<QPDFArgParser*>
EVP_aes_256_ecb
setIgnoreXRefStreams
getId1
_M_in_range_icase
__destroy<(anonymous namespace)::StackFrame*>
__miter_base<char const**>
forward<const std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSON::JSON_value> >&>
destroy<std::pair<long long int const, QPDFObjectHandle> >
_M_get_size
construct<Pl_OStream, char const (&)[13], std::basic_ostream<char, std::char_traits<char> >&>
__shared_count<NNTreeIterator, std::allocator<NNTreeIterator>, NNTreeIterator&>
make_shared<Pl_RunLength, char const (&)[17], Pipeline*&, Pl_RunLength::action_e>
_Sp_counted_ptr_inplace<char const (&)[16], Pipeline*&>
pushInheritedAttributesToPage
_M_access<const std::type_info*>
operator-<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*, std::vector<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >, std::allocator<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > > > >
MD5_update
construct<ContentNormalizer>
operator==<JSON>
getTopicHelp
__addressof<const QUtil::read_lines_from_file(std::istream&, bool)::<lambda(char&)> >
isMatrix
to_i
anyWarnings
pair<const QPDF::ObjUser&>
_GLOBAL__sub_I__ZN22QPDFPageDocumentHelperC2ER4QPDF
compute_O_OE_value_V5
_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > >
construct<long long int, long long int const&>
get_deleter
setInfo
__shared_count<Pl_Flate, std::allocator<Pl_Flate>, char const (&)[16], Pipeline*&, Pl_Flate::action_e>
_GLOBAL__sub_I__ZN18QPDFCrypto_opensslC2Ev
function<std::shared_ptr<QPDFCrypto_openssl> (*)()>
_M_bkt_for_elements
getRealValue
function<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, true, true> >
exception_ptr
make_shared_array<char const*>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<JSON::JSON_null, std::allocator<JSON::JSON_null>, (__gnu_cxx::_Lock_policy)2> > >
writeHSharedObject
__get_helper<1, std::default_delete<Buffer> >
operator-<char const*, std::vector<char, std::allocator<char> > >
getXRefTable
check_owner_password_V5
shared_ptr<std::allocator<(anonymous namespace)::SF_Crypt> >
qpdf_time_to_iso8601
construct<QPDFNameTreeObjectHelper, QPDFObjectHandle&, QPDF&>
argPositional
forward<std::pair<long unsigned int const, QPDFObjectHandle>&>
operator!=<QPDFNameTreeObjectHelper>
_M_access<(anonymous namespace)::Handlers::beginArray((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&)>*>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<QPDF::StringDecrypter, std::allocator<QPDF::StringDecrypter>, (__gnu_cxx::_Lock_policy)2> > >
uninitialized_copy<std::move_iterator<QPDF::HSharedObjectEntry*>, QPDF::HSharedObjectEntry*>
process
allocator<Pl_RC4>
uninitialized_copy<std::move_iterator<QPDFOutlineObjectHelper*>, QPDFOutlineObjectHelper*>
getDest
function<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, true, false> >
_Sp_counted_ptr_inplace<NNTreeIterator>
~_Rb_tree
_M_construct_node<const std::piecewise_construct_t&, std::tuple<const QPDFObjGen&>, std::tuple<> >
__uninitialized_move_if_noexcept_a<std::pair<char, char>*, std::pair<char, char>*, std::allocator<std::pair<char, char> > >
__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const QPDFExc*, std::vector<QPDFExc> >, QPDFExc*, QPDFExc>
_M_clone_node<std::_Rb_tree<QPDF::ObjUser, QPDF::ObjUser, std::_Identity<QPDF::ObjUser>, std::less<QPDF::ObjUser>, std::allocator<QPDF::ObjUser> >::_Alloc_node>
vsnprintf
__copy_move_a<true, char const**, char const**>
copy<std::move_iterator<(anonymous namespace)::JSONParser::parser_state_e*>, (anonymous namespace)::JSONParser::parser_state_e*>
json_out_schema
move<std::tuple<std::_Placeholder<1>, char const*, std::_Placeholder<2> >&>
to_char<int>
_Destroy<__gnu_cxx::__normal_iterator<(anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> >, (anonymous namespace)::QPDFPageData>
forward<std::shared_ptr<QPDF::EncryptionParameters>&>
construct<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, QPDFArgParser::OptionEntry> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
_M_access<QPDFJob::doListAttachments(QPDF&)::<lambda(Pipeline&, const string&)> >
get<2, std::_Placeholder<1>, char const*, std::_Placeholder<2> >
destroy<QPDFJob::AddAttachment>
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::map<long unsigned int, std::__cxx11::basic_string<char> > > >*&, std::_Rb_tree_node_base*&>
_Rb_tree_insert_and_rebalance
destroy<std::pair<const QPDFObjGen, std::vector<QPDFOutlineObjectHelper> > >
outputLengthNextN
operator()<std::pair<std::__cxx11::basic_string<char>, QPDFObjectHandle>&>
destroy<QPDFAnnotationObjectHelper>
__make_move_if_noexcept_iterator<int>
isNumber
_Destroy<long long int*, long long int>
argCompletionZsh
operator=<std::shared_ptr<QPDFCrypto_openssl> (&)()>
__shared_count<SF_RunLengthDecode, std::allocator<SF_RunLengthDecode> >
function<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, false, false> >
operator==<const std::__detail::_NFA<std::__cxx11::regex_traits<char> > >
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<JSON::JSON_blob, std::allocator<JSON::JSON_blob>, (__gnu_cxx::_Lock_policy)2> > >
check_owner_password_V4
move<(anonymous namespace)::Handlers::setupInputFile()::<lambda(char const*)>&>
equal_range
initEmbeddedFiles
_M_create_node<Pipeline* const&>
__shared_ptr<Pl_QPDFTokenizer::Members>
decrypt
closeObject
print
allocate_shared<Buffer, std::allocator<Buffer>, long unsigned int>
__addressof<std::shared_ptr<QPDFStreamFilter> >
_M_create_node<const std::pair<long unsigned int const, unsigned char>&>
__uninitialized_copy_a<std::move_iterator<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*>, std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*, std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >
to_int<long unsigned int>
__uninit_copy<QPDFObjectHandle*, QPDFObjectHandle*>
uninitialized_copy<const QPDFExc*, QPDFExc*>
move<QPDFJob::shouldRemoveUnreferencedResources(QPDF&)::<lambda(Pipeline&, const string&)>&>
__make_move_if_noexcept_iterator<std::__detail::_State<char> >
_M_access<(anonymous namespace)::Handlers::initHandlers()::<lambda()> >
move<std::shared_ptr<Pl_LZWDecoder>&>
__addressof<const QPDFPageObjectHelper::getBleedBox(bool, bool)::<lambda()> >
operator==<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >
allocator<Pl_RunLength>
remove
construct<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle>, const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >
swap<int*>
~_Deque_base
_M_local_data
max_bucket_count
destroy<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> > >
doJSONEncrypt
~FunctionProgressReporter
__shared_count<(anonymous namespace)::ResourceReplacer*>
handleObject
_M_insert<QPDFObjectHandle>
qsort
swap<unsigned char*>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<QPDFAcroFormDocumentHelper, std::allocator<QPDFAcroFormDocumentHelper>, (__gnu_cxx::_Lock_policy)2> > >
_M_construct_node<std::pair<long long int, QPDFObjectHandle>&>
operator==<Buffer*>
compute_U_value_R3
doFinalChecks
_M_enable_shared_from_this_with<(anonymous namespace)::ProgressReporter>
operator()<const std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSON::JSON_value> >&>
operator-<std::unique_ptr<char []>*, std::vector<std::unique_ptr<char []> > >
setPreserveUnreferencedObjects
getErrorMessage
forward<std::_Rb_tree_node<std::pair<const QPDFObjGen, std::set<QPDF::ObjUser> > >*&>
shared_ptr<std::allocator<QPDFCrypto_gnutls> >
error
MD5_finalize
_M_data
list<__gnu_cxx::__normal_iterator<QPDFObjectHandle*, std::vector<QPDFObjectHandle> > >
~exception_ptr
updateAllPagesCache
move<std::shared_ptr<Pipeline>&>
gnutls_hash_deinit
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSON::JSON_value> > >*&, std::_Rb_tree_node_base*&>
__shared_ptr<Pl_Buffer::Members>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_RC4, std::allocator<Pl_RC4>, (__gnu_cxx::_Lock_policy)2> > >
operator-<(anonymous namespace)::StackFrame*, std::vector<(anonymous namespace)::StackFrame> >
trunc
_Destroy<char*>
_M_enable_shared_from_this_with<JSON::Members>
shared_ptr<QPDFJob::AttConfig>
construct<QUtil::FileCloser, _IO_FILE*>
argVersion
__shared_count<OffsetInputSource*>
dumpHSharedObject
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<JSON::JSON_null, std::allocator<JSON::JSON_null>, (__gnu_cxx::_Lock_policy)2> > >
_M_not_empty_function<(anonymous namespace)::Handlers::initHandlers()::<lambda()> >
toS<long long unsigned int>
suppressPasswordRecovery
operator std::integral_constant<int, 2>::value_type
make_shared<JSON, JSON>
_M_enable_shared_from_this_with<QPDFJob::AttConfig>
move<int*&>
_M_access<QPDFJob::addAttachments(QPDF&)::<lambda(Pipeline&, const string&)> >
operator!=<QPDFFormFieldObjectHelper*, std::vector<QPDFFormFieldObjectHelper> >
operator=<Pl_AES_PDF>
emptyPDF
destroy<std::pair<int const, QPDFXRefEntry> >
writeBitsInt
OffsetInputSource
_Sp_counted_ptr_inplace<char const (&)[11], ContentNormalizer*, Pipeline*&>
__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >
ready
getWidgetAnnotationsForPage
shared_ptr<QPDFObjectHandle::QPDFArrayItems::iterator::Members>
_M_check_same_name
setModDate
findAndSkipNextEOL
writeArrayOpen
construct<Pl_ASCIIHexDecoder, char const (&)[16], Pipeline*&>
function<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)(JSON)>((anonymous namespace)::Handlers*, std::_Placeholder<1>)> >
_M_construct_aux<char const*>
insert<std::pair<QPDFObjGen, int> >
__copy_move_backward_a<false, long int**, long int**>
QPDF_Destroyed
_M_not_empty_function<(anonymous namespace)::ImageOptimizer::makePipeline(const string&, Pipeline*)::<lambda(Pipeline&, const string&)> >
function<(anonymous namespace)::Handlers::ignoreItem()::<lambda(const string&, JSON)> >
move<const std::allocator<QPDFCrypto_gnutls>&>
__uninitialized_copy_a<QPDFObjectHandle*, QPDFObjectHandle*, QPDFObjectHandle>
~EncryptionData
move<std::shared_ptr<unsigned char>&>
uninitialized_copy<std::move_iterator<std::shared_ptr<QPDFObjectHandle::TokenFilter>*>, std::shared_ptr<QPDFObjectHandle::TokenFilter>*>
_S_nothrow_move
inLiteral
setError
uninitialized_copy<__gnu_cxx::__normal_iterator<const std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
_M_insert<const std::pair<long unsigned int const, QPDFObjectHandle>&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<long unsigned int const, QPDFObjectHandle>, false> > > >
_M_access<QPDFPageObjectHelper::getFormXObjects()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)>*>
EVP_aes_192_ecb
Members
concat
__uninit_copy<__gnu_cxx::__normal_iterator<const QPDFExc*, std::vector<QPDFExc> >, QPDFExc*>
_M_enable_shared_from_this_with<QPDF::CopiedStreamDataProvider>
setstate
__shared_ptr<Pl_String::Members>
compute_Perms_value_V5
__addressof<std::unique_ptr<char []> >
__shared_ptr<std::allocator<Pl_ASCIIHexDecoder>, char const (&)[16], Pipeline*&>
pair<char const (&)[4], char const (&)[17]>
suppressRecovery
_M_deleter
setEncryptionParameters
findInternal
allocator<QPDFNumberTreeObjectHelper>
_GLOBAL__sub_I__ZN3MD5C2Ev
getRawStreamData
getDict
~OffsetInputSource
__destroy<__gnu_cxx::__normal_iterator<(anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> > >
shallowCopy
move<std::shared_ptr<QPDF>&>
_M_access<(anonymous namespace)::Handlers::setupOverlayPassword()::<lambda(char const*)>*>
shared_ptr<QPDF::EncryptionParameters>
_M_insert_line_end
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSONHandler> > >*&>
__copy_move_a2<false, __gnu_cxx::__normal_iterator<const std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > >
__uninitialized_copy_a<std::move_iterator<std::shared_ptr<JSON>*>, std::shared_ptr<JSON>*, std::shared_ptr<JSON> >
__shared_ptr<std::allocator<JSON::JSON_array> >
wcscspn
fastTell
checkLinearizationInternal
_M_realloc_insert<std::pair<char, char> >
_M_insert<long long int>
operator!=<QPDF::HSharedObjectEntry*>
use_facet<std::ctype<char> >
shared_ptr<QPDFObjectHandle::QPDFDictItems::iterator::Members>
RC4_init
_Sp_counted_ptr_inplace<double&>
forward<JSON>
read_file_into_memory
__atomic_base
destroy<SF_DCTDecode>
_S_initialize
shared_ptr<std::allocator<SF_DCTDecode> >
_Destroy<long unsigned int*>
_M_advance
move<QPDFPageObjectHelper::getImages()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)>&>
__shared_count<Pl_ASCII85Decoder, std::allocator<Pl_ASCII85Decoder>, char const (&)[15], Pipeline*&>
shared_ptr<std::allocator<Pl_AES_PDF>, char const (&)[22], Pipeline*&, bool, unsigned char*, long unsigned int>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<JSON::JSON_string, std::allocator<JSON::JSON_string>, (__gnu_cxx::_Lock_policy)2> > >
_Destroy<std::__cxx11::regex_traits<char>::_RegexMask*, std::__cxx11::regex_traits<char>::_RegexMask>
__weak_count
_M_not_empty_function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, false, false> >
isReal
Pl_Discard
__shared_ptr<std::allocator<QPDFOutlineObjectHelper>, QPDFOutlineObjectHelper&>
_M_access<QPDFJob::doSplitPages(QPDF&, bool&)::<lambda(Pipeline&, const string&)> >
~Pl_MD5
_M_allocate
__builtin_strrchr
move<std::__shared_ptr<Pl_Flate, (__gnu_cxx::_Lock_policy)2>&>
construct<std::pair<const QPDFObjGen, int>, const std::piecewise_construct_t&, std::tuple<QPDFObjGen&&>, std::tuple<> >
_Destroy<std::__cxx11::sub_match<char const*>*, std::__cxx11::sub_match<char const*> >
added_page
__make_move_if_noexcept_iterator<std::shared_ptr<QPDF> >
<lambda>
function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, false, true> >
shared_ptr<Pl_OStream>
setAttemptRecovery
construct<std::pair<const QPDFObjGen, std::vector<QPDFAnnotationObjectHelper> >, const std::piecewise_construct_t&, std::tuple<const QPDFObjGen&>, std::tuple<> >
getFileChecksum
_M_assign<std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::operator=(const std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>&) [with _Key = long unsigned int; _Value = std::pair<long unsigned int const, QPDFObjectHandle>; _Alloc = std::allocator<std::pair<long unsigned int const, QPDFObjectHandle> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<long unsigned int>; _H1 = std::hash<long unsigned int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]::<lambda(const __node_type*)> >
ClosedFileInputSource
memchr
llrint
move<QUtil::read_lines_from_file(FILE*, bool)::<lambda(char&)>&>
_M_insert_<QPDFObjGen&, std::_Rb_tree<QPDFObjGen, QPDFObjGen, std::_Identity<QPDFObjGen>, std::less<QPDFObjGen>, std::allocator<QPDFObjGen> >::_Alloc_node>
_M_access<(anonymous namespace)::Handlers::addBare((anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&, const string&)>*>
flate_factory
_M_access<std::shared_ptr<QPDFCrypto_gnutls> (**)()>
ProgressReporter
_Destroy<QPDF::CHSharedObjectEntry*>
_M_insert_subexpr_begin
compute_U_UE_value_V5
transformAnnotations
__addressof<std::shared_ptr<QPDFObjectHandle::TokenFilter> >
_M_main_dispatch
function<std::_Bind<std::_Mem_fn<void (QPDF::*)(char const*, char const*)>(std::_Placeholder<1>, char const*, std::_Placeholder<2>)> >
__addressof<const std::__cxx11::list<NNTreeIterator::PathElement> >
make_shared<Pl_QPDFTokenizer, char const (&)[11], ContentNormalizer*, Pipeline*&>
writePad
operator!=<QPDFPageObjectHelper*, std::vector<QPDFPageObjectHelper> >
__is_null_pointer<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >
move<std::shared_ptr<JSON::JSON_array>&>
move<(anonymous namespace)::Handlers::beginArray((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&, JSON)>&>
registerOptionTable
Pl_DCT
decompress
getStringValue
forward<const std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >&>
__uninit_copy<__gnu_cxx::__normal_iterator<const (anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> >, (anonymous namespace)::QPDFPageData*>
_M_insert_equal_lower_node
move<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, true, false>&>
operator()<__gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > > >
move<QPDFJob::handleTransformations(QPDF&)::<lambda(Pipeline&, const string&)>&>
construct<std::__cxx11::basic_string<char>, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
isLinearized
shared_ptr<std::allocator<Pl_QPDFTokenizer>, char const (&)[13], QPDFObjectHandle::TokenFilter*, Pipeline*&>
construct<QPDFOutlineObjectHelper, QPDFOutlineObjectHelper>
function<QPDF_Stream::pipeStreamData(Pipeline*, bool*, int, qpdf_stream_decode_level_e, bool, bool)::<lambda(char const*, int)> >
CryptoRandomDataProvider
showEncryptionKey
_M_access<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, true, false>*>
abs_diff
__invoke<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)()>&, (anonymous namespace)::ArgParser*&>
LinParameters
EVP_EncryptInit_ex
initializeByPage
swap<InputSource*>
__shared_ptr<Pl_ASCII85Decoder>
bind<std::_Mem_fn<void (QPDFArgParser::*)()>, QPDFArgParser*&>
operator!=<const std::shared_ptr<JSON::JSON_value>*, std::vector<std::shared_ptr<JSON::JSON_value> > >
_M_create_node<const std::piecewise_construct_t&, std::tuple<QPDFObjGen&&>, std::tuple<> >
unreadCh
getGen
move<std::_Mem_fn<void (QPDF::*)(char const*, char const*)>&>
argEndUnderlayOverlay
int_to_string_base_internal<long long unsigned int>
move<QPDFJob::copyAttachments(QPDF&)::<lambda(Pipeline&, const string&)>&>
_Construct<QPDFJob::PageSpec, QPDFJob::PageSpec>
__shared_ptr<std::allocator<QPDFNameTreeObjectHelper>, QPDFNameTreeObjectHelper&>
_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> > >
addRequiredParameter
_Prime_rehash_policy
_M_enable_shared_from_this_with<QPDFWriter::PipelinePopper>
~QPDFSystemError
operator-<QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> >
vector
forward<std::tuple<int const&> >
forEachImage
vwprintf
__niter_base<int*, std::vector<int> >
~match_results
fmax
__uninit_copy<__gnu_cxx::__normal_iterator<const QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> >, QPDFAnnotationObjectHelper*>
_GLOBAL__sub_I__ZN20QPDFPageObjectHelperC2E16QPDFObjectHandle
mem_fn<void(const std::__cxx11::basic_string<char>&), (anonymous namespace)::ArgParser>
_Destroy<std::shared_ptr<char const> >
none
_Destroy<QPDF::HPageOffsetEntry>
setupOverlayFile
assertIndirect
~Token
_M_insert_unique_<std::pair<long long int, QPDFObjectHandle>&, std::_Rb_tree<long long int, std::pair<long long int const, QPDFObjectHandle>, std::_Select1st<std::pair<long long int const, QPDFObjectHandle> >, std::less<long long int>, std::allocator<std::pair<long long int const, QPDFObjectHandle> > >::_Alloc_node>
forward<std::basic_ostream<char>&>
_M_is_local
unique<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > > >
_M_shrink_to_fit
swap<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*>
_M_replace
_M_not_empty_function<(anonymous namespace)::Handlers::beginArray((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&, JSON)> >
to_uchar<long unsigned int>
_Head_base<(anonymous namespace)::Handlers*>
getFieldFromAcroForm
_M_access<(anonymous namespace)::Handlers::initHandlers()::<lambda(const string&, JSON)>*>
_M_destroy
_M_put_node
egptr
emplace_back<QPDFPageObjectHelper>
_M_realloc_insert<QPDF::HSharedObjectEntry>
_M_replace_facet
enable
uninitialized_copy<std::move_iterator<QPDF::HPageOffsetEntry*>, QPDF::HPageOffsetEntry*>
allocate_shared<(anonymous namespace)::SF_Crypt, std::allocator<(anonymous namespace)::SF_Crypt> >
forward<QPDFFormFieldObjectHelper>
__uninitialized_move_if_noexcept_a<std::__cxx11::regex_traits<char>::_RegexMask*, std::__cxx11::regex_traits<char>::_RegexMask*, std::allocator<std::__cxx11::regex_traits<char>::_RegexMask> >
__copy_m<QPDF::JSONReactor::state_e>
mergeResources
move<std::__shared_ptr<QUtil::FileCloser, (__gnu_cxx::_Lock_policy)2>&>
uninitialized_copy<std::move_iterator<std::shared_ptr<char const>*>, std::shared_ptr<char const>*>
_Tuple_impl<(anonymous namespace)::ArgParser*&, const std::_Placeholder<1>&>
_M_access<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, false, true>*>
~CryptoRandomDataProvider
RotationSpec
filename
__max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__ops::_Iter_less_iter>
move<std::shared_ptr<QPDF::StringDecrypter>&>
move<std::__uniq_ptr_impl<Buffer::Members, std::default_delete<Buffer::Members> >&>
operator!=<std::pair<long unsigned int const, QPDFObjectHandle>, false>
_M_not_empty_function<QPDFJob::writeOutfile(QPDF&)::<lambda(Pipeline&, const string&)> >
unparseBinary
~QPDF_Unresolved
jpeg_start_decompress
setDefaultProvider_internal
swap<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*>
getImpl_internal
_Construct<std::__cxx11::regex_traits<char>::_RegexMask, const std::__cxx11::regex_traits<char>::_RegexMask&>
operator<< <char, std::char_traits<char>, std::allocator<char> >
pair<std::_Rb_tree_node<std::pair<const QPDF::ObjUser, std::set<QPDFObjGen> > >*&, std::_Rb_tree_node_base*&>
basic_string<char*>
remove_file
createFileSpec
__copy_move_a2<false, std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >**, std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >**>
_Destroy<QPDF::CHSharedObjectEntry*, QPDF::CHSharedObjectEntry>
_Function_base
__uninitialized_move_if_noexcept_a<QPDFObjectHandle*, QPDFObjectHandle*, std::allocator<QPDFObjectHandle> >
_M_insert_unique<long unsigned int const&>
ldexp
exchange
_GLOBAL__sub_I__ZN7QPDFJob18initializeFromJsonERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb
construct<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&>
allocator<long int>
move<std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>&>
__shared_count<SF_FlateLzwDecode, std::allocator<SF_FlateLzwDecode>, bool>
shared_ptr<(anonymous namespace)::SF_Crypt>
move<std::__detail::_State<char>&>
operator<
getPDFVersion
function<(anonymous namespace)::Handlers::addChoices(char const**, bool, (anonymous namespace)::Handlers::param_handler_t)::<lambda(const string&, const string&)> >
_M_insert_<std::pair<std::__cxx11::basic_string<char>, QPDFObjectHandle>&, std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> > >::_Alloc_node>
_M_search
__addressof<const QPDFPageObjectHelper::getTrimBox(bool, bool)::<lambda()> >
swap<int (*)(const std::_Any_data&, int&&, char const* const*&&)>
inCharCode
setR3EncryptionParametersInsecure
_M_default_initialize
rijndael_process
~Pl_PNGFilter
argAddAttachment
StackFrame
shared_ptr<char>
wcstombs
_M_insert_subexpr_end
forward<void ((anonymous namespace)::Handlers::* const&)(JSON)>
fgets
_GLOBAL__sub_I__ZN14QPDF_DestroyedC2Ev
match_results
forward<const std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::set<long unsigned int> > >&>
__shared_ptr<(anonymous namespace)::ImageOptimizer>
get_description
function<QPDFPageObjectHelper::externalizeInlineImages(size_t, bool)::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
_S_value
_M_access<QPDFJob::doUnderOverlayForPage(QPDF&, QPDFJob::UnderOverlay&, std::map<int, std::vector<int> >&, size_t, std::map<int, QPDFObjectHandle>&, std::vector<QPDFPageObjectHelper>&, QPDFPageObjectHelper&, bool)::<lambda(Pipeline&, const string&)> >
getNext
_M_access<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)(const std::__cxx11::basic_string<char>&)>((anonymous namespace)::ArgParser*, std::_Placeholder<1>)>*>
make_shared<SF_ASCII85Decode>
forward<QPDFOutlineObjectHelper&>
_Iter_less_val
fputwc
_M_swap_data
_M_upper_bound
__copy_m<QPDFParser::parser_state_e>
move<std::__shared_ptr<Pl_LZWDecoder, (__gnu_cxx::_Lock_policy)2>&>
_M_empty
shared_ptr<std::allocator<SF_ASCIIHexDecode> >
atoll
inGt
_GLOBAL__sub_I__ZN16QPDFStreamFilter14setDecodeParmsE16QPDFObjectHandle
operator==<std::__cxx11::basic_string<char>*>
move<std::_Tuple_impl<2, std::_Placeholder<2> >&>
hasWarnings
uninitialized_copy<std::move_iterator<std::pair<char, char>*>, std::pair<char, char>*>
__copy_move_a2<false, int*, int*>
__addressof<QPDFOutlineObjectHelper>
__miter_base<__gnu_cxx::__normal_iterator<const QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> > >
hasObjectDescription
construct<QPDFOutlineObjectHelper, const QPDFOutlineObjectHelper&>
_M_reverse
__uninitialized_copy_a<std::move_iterator<char const**>, char const**, char const*>
destroy<QPDF::HPageOffsetEntry>
allocate_shared<SF_ASCII85Decode, std::allocator<SF_ASCII85Decode> >
wctype
getFirstChar
get_max_memory_usage
_M_handle_backref
_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const QPDFObjectHandle*, std::vector<QPDFObjectHandle> > >
string_to_int
function<QUtil::read_lines_from_file(char const*, bool)::<lambda(char&)> >
move<std::shared_ptr<QPDFCryptoImpl>&>
valid
~__concurrence_broadcast_error
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__detail::_NFA<std::__cxx11::regex_traits<char> >, std::allocator<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >, (__gnu_cxx::_Lock_policy)2> > >
_M_apply
move<(anonymous namespace)::StreamBlobProvider&>
forward<std::_Mem_fn<void (QPDFArgParser::*)()> >
__uninitialized_move_if_noexcept_a<QPDFOutlineObjectHelper*, QPDFOutlineObjectHelper*, std::allocator<QPDFOutlineObjectHelper> >
_M_replace_aux
_M_access<QPDFPageObjectHelper::removeUnreferencedResources()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
move<QPDFObject*&>
QPDFPageData
jpeg_finish_compress
_M_access<(anonymous namespace)::ImageOptimizer::makePipeline(const string&, Pipeline*)::<lambda(Pipeline&, const string&)> >
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_ASCIIHexDecoder, std::allocator<Pl_ASCIIHexDecoder>, (__gnu_cxx::_Lock_policy)2> > >
writeJSONStream
getArrayAsVector
forward<QPDF&>
_M_insert_bracket_matcher<true, false>
move<std::allocator<QPDF::HPageOffsetEntry>&>
listAttachments
__exchange_and_add_dispatch
assertName
__niter_base<const QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> >
endAddAttachment
__throw_logic_error
setPasswordIsHexKey
__niter_base<char*>
shared_ptr<Pl_Count::Members>
construct<std::pair<const std::__cxx11::basic_string<char>, std::set<long unsigned int> >, const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<long unsigned int, std::less<long unsigned int>, std::allocator<long unsigned int> > >&>
findEndstream
_M_insert_<const std::pair<long unsigned int const, unsigned char>&, std::_Rb_tree<long unsigned int, std::pair<long unsigned int const, unsigned char>, std::_Select1st<std::pair<long unsigned int const, unsigned char> >, std::less<long unsigned int>, std::allocator<std::pair<long unsigned int const, unsigned char> > >::_Alloc_node>
_M_enable_shared_from_this_with<Pl_RC4>
updateFromJson
piecewise_construct_t
pair<std::__detail::_Node_iterator<std::pair<long unsigned int const, QPDFObjectHandle>, false, false>, bool>
forward<std::_Rb_tree_node<std::pair<const QPDFObjGen, std::shared_ptr<QPDF::ForeignStreamData> > >*&>
_M_try_char
splice
pair<QPDFObjGen&&, 0>
atan2
writeObjectStream
writeClose
~set
move<std::pair<char, char>*&>
uninitialized_copy<std::move_iterator<std::__cxx11::regex_traits<char>::_RegexMask*>, std::__cxx11::regex_traits<char>::_RegexMask*>
make_shared<QPDFCrypto_gnutls>
_M_construct<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >
__alloc_on_move<std::allocator<QPDFPageObjectHelper> >
__uninitialized_copy_a<std::move_iterator<QPDFParser::parser_state_e*>, QPDFParser::parser_state_e*, QPDFParser::parser_state_e>
__shared_count<std::__detail::_NFA<std::__cxx11::regex_traits<char> >, std::allocator<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >, const std::locale&, std::regex_constants::syntax_option_type&>
__addressof<const QUtil::read_lines_from_file(char const*, bool)::<lambda(char&)> >
nexttoward
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> > >*&, std::_Rb_tree_node_base*&>
operator==<QPDFNameTreeObjectHelper>
__get_helper<0, int&&>
readLinearizationData
generateID
maybe_from_end
_M_not_empty_function<QPDFPageObjectHelper::getImages()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
max<long unsigned int>
make_shared<JSON::JSON_dictionary>
operator==<const std::shared_ptr<JSON>*, std::vector<std::shared_ptr<JSON> > >
__copy_move_a<true, QPDFParser::parser_state_e*, QPDFParser::parser_state_e*>
hasKey
move<const std::allocator<SF_FlateLzwDecode>&>
pair<std::_Rb_tree_iterator<QPDFObjGen>, bool>
~Pl_SHA2
~Buffer
_M_init_extra
is_long_long
_M_insert_<int const&, std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node>
compare_exchange_weak
str
operator==<JSON::JSON_value>
_M_allocate_node<const std::pair<long unsigned int const, QPDFObjectHandle>&>
construct<long unsigned int, long unsigned int const&>
__uniq_ptr_impl<std::default_delete<Buffer::Members> >
copy<std::move_iterator<char*>, char*>
__get_helper<2, std::_Placeholder<2> >
move<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, true, false>&>
allocate_shared<NNTreeImpl, std::allocator<NNTreeImpl>, (anonymous namespace)::NumberTreeDetails&, QPDF&, QPDFObjectHandle&, bool&>
replaceReserved
_Destroy<QPDF::HPageOffsetEntry*, QPDF::HPageOffsetEntry>
destroy<std::shared_ptr<Pipeline> >
copy<std::__cxx11::sub_match<char const*>*, std::__cxx11::sub_match<char const*>*>
__addressof<std::allocator<std::_List_node<NNTreeIterator::PathElement> > >
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, false, true> >
operator()<const std::pair<const QPDF::ObjUser, std::set<QPDFObjGen> >&>
coalesceContents
toO<long unsigned int>
move<std::shared_ptr<char const>&>
__shared_count<Pl_String, std::allocator<Pl_String>, char const (&)[13], Pipeline*&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
_Tuple_impl<JSON>
regex_iterator
add_help
isDictionary
copy<QPDFObjectHandle*, QPDFObjectHandle*>
JSON_string
__shared_ptr<(anonymous namespace)::ResourceReplacer>
operator==<const std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >
operator==<std::__cxx11::regex_traits<char>::_RegexMask*>
pop_front
operator==<QPDF>
noWarn
operator!=
getCount
_M_do_left_shift
construct<Buffer, const Buffer&>
__shared_ptr<QPDF::CopiedStreamDataProvider>
tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
tuple<QPDF::ObjUser>
make_shared<QPDF::ForeignStreamData, std::shared_ptr<QPDF::EncryptionParameters>&, std::shared_ptr<InputSource>&, QPDFObjGen, long long int, long unsigned int, QPDFObjectHandle&>
__builtin_memset
updateObjectMaps
forward<char const (&)[22]>
getKids
forward<std::shared_ptr<JSONHandler> >
QPDFNumberTreeObjectHelper
allocator<QPDFNameTreeObjectHelper>
CopyAttConfig
__shared_count<Pl_ASCIIHexDecoder, std::allocator<Pl_ASCIIHexDecoder>, char const (&)[16], Pipeline*&>
_S_key
__uninitialized_copy_a<const std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char> >
__shared_count<SF_ASCII85Decode, std::allocator<SF_ASCII85Decode> >
__shared_count<(anonymous namespace)::ValueSetter*>
destroy<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> >
_M_allocate_buckets
__shared_ptr<QPDFJob::EncConfig>
resolveNamedDest
strtoull
move<(anonymous namespace)::Handlers::addChoices(char const**, bool, (anonymous namespace)::Handlers::param_handler_t)::<lambda(const string&, const string&)>&>
jpeg_calc_output_dimensions
forward<char const*&>
move<QPDFJob::doListAttachments(QPDF&)::<lambda(Pipeline&, const string&)>&>
construct<std::unique_ptr<char []>, std::unique_ptr<char [], std::default_delete<char []> > >
destroy<std::pair<const QPDF::ObjUser, std::set<QPDFObjGen> > >
_M_install_cache
allocator<QPDF::StringDecrypter>
presentCharacter
assignCompressedObjectNumbers
__niter_base<double*>
__iter_equal_to_iter
__uninit_copy<int*, int*>
getAllHelp
_M_insert<const NNTreeIterator::PathElement&>
getTf
__copy_move_a<false, QPDFAnnotationObjectHelper*, QPDFAnnotationObjectHelper*>
construct<QPDFCrypto_openssl>
copy<std::move_iterator<long unsigned int*>, long unsigned int*>
_M_make_cache
add_help_5
lgamma
move<JSON::Members*&>
isPageObject
__shared_ptr<JSON::JSON_array>
_Sp_counted_ptr_inplace<char const (&)[15], Pipeline*&, Pl_Flate::action_e>
~basic_regex
_Head_base<std::__cxx11::basic_string<char> >
setParam
checkCompletion
pad_or_truncate_password_V4
regex_match<std::char_traits<char>, std::allocator<char>, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >, char, std::__cxx11::regex_traits<char> >
__uninit_copy<std::move_iterator<long long int*>, long long int*>
_setjmp
get_env
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, true, false> >
__uninit_copy<std::move_iterator<QPDFFormFieldObjectHelper*>, QPDFFormFieldObjectHelper*>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<QPDFNameTreeObjectHelper, std::allocator<QPDFNameTreeObjectHelper>, (__gnu_cxx::_Lock_policy)2> > >
__uninitialized_move_if_noexcept_a<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*, std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*, std::allocator<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > > >
_M_insert_unique<const QPDF::ObjUser&>
allocate_shared<QPDFCrypto_openssl, std::allocator<QPDFCrypto_openssl> >
operator==<char*, std::vector<char, std::allocator<char> > >
move<const std::allocator<JSON::JSON_blob>&>
_S_normalize_category
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<QPDFNumberTreeObjectHelper, std::allocator<QPDFNumberTreeObjectHelper>, (__gnu_cxx::_Lock_policy)2> > >
forEachDictItem
~Pl_LZWDecoder
__builtin_strcmp
operator!=<const std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >
__uninitialized_copy_a<char const*, char*, char>
_M_realloc_insert<long long int>
allowModifyForm
_M_construct_node<const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, QPDFObjectHandle>&>
allocate_shared<QPDFOutlineObjectHelper, std::allocator<QPDFOutlineObjectHelper>, QPDFOutlineObjectHelper&>
forward_as_tuple<long unsigned int>
includeIgnorable
recover_encryption_key_with_password
__concurrence_broadcast_error
pair<std::_Rb_tree_node<long unsigned int>*&, std::_Rb_tree_node_base*&>
Matrix
swap<char const**>
function<(anonymous namespace)::Handlers::setupOverlayPassword()::<lambda(char const*)> >
forward<std::_Rb_tree_iterator<std::__cxx11::basic_string<char> >&>
_M_widen_init
construct<Pl_RC4, char const (&)[22], Pipeline*&, unsigned char*, int>
function<(anonymous namespace)::Handlers::addParameter((anonymous namespace)::Handlers::param_handler_t)::<lambda(const string&, const string&)> >
forward<QPDF::ObjUser&&>
insertPage
pair<char const (&)[15], std::shared_ptr<QPDFStreamFilter> (&)()>
as<QPDF_Bool>
__shared_ptr<std::allocator<QPDF> >
operator==<const QPDFObjectHandle*, QPDFObjectHandle*, std::vector<QPDFObjectHandle> >
move<QPDFPageObjectHelper::forEachFormXObject(bool, std::function<void(QPDFObjectHandle&, QPDFObjectHandle&, const std::__cxx11::basic_string<char>&)>)::<lambda(QPDFObjectHandle)>&>
compareVersions
showXref
decodeRow
_M_replace_category
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<QPDFObjectHandle> > >*&, std::_Rb_tree_node_base*&>
_Construct<std::__cxx11::regex_traits<char>::_RegexMask, std::__cxx11::regex_traits<char>::_RegexMask>
_M_create_node<std::shared_ptr<Pipeline> >
_M_insert_any_matcher_ecma<true, false>
max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >
_M_enable_shared_from_this_with<Pl_ASCII85Decoder>
getFormFields
make_shared<Pl_ASCIIHexDecoder, char const (&)[16], Pipeline*&>
destroy<NNTreeIterator::PathElement>
pair<std::_Rb_tree_node<std::__cxx11::basic_string<char> >*&, std::_Rb_tree_node_base*&>
~iterator
flush_encode
move<QPDFWriter::PipelinePopper*&>
move<(anonymous namespace)::Handlers::beginDict((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&)>&>
reportMemoryUsage
__shared_ptr<std::allocator<Pl_TIFFPredictor>, char const (&)[12], Pipeline*&, Pl_TIFFPredictor::action_e, unsigned int, unsigned int, unsigned int>
bindParam<QPDFArgParser>
reference
getOE
operator==<__gnu_cxx::__normal_iterator<std::shared_ptr<QPDFObjectHandle::TokenFilter>*, std::vector<std::shared_ptr<QPDFObjectHandle::TokenFilter> > > >
deepen
findObject
move<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >&>
EVP_sha256
getU
writeDictionaryClose
destroy<std::pair<const std::__cxx11::basic_string<char>, std::set<QPDFObjGen> > >
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<JSON::JSON_dictionary, std::allocator<JSON::JSON_dictionary>, (__gnu_cxx::_Lock_policy)2> > >
shared_ptr<std::allocator<Pl_String>, char const (&)[13], Pipeline*&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
fmod
pair<std::_Rb_tree_node<std::pair<const QPDFObjGen, std::shared_ptr<QPDF::ForeignStreamData> > >*&, std::_Rb_tree_node_base*&>
~Pl_Count
maybe_set_pagemode
mbstowcs
sort<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > > >
_M_access<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, true, true>*>
make_shared<QPDFOutlineObjectHelper, QPDFOutlineObjectHelper&>
move<std::allocator<QPDF::CHSharedObjectEntry>&>
showObject
__shared_count<JSONHandler, std::allocator<JSONHandler> >
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<QPDFCrypto_openssl, std::allocator<QPDFCrypto_openssl>, (__gnu_cxx::_Lock_policy)2> > >
__shared_count<(anonymous namespace)::FunctionProvider*>
rijndael_init
_M_destroy_data_aux
__uninit_copy<std::move_iterator<QPDFParser::parser_state_e*>, QPDFParser::parser_state_e*>
shared_ptr<std::allocator<JSON::JSON_number>, long long int&>
move<std::allocator<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> > > >&>
__make_move_if_noexcept_iterator<std::__cxx11::regex_traits<char>::_RegexMask>
nbits
forward<std::shared_ptr<Pipeline> >
__addressof<const QPDFJob::copyAttachments(QPDF&)::<lambda(Pipeline&, const string&)> >
__make_move_if_noexcept_iterator<(anonymous namespace)::StackFrame>
_M_not_empty_function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, false, true> >
function<QPDFJob::handlePageSpecs(QPDF&, bool&, std::vector<std::shared_ptr<QPDF> >&)::<lambda(Pipeline&, const string&)> >
as<QPDF_InlineImage>
__shared_ptr<Pl_Flate>
forward<std::_Rb_tree_iterator<std::pair<const QPDFObjGen, QPDFXRefEntry> > >
json_out_schema_v1
move<QPDFJob::PageSpec&>
__make_move_if_noexcept_iterator<QPDFParser::parser_state_e>
getRandomDataProviderProvider
_M_access<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, true, false>*>
__shared_ptr<std::allocator<Pl_OStream>, char const (&)[13], std::basic_ostream<char, std::char_traits<char> >&>
setSave
~QPDFOutlineObjectHelper
~Pl_StdioFile
filterPageContents
shared_ptr<std::allocator<Pl_LZWDecoder>, char const (&)[11], Pipeline*&, bool&>
_Destroy<QPDFExc>
stack
allocate
getWhoami
_M_construct_node<const std::pair<const QPDFObjGen, std::set<QPDF::ObjUser, std::less<QPDF::ObjUser>, std::allocator<QPDF::ObjUser> > >&>
__uninitialized_default_n<std::__cxx11::sub_match<char const*>*, long unsigned int>
operator!=<QPDFAnnotationObjectHelper*>
__addressof<const std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, false, false> >
move<const std::allocator<JSONHandler>&>
_Construct<QPDFObjectHandle, QPDFObjectHandle>
_Tuple_impl<long unsigned int>
JSON_dictionary
inflateEnd
construct<std::pair<const std::__cxx11::basic_string<char>, QPDFArgParser::OptionEntry>, const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >
getV
argShowCrypto
_M_insert<Pipeline*>
__uninitialized_copy_a<const std::__detail::_State<char>*, std::__detail::_State<char>*, std::__detail::_State<char> >
__niter_base<QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> >
setR5EncryptionParameters
_Destroy<std::shared_ptr<char const>*, std::shared_ptr<char const> >
move<std::default_delete<unsigned char []>&>
mbsinit
shared_ptr<SF_ASCII85Decode>
progress
_GLOBAL__sub_I__ZN13SparseOHArrayC2Ev
compare_exchange_strong
construct<SF_FlateLzwDecode, bool>
_M_get_Tp_allocator
_Sp_ebo_helper
_M_enable_shared_from_this_with<QPDFObjectHandle::QPDFDictItems::iterator::Members>
StreamBlobProvider
forward<unsigned char*>
move<std::__shared_ptr<Pl_TIFFPredictor, (__gnu_cxx::_Lock_policy)2>&>
addTokenFilter
_M_insert<QPDFOutlineObjectHelper&>
construct<std::pair<const QPDFObjGen, std::__cxx11::basic_string<char> >, const std::piecewise_construct_t&, std::tuple<QPDFObjGen&&>, std::tuple<> >
destroy<Pl_ASCIIHexDecoder>
getMallocBuffer
QPDF_Real
operator()<(anonymous namespace)::ArgParser*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
__shared_count<QPDF::ForeignStreamData, std::allocator<QPDF::ForeignStreamData>, std::shared_ptr<QPDF::EncryptionParameters>&, std::shared_ptr<InputSource>&, QPDFObjGen, long long int, long unsigned int, QPDFObjectHandle&>
__shared_ptr<FileInputSource>
destroy<std::pair<const std::__cxx11::basic_string<char>, std::set<long unsigned int> > >
_M_create_node<QPDFObjGen&>
fetch_or
_M_not_empty_function<(anonymous namespace)::Handlers::beginPages(JSON)::<lambda(const string&, JSON)> >
get<1, Buffer*, std::default_delete<Buffer> >
__destroy<QPDF::JSONReactor::state_e*>
_M_data_ptr<char>
_M_rehash
_M_construct_node<const std::piecewise_construct_t&, std::tuple<long int const&>, std::tuple<> >
forward<const std::pair<const std::__cxx11::basic_string<char>, std::set<long unsigned int> >&>
_M_enable_shared_from_this_with<Pl_RunLength>
emplace_back<long long int>
operator==<QPDFOutlineObjectHelper*>
argJsonHelp
__shared_ptr<(anonymous namespace)::ProgressReporter>
forward<std::_Rb_tree_iterator<std::pair<const QPDFObjGen, int> > >
_M_assign
__shared_count<(anonymous namespace)::Pl_Track*>
forward<std::_Rb_tree_node<std::pair<long long unsigned int const, std::shared_ptr<QPDFAcroFormDocumentHelper> > >*&>
__shared_count<Pl_TIFFPredictor, std::allocator<Pl_TIFFPredictor>, char const (&)[12], Pipeline*&, Pl_TIFFPredictor::action_e, unsigned int, unsigned int, unsigned int>
__destroy<std::pair<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, int>*>
to
_M_main
getAsMap
passwordIsHexKey
__shared_ptr<QPDFValue>
__addressof<QPDF::HSharedObjectEntry>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<QPDFWriter::PipelinePopper, std::allocator<QPDFWriter::PipelinePopper>, (__gnu_cxx::_Lock_policy)2> > >
forward<char const (&)[6]>
_GLOBAL__sub_I__ZN15QPDF_DictionaryC2ERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE16QPDFObjectHandleSt4lessIS6_ESaISt4pairIKS6_S7_EEE
move<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)()>((anonymous namespace)::ArgParser*)>&>
move<const std::allocator<Pl_TIFFPredictor>&>
bindBare<QPDFArgParser>
getTrimmedTrailer
decodePaeth
~QPDFObject
_M_realloc_insert<const std::shared_ptr<JSON::JSON_value>&>
fgetws
initializeSpecialStreams
operator==<std::shared_ptr<QPDF>*>
__addressof<const QPDFJob::handleTransformations(QPDF&)::<lambda(Pipeline&, const string&)> >
pair<QPDFObjGen, int>
findPage
_M_enable_shared_from_this_with<JSON::JSON_blob>
move<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, true, false>&>
Pl_RC4
allocator<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> > >
move<std::shared_ptr<QPDFStreamFilter>&>
__niter_base<const (anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> >
__aligned_membuf
_M_initialize_dispatch<__gnu_cxx::__normal_iterator<QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> > >
__niter_base<const std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >
to_int_type
compress
construct<QPDFAnnotationObjectHelper, QPDFAnnotationObjectHelper>
copy<QPDFOutlineObjectHelper*, QPDFOutlineObjectHelper*>
bucket
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, false, false>*>
__copy_m<QPDFAnnotationObjectHelper*, QPDFAnnotationObjectHelper*>
_Mem_fn
__shared_ptr<QPDF_Destroyed>
get<1, QPDFArgParser*, std::_Placeholder<1> >
__make_move_if_noexcept_iterator<std::pair<char, char> >
_M_enable_shared_from_this_with<Pl_OStream>
function<(anonymous namespace)::Handlers::setupReplaceInput()::<lambda()> >
operator==<long int, long int&, long int*>
parse_version
createFromJSON
decode_string
to_size<long long unsigned int>
_M_insert_aux
__shared_count<Buffer, std::allocator<Buffer>, long unsigned int&>
__destroy<__gnu_cxx::__normal_iterator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > >
abs
ObjCache
scale
_M_construct_node<const std::piecewise_construct_t&, std::tuple<int const&>, std::tuple<> >
badBits
ownerPasswordMatched
newEmpty
destroy<QPDF>
_M_construct_node<const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<long unsigned int, std::less<long unsigned int>, std::allocator<long unsigned int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<long unsigned int, std::less<long unsigned int>, std::allocator<long unsigned int> > > > > >&>
move<std::shared_ptr<JSON::JSON_value>&>
isBool
_Node_iterator
forward<Pipeline*>
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, QPDF*> >*&>
move<std::__shared_ptr<Pl_RC4, (__gnu_cxx::_Lock_policy)2>&>
preserveObjectStreams
allocate_shared<QPDF, std::allocator<QPDF> >
Reactor
mem_fn<void(), QPDFArgParser>
function<(anonymous namespace)::Handlers::setupOutputFile()::<lambda(char const*)> >
EVP_aes_256_cbc
_M_reserve_elements_at_back
shared_ptr<JSON::JSON_null>
_M_deallocate_node
__uninitialized_move_if_noexcept_a<QPDFObjGen*, QPDFObjGen*, std::allocator<QPDFObjGen> >
unique_ptr<char**>
isDataModified
operator()<QPDF*, std::shared_ptr<InputSource>&, char const*>
_M_clone_node<std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::set<long unsigned int> > >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::set<long unsigned int> > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::set<long unsigned int> > > > >::_Alloc_node>
_M_insert_bucket_begin
_M_not_empty_function<std::_Bind<std::_Mem_fn<void (QPDFArgParser::*)()>(QPDFArgParser*)> >
getErrno
getObjectStreamData
construct<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSON::JSON_value> >, const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<JSON::JSON_value> >&>
_M_insert_char_matcher<false, true>
pair<std::_Rb_tree_node<std::pair<long unsigned int const, std::__cxx11::basic_string<char> > >*&, std::_Rb_tree_node_base*&>
__get_helper<0, const std::__cxx11::basic_string<char>&>
shared_ptr<char, std::default_delete<char []> >
_M_weak_add_ref
__invoke_impl<void, std::_Mem_fn<void ((anonymous namespace)::Handlers::*)(JSON)>&, (anonymous namespace)::Handlers*&, JSON>
__shared_ptr<Pl_Flate::Members>
forward<std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, std::set<QPDFObjGen> > > >
~TfFinder
_M_allocate_node<const std::piecewise_construct_t&, std::tuple<long unsigned int const&>, std::tuple<> >
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<JSON, std::allocator<JSON>, (__gnu_cxx::_Lock_policy)2> > >
construct<QPDF::JSONReactor::state_e, QPDF::JSONReactor::state_e>
filteredStreamData
withinLimits
getAnnotations
move<const std::allocator<QPDF::ForeignStreamData>&>
__exchange_and_add_single
move<std::shared_ptr<QPDFJob::CopyAttConfig>&>
construct<Pl_OStream, char const (&)[7], std::basic_ostream<char, std::char_traits<char> >&>
__copy_m<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
__uninitialized_move_if_noexcept_a<(anonymous namespace)::QPDFPageData*, (anonymous namespace)::QPDFPageData*, std::allocator<(anonymous namespace)::QPDFPageData> >
_M_get_map_allocator
__shared_count
asBool
make_shared_array<unsigned char>
shared_ptr<std::allocator<QPDFCrypto_openssl> >
~_State_info
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<QPDFAcroFormDocumentHelper, std::allocator<QPDFAcroFormDocumentHelper>, (__gnu_cxx::_Lock_policy)2> > >
move<std::shared_ptr<QPDFWriter::PipelinePopper>&>
add_help_8
wmemcpy
__addressof<const std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, true, true> >
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_DCT, std::allocator<Pl_DCT>, (__gnu_cxx::_Lock_policy)2> > >
EncryptionData
move<Pl_Buffer::Members*&>
distance<const std::__cxx11::basic_string<char>*>
~basic_stringbuf
_Tuple_impl<QPDFArgParser*&, const std::_Placeholder<1>&>
move<QPDF::StringDecrypter*&>
getFontFromResource
Pl_LZWDecoder
_M_enable_shared_from_this_with<QPDFFileSpecObjectHelper>
__shared_ptr<QPDF::Members>
show_bool
~Pl_TIFFPredictor
__invoke_impl<void, void (QPDF::* const&)(std::shared_ptr<InputSource>, char const*), QPDF*, std::shared_ptr<InputSource>&, char const*>
_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<long unsigned int const, QPDFObjectHandle>, false> > >
__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_less_iter>
get<1, bool*, std::default_delete<bool []> >
shared_ptr<Pl_Buffer::Members>
toupper
term_pipeline_destination
operator< <char, std::char_traits<char>, std::allocator<char> >
forward<std::unique_ptr<char []> >
destroy<NNTreeIterator>
function<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)()>((anonymous namespace)::Handlers*)> >
strlen
_GLOBAL__sub_I__Z8realmainiPPc
__make_move_if_noexcept_iterator<QPDFObjectHandle>
ftell
~JSON
factory
__uninit_copy<__gnu_cxx::__normal_iterator<const std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
_M_id
traverseField
_M_insert_unique<const std::__cxx11::basic_string<char>&>
__addressof<std::allocator<std::_List_node<Pipeline*> > >
regex_search<char const*, std::allocator<std::__cxx11::sub_match<char const*> >, char, std::__cxx11::regex_traits<char> >
move<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, false, false>&>
emplace_back<const NNTreeIterator::PathElement&>
_Destroy<long unsigned int*, long unsigned int>
__shared_ptr<Pl_OStream>
__shared_ptr<SF_ASCII85Decode>
setCheckBoxValue
getType
_M_enable_shared_from_this_with<QPDFWriter::FunctionProgressReporter>
as<QPDF_Operator>
strtoul
~QPDFArgParser
__get_helper<0, char*, std::default_delete<char []> >
bindBare
move<QPDFPageObjectHelper::getFormXObjects()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)>&>
construct<(anonymous namespace)::StackFrame, (anonymous namespace)::StackFrame>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_StdioFile, std::allocator<Pl_StdioFile>, (__gnu_cxx::_Lock_policy)2> > >
getwchar
allocate_shared<QPDF::ForeignStreamData, std::allocator<QPDF::ForeignStreamData>, std::shared_ptr<QPDF::EncryptionParameters>&, std::shared_ptr<InputSource>&, QPDFObjGen, long long int, long unsigned int, QPDFObjectHandle&>
__destroy<char const**>
__shared_ptr<QPDF::EncryptionParameters>
copyStreamData
__addressof<const QUtil::read_lines_from_file(FILE*, bool)::<lambda(char&)> >
move<std::shared_ptr<ContentNormalizer>&>
lookup_collatename<char const*>
move<std::default_delete<char const* []>&>
construct<std::pair<int const, int>, const std::piecewise_construct_t&, std::tuple<int&&>, std::tuple<> >
operator-<char*, std::vector<char, std::allocator<char> > >
allocator<QPDFOutlineObjectHelper>
setupInputFile
allocate_shared<Pl_DCT, std::allocator<Pl_DCT>, char const (&)[11], Pipeline*&>
wmemcmp
lzw_factory
_M_enable_shared_from_this_with<JSON::JSON_dictionary>
shared_ptr<std::allocator<QPDFNameTreeObjectHelper>, QPDFNameTreeObjectHelper&>
RC4
move<QPDFAnnotationObjectHelper&>
__concurrence_wait_error
construct<QPDF>
pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, 0>
_Destroy<std::__cxx11::basic_string<char> >
BufferInputSource
~InputSource
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<ContentNormalizer, std::allocator<ContentNormalizer>, (__gnu_cxx::_Lock_policy)2> > >
__copy_move_a<false, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
transformRectangle
QPDF_Array
addHelpFooter
_M_enable_shared_from_this_with<Buffer>
shared_ptr<Pl_DCT::Members>
_M_get_nfa
tuple<QPDFObjGen>
_Tuple_impl<Buffer::Members*&, std::default_delete<Buffer::Members> >
move<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, true, false>&>
QPDFEmbeddedFileDocumentHelper
to_int<int>
isSameObjectAs
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_String, std::allocator<Pl_String>, (__gnu_cxx::_Lock_policy)2> > >
_M_bucket_index
_Destroy<std::shared_ptr<QPDF>*, std::shared_ptr<QPDF> >
move<std::vector<QPDFObjectHandle>&>
splitPages
validateUnderOverlay
__shared_ptr<std::allocator<JSON::JSON_blob>, std::function<void(Pipeline*)>&>
operator()<QPDFObjGen>
pair<std::_Rb_tree_node<QPDF::ObjUser>*&, std::_Rb_tree_node_base*&>
_M_access<(anonymous namespace)::ArgParser::initOptionTables()::<lambda(const string&)> >
operator==<QPDFObjectHandle*, std::vector<QPDFObjectHandle> >
pair<std::_Rb_tree_node<std::pair<long long unsigned int const, std::set<QPDFObjGen> > >*&, std::_Rb_tree_node_base*&>
__uninitialized_move_if_noexcept_a<std::shared_ptr<JSON::JSON_value>*, std::shared_ptr<JSON::JSON_value>*, std::allocator<std::shared_ptr<JSON::JSON_value> > >
_Rb_tree_rebalance_for_erase
function<QPDFPageObjectHelper::forEachImage(bool, std::function<void(QPDFObjectHandle&, QPDFObjectHandle&, const std::__cxx11::basic_string<char>&)>)::<lambda(QPDFObjectHandle)> >
_Hashtable_ebo_helper<std::allocator<std::__detail::_Hash_node<std::pair<long unsigned int const, QPDFObjectHandle>, false> > >
check_user_password
forward<std::_Rb_tree_node<long unsigned int>*&>
Pl_SHA2
tuple<JSON>
~_NFA
pair<const QPDFObjGen&, 0>
__shared_ptr<QPDFLogger>
_S_left
move<QPDFJob::AttConfig*&>
inNameHex1
_Construct<QPDFObjectHandle, QPDFObjectHandle&>
__copy_m<const QPDFOutlineObjectHelper*, QPDFOutlineObjectHelper*>
forward<std::_Rb_tree_node<std::pair<long long unsigned int const, QPDF::ObjCopier> >*&>
_S_maximum
_M_copy<std::_Rb_tree<QPDFObjGen, QPDFObjGen, std::_Identity<QPDFObjGen>, std::less<QPDFObjGen>, std::allocator<QPDFObjGen> >::_Reuse_or_alloc_node>
fill_n<bool*, long unsigned int, bool>
__addressof<const (anonymous namespace)::ArgParser::initOptionTables()::<lambda(const string&)> >
getMax
appendItemAndGetNew
destroy<long int>
make_shared<JSON::JSON_number, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
__copy_m<const std::__cxx11::sub_match<char const*>*, std::__cxx11::sub_match<char const*>*>
_Iter_equals_val
__make_move_if_noexcept_iterator<long long int>
_M_coalesce
operator!=<QPDFObjectHandle*>
setEncryptionOptions
__copy_move_a<false, const (anonymous namespace)::QPDFPageData*, (anonymous namespace)::QPDFPageData*>
construct<std::pair<const QPDFObjGen, std::shared_ptr<QPDF::ForeignStreamData> >, const std::piecewise_construct_t&, std::tuple<const QPDFObjGen&>, std::tuple<> >
~_Hashtable
read
operator==<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >
forward<std::shared_ptr<QPDFStreamFilter> >
__addressof<std::allocator<std::_List_node<std::shared_ptr<JSONHandler> > > >
allocator<FileInputSource>
operator!=<std::__cxx11::basic_string<char>*>
min<double>
_Sp_counted_ptr_inplace<char const (&)[12]>
__addressof<const QPDF_Stream::<lambda()> >
unlink
construct<QPDFNumberTreeObjectHelper, QPDFObjectHandle, QPDF&>
addAttachments
__copy_move_a2<false, QPDFObjectHandle*, QPDFObjectHandle*>
__uninitialized_copy_a<std::move_iterator<QPDFAnnotationObjectHelper*>, QPDFAnnotationObjectHelper*, QPDFAnnotationObjectHelper>
QPDFCrypto_gnutls
allowModifyAnnotation
_Rb_tree_decrement
beginArray
__shared_count<Pl_Flate::Members*>
assertNull
shared_ptr<std::allocator<FileInputSource>, char const*>
list<__gnu_cxx::__normal_iterator<QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> > >
_Construct<std::shared_ptr<QPDF>, std::shared_ptr<QPDF> >
default_delete
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_TIFFPredictor, std::allocator<Pl_TIFFPredictor>, (__gnu_cxx::_Lock_policy)2> > >
operator=<Pl_StdioFile>
__regex_algo_impl<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >, char, std::__cxx11::regex_traits<char>, (std::__detail::_RegexExecutorPolicy)0, false>
~Pl_OStream
move<std::vector<char, std::allocator<char> >&>
wcschr
endUnderlay
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::set<long unsigned int> > >*&>
_M_create_node<const QPDFObjGen&>
__get_helper<0, QPDFArgParser*>
shared_ptr<SF_DCTDecode>
forward<_IO_FILE*>
move<const std::allocator<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >&>
assign
_M_is_equal
function<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, true, false> >
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >*&, std::_Rb_tree_node_base*&>
_M_insert_char_matcher<true, false>
parseContentStream_internal
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<NNTreeIterator, std::allocator<NNTreeIterator>, (__gnu_cxx::_Lock_policy)2> > >
_Bind<const std::_Placeholder<1>&, std::shared_ptr<InputSource>&, const std::_Placeholder<2>&>
swap<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*>
_GLOBAL__sub_I__ZN9QPDF_RealC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_M_handle_line_begin_assertion
shared_ptr<QPDFOutlineObjectHelper::Members>
move<std::shared_ptr<JSON::JSON_number>&>
getHelp
move<QPDFPageObjectHelper::externalizeInlineImages(size_t, bool)::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)>&>
__adjacent_find<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>
getLength
__copy_move_b<char>
_M_access<(anonymous namespace)::Handlers::initHandlers()::<lambda(const string&, JSON)> >
__niter_base<long int**>
operator+<char, std::char_traits<char>, std::allocator<char> >
pair<std::_Rb_tree_node_base*&>
__addressof<const (anonymous namespace)::Handlers::setupCopyAttachmentsFromFile()::<lambda(char const*)> >
_S_move
operator==<std::pair<char, char>*>
move<(anonymous namespace)::Handlers::setupEmpty()::<lambda()>&>
~Pl_Base64
__shared_count<Pl_Buffer::Members*>
operator()<QPDFArgParser*&>
argHelp
shared_ptr<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >
allocate_shared<SF_RunLengthDecode, std::allocator<SF_RunLengthDecode> >
__invoke_impl<void, std::_Mem_fn<void (QPDF::*)(std::shared_ptr<InputSource>, char const*)>&, QPDF*, std::shared_ptr<InputSource>&, char const*>
operator!=<char*, std::vector<char, std::allocator<char> > >
allocate_shared<Pl_ASCII85Decoder, std::allocator<Pl_ASCII85Decoder>, char const (&)[15], Pipeline*&>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<SF_ASCIIHexDecode, std::allocator<SF_ASCIIHexDecode>, (__gnu_cxx::_Lock_policy)2> > >
__shared_ptr<std::allocator<QUtil::FileCloser>, _IO_FILE*>
__destroy<(anonymous namespace)::QPDFPageData*>
getPaddedUserPassword
shared_ptr<SF_RunLengthDecode>
move<__gnu_cxx::__normal_iterator<QPDFObjectHandle*, std::vector<QPDFObjectHandle> >, __gnu_cxx::__normal_iterator<QPDFObjectHandle*, std::vector<QPDFObjectHandle> > >
read_xrefStream
isspace
_Sp_counted_ptr_inplace<QPDFObjectHandle, QPDF&>
__destroy<std::__cxx11::sub_match<char const*>*>
_M_move_data
move<const std::allocator<NNTreeIterator>&>
doJSON
construct<QPDFOutlineObjectHelper, QPDFOutlineObjectHelper&>
_M_release
construct<std::pair<const QPDFObjGen, std::vector<QPDFAnnotationObjectHelper> >, const std::piecewise_construct_t&, std::tuple<QPDFObjGen&&>, std::tuple<> >
transform<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >
setupCopyAttachmentsFromPassword
_M_access<(anonymous namespace)::Handlers::setupCopyAttachmentsFromFile()::<lambda(char const*)> >
__addressof<const (anonymous namespace)::Handlers::initHandlers()::<lambda(const string&)> >
_Destroy<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<(anonymous namespace)::SF_Crypt, std::allocator<(anonymous namespace)::SF_Crypt>, (__gnu_cxx::_Lock_policy)2> > >
getExitCode
emptyInput
__copy_move_backward_a2<false, long int**, long int**>
forward<_IO_FILE*&>
forward<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >
_M_not_empty_function<QPDFPageObjectHelper::removeUnreferencedResources()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
function<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, true, true> >
move<QPDF::HPageOffsetEntry&>
QPDFVersion
list
allocate_shared<Pl_QPDFTokenizer, std::allocator<Pl_QPDFTokenizer>, char const (&)[11], ContentNormalizer*, Pipeline*&>
__copy_move_a2<false, __gnu_cxx::__normal_iterator<const QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> >, __gnu_cxx::__normal_iterator<QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> > >
shared_ptr<JSON::JSON_string>
__nonesuch
double_to_string
_M_realloc_insert<const QPDFObjGen&>
function<std::_Bind<std::_Mem_fn<void (QPDFArgParser::*)()>(QPDFArgParser*)> >
construct<Pl_TIFFPredictor, char const (&)[12], Pipeline*&, Pl_TIFFPredictor::action_e, unsigned int, unsigned int, unsigned int>
destroy<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >
forEachArrayItem
__get_helper<1, std::default_delete<char* []> >
move<Pl_String*&>
asInlineImage
__miter_base<QPDFParser::parser_state_e*>
__shared_count<QPDFOutlineDocumentHelper::Members*>
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> >*&, std::_Rb_tree_node_base*&>
__shared_ptr<Pl_Buffer>
forward<const std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > >&>
operator!=<std::shared_ptr<char const>*>
_S_whichbyte
swap<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
make_shared<Pl_PNGFilter, char const (&)[11], Pipeline*&, Pl_PNGFilter::action_e, unsigned int, unsigned int, unsigned int>
isString
construct<std::pair<long long unsigned int const, std::set<QPDFObjGen> >, const std::piecewise_construct_t&, std::tuple<long long unsigned int const&>, std::tuple<> >
operator=<Pl_ASCII85Decoder>
qdf
unique_ptr<bool*>
__shared_ptr<std::allocator<Pl_RC4>, char const (&)[22], Pipeline*&, unsigned char*, int>
setFromVector
fixCopiedAnnotations
__shared_ptr<std::allocator<QPDFFileSpecObjectHelper>, QPDFObjectHandle&>
move<QPDFOutlineObjectHelper&>
__addressof<std::__cxx11::regex_traits<char>::_RegexMask>
calculateHPageOffset
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, false, false>*>
basic_istringstream
construct<SF_ASCIIHexDecode>
push_back
__shared_count<QPDFObjectHandle::QPDFDictItems::iterator::Members*>
getIdentifier
_M_insert_unique_<QPDFObjGen&, std::_Rb_tree<QPDFObjGen, QPDFObjGen, std::_Identity<QPDFObjGen>, std::less<QPDFObjGen>, std::allocator<QPDFObjGen> >::_Alloc_node>
JSON_null
_M_construct_aux<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >
_M_scan_normal
destroy<std::pair<long unsigned int const, unsigned char> >
destroy<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > >
insertItem
adjustAppearanceStream
operator()<long long int const&>
move<std::__shared_ptr<Buffer, (__gnu_cxx::_Lock_policy)2>&>
normalizeContent
__is_null_pointer<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >
__normal_iterator
__uninit_copy<char const*, char*>
operator std::integral_constant<bool, true>::value_type
processXRefStream
forward<const std::locale&>
destroy<std::shared_ptr<QPDFObjectHandle::TokenFilter> >
__copy_move_a<false, int const*, int*>
setDataKey
allocate_shared<QPDFFileSpecObjectHelper, std::allocator<QPDFFileSpecObjectHelper>, const QPDFObjectHandle&>
interpretR3EncryptionParameters
_M_construct_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, QPDFObjectHandle>&>
strcoll
__uninitialized_copy_a<std::move_iterator<(anonymous namespace)::QPDFPageData*>, (anonymous namespace)::QPDFPageData*, (anonymous namespace)::QPDFPageData>
writeToken
_M_eat_escape_awk
make_pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >
operator--
getQuadding
_M_access<std::_Bind<std::_Mem_fn<void (QPDFArgParser::*)()>(QPDFArgParser*)>*>
topLevelScalar
__concurrence_unlock_error
__alloc_on_move<std::allocator<std::_List_node<std::__cxx11::basic_string<char> > > >
~CopyAttConfig
toS<long int>
endUnderlayOverlay
int_to_string_base_internal<long long int>
__get_helper<1, char const*&&>
uninitialized_copy<std::move_iterator<std::shared_ptr<Pipeline>*>, std::shared_ptr<Pipeline>*>
_Construct<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
from
move<(anonymous namespace)::Handlers::addParameter((anonymous namespace)::Handlers::param_handler_t)::<lambda(const string&, const string&)>&>
construct<std::pair<const QPDF::ObjUser, std::set<QPDFObjGen> >, const std::piecewise_construct_t&, std::tuple<const QPDF::ObjUser&>, std::tuple<> >
addContentTokenFilter
__uninitialized_move_if_noexcept_a<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*, std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*, std::allocator<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > > >
__uninitialized_move_if_noexcept_a<std::__cxx11::sub_match<char const*>*, std::__cxx11::sub_match<char const*>*, std::allocator<std::__cxx11::sub_match<char const*> > >
__cxa_guard_release
move<std::shared_ptr<Pl_RunLength>&>
isOperator
__get_helper<0, const QPDF::ObjUser&>
function<QUtil::read_lines_from_file(std::istream&, bool)::<lambda(char&)> >
__addressof<const QPDFPageObjectHelper::removeUnreferencedResources()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
capacity
__shared_count<QPDFEmbeddedFileDocumentHelper::Members*>
getArrayAsMatrix
shared_ptr<std::allocator<Pl_RunLength>, char const (&)[17], Pipeline*&, Pl_RunLength::action_e>
translate
addressof<char const>
move<std::shared_ptr<(anonymous namespace)::SF_Crypt>&>
log
SparseOHArray
destroy<Pl_RunLength>
_GLOBAL__sub_I__ZN30QPDFEmbeddedFileDocumentHelperC2ER4QPDF
_M_insert_char_matcher<false, false>
_Destroy<QPDFJob::PageSpec*>
getPerms
move<(anonymous namespace)::Handlers::beginDict((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&, JSON)>&>
__uninit_copy<const std::__detail::_State<char>*, std::__detail::_State<char>*>
move<std::shared_ptr<Pl_PNGFilter>&>
enqueueObjectsStandard
QPDF_Name
_M_access<(anonymous namespace)::Handlers::setupCopyAttachmentsFromFile()::<lambda(char const*)>*>
addAndRenameFormFields
__shared_ptr<QPDFObjectHandle::QPDFDictItems::iterator::Members>
operator==<std::shared_ptr<Pipeline>*>
construct<JSON::JSON_string, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
form
swap<QPDFJob::UOConfig*>
_M_emplace_unique<std::pair<QPDFObjGen, int> >
removePageLabels
shared_ptr<std::allocator<JSON::JSON_string>, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
bind<std::_Mem_fn<void (QPDFArgParser::*)(const std::__cxx11::basic_string<char>&)>, QPDFArgParser*&, const std::_Placeholder<1>&>
basic_regex<char const*>
shared_ptr<std::allocator<QPDFNameTreeObjectHelper>, QPDFObjectHandle&, QPDF&>
uninitialized_copy<__gnu_cxx::__normal_iterator<const std::__cxx11::regex_traits<char>::_RegexMask*, std::vector<std::__cxx11::regex_traits<char>::_RegexMask, std::allocator<std::__cxx11::regex_traits<char>::_RegexMask> > >, std::__cxx11::regex_traits<char>::_RegexMask*>
~Pl_RunLength
operator==<FileInputSource>
get
_Destroy<QPDFParser::parser_state_e*>
move<QPDFValue*&>
writeStandard
__destroy<QPDFAnnotationObjectHelper*>
getValueAsNumber
construct<std::shared_ptr<JSON::JSON_value>, std::shared_ptr<JSON::JSON_value> >
_M_get_node
__invoke<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)()>&, (anonymous namespace)::Handlers*&>
jsonObject
TokenFilter
_M_term
forward<std::_Mem_fn<void (QPDFArgParser::*)(const std::__cxx11::basic_string<char>&)>&>
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, false, true> >
recoverStreamLength
destroy<std::pair<const QPDFObjGen, std::__cxx11::basic_string<char> > >
__get_helper<0, (anonymous namespace)::Handlers*, std::_Placeholder<1> >
beginJsonObjectArray
_M_bracket_expression
operator=
__builtin_memchr
function<(anonymous namespace)::Handlers::setupEmpty()::<lambda()> >
destroy<std::pair<const QPDFObjGen, QPDFXRefEntry> >
__shared_count<QPDFArgParser::Members*>
__addressof<const QPDFJob::doUnderOverlayForPage(QPDF&, QPDFJob::UnderOverlay&, std::map<int, std::vector<int> >&, size_t, std::map<int, QPDFObjectHandle>&, std::vector<QPDFPageObjectHelper>&, QPDFPageObjectHelper&, bool)::<lambda(Pipeline&, const string&)> >
itemsKey
move<std::shared_ptr<Buffer>&>
fetch_and
move<std::shared_ptr<QPDFCrypto_gnutls> (*&)()>
__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >, std::__cxx11::sub_match<char const*>*, std::__cxx11::sub_match<char const*> >
_M_insert_bracket_matcher<true, true>
__copy_move_b<long int*>
~ObjCopier
get<0, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>
is_unicode_string
checkError
__make_move_if_noexcept_iterator<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >
_M_insert_multi_node
move<unsigned char*&>
_Destroy<(anonymous namespace)::JSONParser::parser_state_e*, (anonymous namespace)::JSONParser::parser_state_e>
_M_access<QPDFPageObjectHelper::externalizeInlineImages(size_t, bool)::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)>*>
toS<int>
__uninit_copy<std::move_iterator<std::__cxx11::basic_string<char>*>, std::__cxx11::basic_string<char>*>
empty_pipeline_output_buffer
__sort<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_less_iter>
to_int<unsigned char>
asInteger
setLogger
__cxa_guard_acquire
get<1, (anonymous namespace)::ArgParser*, std::_Placeholder<1> >
getName
shared_ptr<std::allocator<QPDF::StringDecrypter>, QPDF*, const QPDFObjGen&>
newFromStream
getR
_Sp_counted_ptr_inplace<>
_M_enable_shared_from_this_with<Pl_OStream::Members>
make_shared<JSON::JSON_number, double&>
construct<JSON::JSON_dictionary>
provide_data
~JSON_bool
_M_create_node<QPDFObjectHandle>
getValueAsBool
construct<(anonymous namespace)::SF_Crypt>
__uninitialized_default_n_a<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, long unsigned int, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >
forward_as_tuple<QPDF::ObjUser>
argPagesPositional
iterate_rc4
_NFA_base
_M_del
_Construct<std::unique_ptr<char []>, std::unique_ptr<char [], std::default_delete<char []> > >
__shared_ptr<std::allocator<JSON::JSON_number>, double&>
resolveObjectsInStream
allocator<std::_List_node<QPDFObjectHandle> >
move<std::__cxx11::basic_string<char>&>
_M_enable_shared_from_this_with<char const*>
forward<QPDFObjGen&>
getFinalVersion
__introsort_loop<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, long int, __gnu_cxx::__ops::_Iter_less_iter>
operator!=<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
forward<char const (&)[11]>
cosh
_M_stringbuf_init
forward<unsigned int>
_GLOBAL__sub_I__ZN24QPDFNameTreeObjectHelperD2Ev
~QPDFObjectHelper
operator==<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*>
operator==<(anonymous namespace)::StackFrame*>
toI<int>
shared_ptr<Pl_Flate::Members>
__shared_ptr<Pl_Count>
use_facet<std::__cxx11::collate<char> >
asReserved
function<std::shared_ptr<QPDFCrypto_gnutls> (*)()>
_M_options
__miter_base<__gnu_cxx::__normal_iterator<const (anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> > >
shared_ptr<Pl_OStream::Members>
setSubtype
setQPDFOptions
function<QPDFJob::shouldRemoveUnreferencedResources(QPDF&)::<lambda(Pipeline&, const string&)> >
forward<const std::_Placeholder<2>&>
move<std::vector<std::pair<char, char>, std::allocator<std::pair<char, char> > >&>
construct<std::pair<int const, std::vector<int> >, const std::piecewise_construct_t&, std::tuple<int const&>, std::tuple<> >
allocator<Pl_ASCII85Decoder>
get<0, QPDF*&&, char const*&&>
_State_base
is_indirect_object
move<std::__shared_ptr<Pl_AES_PDF, (__gnu_cxx::_Lock_policy)2>&>
getWrittenXRefTable
operator-<QPDFFormFieldObjectHelper*, std::vector<QPDFFormFieldObjectHelper> >
wcstoll
function<(anonymous namespace)::Handlers::setupInputFile()::<lambda(char const*)> >
endRemoveAttachmentArray
__addressof<const QPDFPageObjectHelper::getImages()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
move<QPDFJob::handlePageSpecs(QPDF&, bool&, std::vector<std::shared_ptr<QPDF> >&)::<lambda(Pipeline&, const string&)>&>
forward<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)(JSON)>&>
forward<long long int&>
_M_insert<long long unsigned int>
move<QPDFJob::doUnderOverlayForPage(QPDF&, QPDFJob::UnderOverlay&, std::map<int, std::vector<int> >&, size_t, std::map<int, QPDFObjectHandle>&, std::vector<QPDFPageObjectHelper>&, QPDFPageObjectHelper&, bool)::<lambda(Pipeline&, const string&)>&>
move<QPDFPageObjectHelper::removeUnreferencedResources()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)>&>
push_front
disablePadding
pair<QPDFObjGen&&>
function<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)(const std::__cxx11::basic_string<char>&)>((anonymous namespace)::ArgParser*, std::_Placeholder<1>)> >
doUnderOverlayForPage
__copy_move_a<true, QPDFObjectHandle*, QPDFObjectHandle*>
findFirst
__shared_ptr<std::allocator<Pl_StdioFile>, char const (&)[12], _IO_FILE*&>
make_shared<JSON::JSON_number, long long int&>
computeDeterministicIDData
forward<std::_Placeholder<1> >
getAsMatrix
__addressof<const QPDFJob::maybeFixWritePassword(int, std::__cxx11::string&)::<lambda(Pipeline&, const string&)> >
destroy<QPDF::JSONReactor::state_e>
__do_alloc_on_move<std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > >
_M_access<QPDFWriter::writeLinearized()::<lambda(QPDFObjectHandle&)> >
floor
~Init
destroy<(anonymous namespace)::JSONParser::parser_state_e>
_M_emplace_hint_unique<const std::piecewise_construct_t&, std::tuple<const QPDFObjGen&>, std::tuple<> >
getPageContentForAppearance
_M_copy
fma
flags
__addressof<const std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, false, false> >
min_element<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >
forward<std::shared_ptr<JSON::JSON_value> >
find
compute_O_rc4_key
~QPDF_Stream
keepInlineImages
vswprintf
~CHPageOffset
~JSON_array
_Construct<(anonymous namespace)::QPDFPageData, (anonymous namespace)::QPDFPageData&>
makeObject
_M_access<QPDFJob::doListAttachments(QPDF&)::<lambda(Pipeline&, const string&)>*>
_M_insert<const std::shared_ptr<JSONHandler>&>
_RegexTranslatorBase
__addressof<std::default_delete<char []> >
~shared_ptr
_M_create_node<const QPDFJob::CopyAttachmentFrom&>
__uninitialized_copy_a<std::move_iterator<QPDFFormFieldObjectHelper*>, QPDFFormFieldObjectHelper*, QPDFFormFieldObjectHelper>
move<bool (*&)(std::_Any_data&, const std::_Any_data&, std::_Manager_operation)>
tmpfile
shared_ptr<std::allocator<Pl_TIFFPredictor>, char const (&)[12], Pipeline*&, Pl_TIFFPredictor::action_e, unsigned int, unsigned int, unsigned int>
destroy<SF_RunLengthDecode>
_M_access<QPDFPageObjectHelper::getArtBox(bool, bool)::<lambda()> >
~ResolveRecorder
_M_access<(anonymous namespace)::Handlers::beginArray((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&, JSON)>*>
precision
findHeader
addFinalCheck
forward<long unsigned int const&>
destroy<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, QPDFArgParser::OptionEntry> > >
~QPDFFormFieldObjectHelper
move<(anonymous namespace)::ArgParser::initOptionTables()::<lambda()>&>
readHPageOffset
_M_access<QPDFJob::handlePageSpecs(QPDF&, bool&, std::vector<std::shared_ptr<QPDF> >&)::<lambda(Pipeline&, const string&)> >
operator!=<std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> > >
bad_bits
__addressof<const std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, true, false> >
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<QPDFFileSpecObjectHelper, std::allocator<QPDFFileSpecObjectHelper>, (__gnu_cxx::_Lock_policy)2> > >
__shared_ptr<Pl_ASCIIHexDecoder>
~tuple
pageSpec
load
~JSON_value
__uninit_default_n<double*, long unsigned int>
__shared_count<char*, std::default_delete<char []>, std::allocator<void> >
destroy<FileInputSource>
destroy<std::pair<const QPDFObjGen, std::set<QPDF::ObjUser> > >
_Head_base<(anonymous namespace)::ArgParser*&>
forward<std::_Rb_tree_node<std::pair<int const, QPDFObjectHandle> >*&>
forward<long long int>
__xstat
_M_create_node<const std::piecewise_construct_t&, std::tuple<int const&>, std::tuple<> >
pair<char, char>
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFCryptoImpl>()> > >*&>
_M_alloc
__addressof<(anonymous namespace)::StackFrame>
_M_insert_unique<const QPDFObjGen&>
operator-<(anonymous namespace)::JSONParser::parser_state_e*, std::vector<(anonymous namespace)::JSONParser::parser_state_e> >
move<std::_Mem_fn<void (QPDFArgParser::*)()>&>
destroy<std::__detail::_State<char> >
__uninit_copy<std::move_iterator<std::shared_ptr<char const>*>, std::shared_ptr<char const>*>
annotate
writeBinary
_Destroy<std::shared_ptr<QPDF> >
move<std::__shared_ptr<QPDFNumberTreeObjectHelper, (__gnu_cxx::_Lock_policy)2>&>
encode
make_unique<unsigned char []>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<QPDFNameTreeObjectHelper, std::allocator<QPDFNameTreeObjectHelper>, (__gnu_cxx::_Lock_policy)2> > >
_Destroy<(anonymous namespace)::QPDFPageData>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<QUtil::FileCloser, std::allocator<QUtil::FileCloser>, (__gnu_cxx::_Lock_policy)2> > >
__copy_m<char>
move<char const**&>
operator()<>
_S_distance
getEnd
basic_string<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >
get<0, std::_Placeholder<1>, char const*, std::_Placeholder<2> >
__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int> >, int*, int>
forward<QPDFArgParser*&>
_M_access<QPDFJob::copyAttachments(QPDF&)::<lambda(Pipeline&, const string&)>*>
forward<std::_Rb_tree_node<std::pair<int const, std::vector<int> > >*&>
move<(anonymous namespace)::Handlers::setupOverlayPassword()::<lambda(char const*)>&>
writeDictionaryKey
_M_create_node<const std::piecewise_construct_t&, std::tuple<QPDF::ObjUser&&>, std::tuple<> >
setParsedOffset
forward<void (QPDF::* const&)(char const*, char const*)>
uninitialized_copy<std::move_iterator<QPDF::CHSharedObjectEntry*>, QPDF::CHSharedObjectEntry*>
swap<void (*)(const std::_Any_data&, const std::__cxx11::basic_string<char>&, JSON&&)>
_M_insert<NNTreeIterator::PathElement>
_Destroy<Buffer>
allocate_shared<Pl_QPDFTokenizer, std::allocator<Pl_QPDFTokenizer>, char const (&)[13], QPDFObjectHandle::TokenFilter*, Pipeline*&>
_M_construct_node<const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<JSON::JSON_value> >&>
swap<QPDF::StringDecrypter*>
_Destroy<QPDFPageObjectHelper*, QPDFPageObjectHelper>
allocate_shared<Pl_Flate, std::allocator<Pl_Flate>, char const (&)[16], Pipeline*&, Pl_Flate::action_e>
_M_extract
advance<__gnu_cxx::__normal_iterator<char const*, std::vector<char, std::allocator<char> > >, long int>
_Destroy<QPDFObjectHandle*>
getArtBox
operator std::integral_constant<long unsigned int, 0>::value_type
allocator<QPDFWriter::PipelinePopper>
_M_access<QPDFPageObjectHelper::forEachImage(bool, std::function<void(QPDFObjectHandle&, QPDFObjectHandle&, const std::__cxx11::basic_string<char>&)>)::<lambda(QPDFObjectHandle)>*>
utf8_to_mac_roman
_Construct<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >
exp2
__copy_move_a2<true, char*, char*>
operator!=<std::shared_ptr<JSON>*>
construct<std::pair<int const, long long int>, const std::piecewise_construct_t&, std::tuple<int const&>, std::tuple<> >
~__weak_count
move<std::tuple<std::_Placeholder<1>, std::shared_ptr<InputSource>, std::_Placeholder<2> >&>
operator|=
TfFinder
_M_access<(anonymous namespace)::Handlers::setupReplaceInput()::<lambda()> >
allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >
basic_string<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >
_M_not_empty_function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, true, true> >
forward<Pipeline&>
_Tuple_impl<QPDFObjGen>
uninitialized_copy<std::move_iterator<std::unique_ptr<char []>*>, std::unique_ptr<char []>*>
forward<const std::shared_ptr<QPDFObjectHandle::TokenFilter>&>
_M_not_empty_function<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, true, true> >
~QPDFValue
__shared_ptr<std::allocator<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >, const std::locale&, std::regex_constants::syntax_option_type&>
construct<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >
~ClosedFileInputSource
operator-<char*, std::__cxx11::basic_string<char> >
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<FileInputSource, std::allocator<FileInputSource>, (__gnu_cxx::_Lock_policy)2> > >
setEnd
operator-<char const**, std::vector<char const*> >
operator==<const QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> >
before
make_shared<JSON::JSON_blob, std::function<void(Pipeline*)>&>
shared_ptr
parseContents
JSONReactor
shared_ptr<Pl_Buffer>
bind<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)(JSON)>, (anonymous namespace)::Handlers*, const std::_Placeholder<1>&>
make_shared<Pl_ASCII85Decoder, char const (&)[15], Pipeline*&>
move<(anonymous namespace)::Handlers::setupCopyAttachmentsFromFile()::<lambda(char const*)>&>
move<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, true, true>&>
__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const std::__cxx11::regex_traits<char>::_RegexMask*, std::vector<std::__cxx11::regex_traits<char>::_RegexMask, std::allocator<std::__cxx11::regex_traits<char>::_RegexMask> > >, std::__cxx11::regex_traits<char>::_RegexMask*, std::__cxx11::regex_traits<char>::_RegexMask>
copy<__gnu_cxx::__normal_iterator<const QPDFObjectHandle*, std::vector<QPDFObjectHandle> >, __gnu_cxx::__normal_iterator<QPDFObjectHandle*, std::vector<QPDFObjectHandle> > >
towctrans
_M_insert_matcher
construct<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >, const std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >&>
getAsVector
move<std::__shared_ptr<char const*, (__gnu_cxx::_Lock_policy)2>&>
cleartextMetadata
swap<Buffer::Members*>
basic_ostream
forward<long long unsigned int const&>
__shared_count<Pl_AES_PDF, std::allocator<Pl_AES_PDF>, char const (&)[22], Pipeline*&, bool, unsigned char*, long unsigned int>
_Construct<std::__cxx11::sub_match<char const*>, std::__cxx11::sub_match<char const*> >
allocate_shared<Pl_RC4, std::allocator<Pl_RC4>, char const (&)[22], Pipeline*&, unsigned char*, int>
move<std::vector<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::allocator<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >&>
EVP_CIPHER_CTX_reset
passwordMode
~QPDF_Destroyed
__shared_count<QPDFNameTreeObjectHelper::Members*>
QPDFPageDocumentHelper
destroy<std::shared_ptr<JSONHandler> >
__destroy<char*>
__uninitialized_default_n<std::pair<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, int>*, long unsigned int>
__shared_ptr<unsigned char, std::default_delete<unsigned char []> >
operator()
move<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*&>
pipeContents
swap<QPDFObject*>
unparse
forward<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&> >
_M_enable_shared_from_this_with<QPDFArgParser::Members>
_M_enable_shared_from_this_with<Pl_ASCIIHexDecoder>
move<std::allocator<QPDF::CHPageOffsetEntry>&>
operator-<std::pair<char, char>*, std::vector<std::pair<char, char>, std::allocator<std::pair<char, char> > > >
mem_fn<void(const std::__cxx11::basic_string<char>&), QPDFArgParser>
_M_is_any
move<(anonymous namespace)::Handlers::beginPages(JSON)::<lambda(const string&, JSON)>&>
_M_clone_node<std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > > >::_Alloc_node>
distance<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >
~qpdf_jpeg_error_mgr
operator()<QPDF*, char const*&, char const*>
__cxa_guard_abort
operator-<QPDFObjectHandle*, std::vector<QPDFObjectHandle> >
classic
__uninitialized_default_n_a<QPDF::CHPageOffsetEntry*, long unsigned int, QPDF::CHPageOffsetEntry>
construct<NNTreeIterator::PathElement, const NNTreeIterator::PathElement&>
_M_enable_shared_from_this_with<Pl_Discard>
make_shared<Pl_Buffer, char const (&)[12]>
swap<std::_Any_data>
make_shared<QPDF>
getOperatorValue
__niter_base<long unsigned int*>
allocator<QPDFCryptoProvider::Members>
construct<JSON::JSON_number, double&>
insertFirst
_M_not_empty_function<QPDF_Stream::pipeStreamData(Pipeline*, bool*, int, qpdf_stream_decode_level_e, bool, bool)::<lambda(char const*, int)> >
parsePageContents
shared_ptr<Pl_QPDFTokenizer::Members>
forward<std::_Mem_fn<void (QPDFArgParser::*)()>&>
__shared_count<Pl_OStream, std::allocator<Pl_OStream>, char const (&)[7], std::basic_ostream<char, std::char_traits<char> >&>
destroy<std::pair<const QPDFObjGen, int> >
shared_ptr<std::allocator<QUtil::FileCloser>, _IO_FILE*>
assertScalar
ArgParser
forward<const std::shared_ptr<JSON::JSON_value>&>
__do_alloc_on_move<std::allocator<std::_List_node<std::__cxx11::basic_string<char> > > >
swap<QPDFAcroFormDocumentHelper*>
writeIndent
__shared_ptr<QPDFObjectHandle::QPDFArrayItems::iterator::Members>
emplace_back<char>
erase
as<QPDF_Null>
_M_emplace_hint_unique<const std::piecewise_construct_t&, std::tuple<QPDFObjGen&&>, std::tuple<> >
_M_insert_lower_node
__shared_ptr<std::allocator<JSON>, JSON>
_M_construct_aux<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >
isScalar
operator->
isInitialized
pair<std::_Rb_tree_node<std::pair<long long unsigned int const, std::shared_ptr<QPDFAcroFormDocumentHelper> > >*&, std::_Rb_tree_node_base*&>
forward_as_tuple<QPDF*, char const*>
getNItems
pair<std::_Rb_tree_iterator<std::__cxx11::basic_string<char> >, std::_Rb_tree_iterator<std::__cxx11::basic_string<char> > >
forward<std::shared_ptr<char const> >
__addressof<(anonymous namespace)::QPDFPageData>
operator=<JSON::JSON_null>
move<(anonymous namespace)::Handlers::setupUnderlayFile()::<lambda(char const*)>&>
move<void (*&)(const std::_Any_data&, int&&)>
StreamDataProvider
__shared_ptr<QPDFJob::CopyAttConfig>
_M_create_node<const std::piecewise_construct_t&, std::tuple<const QPDF::ObjUser&>, std::tuple<> >
__uninitialized_copy_a<std::move_iterator<QPDF::CHSharedObjectEntry*>, QPDF::CHSharedObjectEntry*, QPDF::CHSharedObjectEntry>
_M_enable_shared_from_this_with<QPDFJob::CopyAttConfig>
ERR_error_string_n
pair<char const (&)[5], char const (&)[15]>
fail
forward<std::_Rb_tree_iterator<QPDFObjGen> >
to_size<long int>
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, QPDF::encryption_method_e> >*&>
_Construct<std::__detail::_State<char>, const std::__detail::_State<char>&>
move<QPDFObjGen&>
getValueAsInt
operator==<std::shared_ptr<QPDFObjectHandle::TokenFilter>*, std::vector<std::shared_ptr<QPDFObjectHandle::TokenFilter> > >
__miter_base<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
forward<std::_Rb_tree_node<int>*&>
getInheritableFieldValueAsName
forward<QPDF::JSONReactor::state_e>
gnutls_rnd
_M_not_empty_function<(anonymous namespace)::Handlers::beginDict((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&)> >
move<std::__shared_ptr<QPDFJob::EncConfig, (__gnu_cxx::_Lock_policy)2>&>
RC4_process
__destroy<QPDF::CHPageOffsetEntry*>
rewind
isSpace
function<std::_Bind<std::_Mem_fn<void (QPDF::*)(std::shared_ptr<InputSource>, char const*)>(std::_Placeholder<1>, std::shared_ptr<InputSource>, std::_Placeholder<2>)> >
_M_enable_shared_from_this_with<QPDFLogger::Members>
__addressof<QPDFObjGen>
__copy_move_a2<true, int*, int*>
make_shared<QPDFFileSpecObjectHelper, const QPDFObjectHandle&>
__shared_count<JSON::JSON_string, std::allocator<JSON::JSON_string>, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, QPDFArgParser::OptionEntry> >*&, std::_Rb_tree_node_base*&>
extract
_Construct<QPDFObjectHandle, const QPDFObjectHandle&>
move<std::allocator<void>&>
_M_getword
swap<FileInputSource*>
getObjectByObjGen
_M_eat_class
_CharMatcher
jpeg_CreateCompress
resetBits
destroy<QPDF::StringDecrypter>
_M_enable_shared_from_this_with<QPDFEmbeddedFileDocumentHelper::Members>
get<0, QPDFArgParser*, std::_Placeholder<1> >
make_shared<FileInputSource, char const*>
allowModifyOther
move<std::vector<int>&>
get<0, char**, std::default_delete<char* []> >
as<QPDF_Stream>
move<std::shared_ptr<QPDFObjectHandle::StreamDataProvider>&>
_M_get_deleter
operator==<(anonymous namespace)::QPDFPageData*>
_M_not_empty_function<(anonymous namespace)::Handlers::initHandlers()::<lambda(const string&, JSON)> >
~QPDF_Null
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, false, false> >
move<std::shared_ptr<Pl_ASCIIHexDecoder>&>
move<std::less<QPDFObjGen>&>
transform
__uninitialized_move_if_noexcept_a<std::shared_ptr<QPDFObjectHandle::TokenFilter>*, std::shared_ptr<QPDFObjectHandle::TokenFilter>*, std::allocator<std::shared_ptr<QPDFObjectHandle::TokenFilter> > >
_M_enable_shared_from_this_with<QPDFJob::UOConfig>
swap<Buffer*>
__make_move_if_noexcept_iterator<QPDF::CHSharedObjectEntry>
allocator<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> > >
fsetpos
uint_to_string
operator!=<QPDFPageObjectHelper*>
__shared_count<Pl_DCT, std::allocator<Pl_DCT>, char const (&)[4], Pipeline*&, unsigned int&, unsigned int&, int&, J_COLOR_SPACE&>
__addressof<const QPDFPageObjectHelper::externalizeInlineImages(size_t, bool)::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
NNTreeImpl
_M_queue
__shared_count<QPDFNumberTreeObjectHelper::Members*>
fclose
_M_access<QPDF_Stream::pipeStreamData(Pipeline*, bool*, int, qpdf_stream_decode_level_e, bool, bool)::<lambda(char const*, int)>*>
_M_create_node<const std::piecewise_construct_t&, std::tuple<long int const&>, std::tuple<> >
allocate_shared<Pl_RunLength, std::allocator<Pl_RunLength>, char const (&)[17], Pipeline*&, Pl_RunLength::action_e>
_M_not_empty_function<QPDF_Stream::<lambda()> >
get<1, char*, std::default_delete<char []> >
construct<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >, long int&, const std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > >&>
_M_access<QPDFJob::handleUnderOverlay(QPDF&)::<lambda(Pipeline&, const string&)> >
operator bool
_M_construct<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >
__addressof<std::allocator<std::_List_node<std::__cxx11::basic_string<char> > > >
read_char_from_FILE
fwprintf
uninitialized_copy<std::move_iterator<QPDFJob::PageSpec*>, QPDFJob::PageSpec*>
operator()<int>
get_allocator
__addressof<QPDFAnnotationObjectHelper>
_M_range_initialize<char const*>
getDefaultResources
__make_move_if_noexcept_iterator<char const*>
__make_move_if_noexcept_iterator<std::shared_ptr<char const> >
_M_not_empty_function<(anonymous namespace)::Handlers::setupPassword()::<lambda(char const*)> >
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<JSON::JSON_string, std::allocator<JSON::JSON_string>, (__gnu_cxx::_Lock_policy)2> > >
RandomDataProviderProvider
function<QPDFWriter::writeLinearized()::<lambda(QPDFObjectHandle&)> >
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_DCT, std::allocator<Pl_DCT>, (__gnu_cxx::_Lock_policy)2> > >
__shared_ptr<Pl_TIFFPredictor>
construct<SF_DCTDecode>
move<(anonymous namespace)::ArgParser::initOptionTables()::<lambda(const string&)>&>
_Construct<QPDFPageObjectHelper, QPDFPageObjectHelper>
_M_deallocate_buckets
_M_find_escape
forward<char&>
pair<std::_Rb_tree_iterator<long long int>&, bool&>
__rb_verify
getSubtype
destroy<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >
forward<std::shared_ptr<QPDFStreamFilter> (&)()>
move<std::__cxx11::list<std::__cxx11::basic_string<char> >&>
emplace_back<QPDFOutlineObjectHelper&>
hasOutlines
allowAccessibility
compare
_M_next
_M_swap
__alloc_on_move<std::allocator<QPDF::CHPageOffsetEntry> >
PagesConfig
__uninitialized_move_if_noexcept_a<std::__detail::_State<char>*, std::__detail::_State<char>*, std::allocator<std::__detail::_State<char> > >
operator!=<std::shared_ptr<QPDF>*>
shared_ptr<QPDF::CopiedStreamDataProvider>
PatternFinder
_Destroy<std::shared_ptr<JSON::JSON_value>*>
move<const std::allocator<JSON::JSON_array>&>
__destroy<QPDF::HSharedObjectEntry*>
__copy_move_b<QPDFObjectHandle*, QPDFObjectHandle*>
uninitialized_copy<std::move_iterator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
maybeFixWritePassword
_M_eat_escape_posix
~Pl_ASCII85Decoder
__shared_count<JSON::JSON_blob, std::allocator<JSON::JSON_blob>, std::function<void(Pipeline*)>&>
move<const std::allocator<Pl_DCT>&>
_Hashtable_alloc
_M_enable_shared_from_this_with<JSON::JSON_string>
use_count
construct<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::set<long unsigned int> > >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
__uninitialized_move_if_noexcept_a<QPDFFormFieldObjectHelper*, QPDFFormFieldObjectHelper*, std::allocator<QPDFFormFieldObjectHelper> >
getFlags
_M_insert_unique<int>
destroy<Pl_StdioFile>
id
_Sp_counted_ptr_inplace<char const (&)[4], Pipeline*&, unsigned int&, unsigned int&, int&, J_COLOR_SPACE&>
__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > > >
_M_enable_shared_from_this_with<SF_DCTDecode>
__uninitialized_move_if_noexcept_a<QPDFAnnotationObjectHelper*, QPDFAnnotationObjectHelper*, std::allocator<QPDFAnnotationObjectHelper> >
tuple<QPDF*, char const*>
_M_not_empty_function<QUtil::file_provider(const string&)::<lambda(Pipeline*)> >
move<QPDFJob::EncConfig*&>
shared_ptr<std::allocator<Pl_PNGFilter>, char const (&)[11], Pipeline*&, Pl_PNGFilter::action_e, unsigned int, unsigned int, unsigned int>
argOverlay
__shared_count<QPDFNameTreeObjectHelper, std::allocator<QPDFNameTreeObjectHelper>, QPDFObjectHandle&, QPDF&>
manualFinish
transform<char const*>
getValueAsUTF8
construct<JSON::JSON_blob, std::function<void(Pipeline*)>&>
beginPagesArray
_M_erase_aux
_M_access<QUtil::call_main_from_wmain(int, wchar_t const* const*, std::function<int(int, char const* const*)>)::<lambda(int, char**)>*>
optimizeImages
pushDiscardFilter
construct<Pl_QPDFTokenizer, char const (&)[13], QPDFObjectHandle::TokenFilter*, Pipeline*&>
__uninitialized_default_n_a<std::pair<char const*, int>*, long unsigned int, std::pair<char const*, int> >
operator()<(anonymous namespace)::Handlers*&, JSON>
HPageOffsetEntry
_M_insert_any_matcher_posix<false, true>
toUTF8
allocate_shared<Pl_String, std::allocator<Pl_String>, char const (&)[13], Pipeline*&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
getenv
allocate_shared<QUtil::FileCloser, std::allocator<QUtil::FileCloser>, _IO_FILE*>
_M_create_node<int>
getSize
load_vector_int<QPDF::HSharedObjectEntry, int>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<QPDF::ForeignStreamData, std::allocator<QPDF::ForeignStreamData>, (__gnu_cxx::_Lock_policy)2> > >
doJSONObjects
pair<std::_Rb_tree_node<std::pair<const QPDFObjGen, QPDFXRefEntry> >*&, std::_Rb_tree_node_base*&>
beginEncrypt
to_string
__addressof<const std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, true, true> >
saveToStandardOutput
_Bind<(anonymous namespace)::ArgParser*&, const std::_Placeholder<1>&>
_Bind<QPDFArgParser*&>
_M_initialize_dispatch<char const*>
__do_alloc_on_move<std::allocator<QPDF::HPageOffsetEntry> >
insert<std::_List_const_iterator<NNTreeIterator::PathElement> >
getArrayNItems
cend
~QPDFNumberTreeObjectHelper
construct<QPDF::ForeignStreamData, std::shared_ptr<QPDF::EncryptionParameters>&, std::shared_ptr<InputSource>&, QPDFObjGen, long long int, long unsigned int, QPDFObjectHandle&>
~basic_streambuf
externalizeInlineImages
getDestPage
__uninit_default_n<std::pair<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, int>*, long unsigned int>
forward<const NNTreeIterator::PathElement&>
__shared_ptr<std::allocator<SF_RunLengthDecode> >
_M_realloc_insert<QPDF::JSONReactor::state_e>
construct<Pl_ASCII85Decoder, char const (&)[15], Pipeline*&>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_ASCII85Decoder, std::allocator<Pl_ASCII85Decoder>, (__gnu_cxx::_Lock_policy)2> > >
empty
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSON::JSON_value> > >*&>
str_compare_nocase
~QPDFAnnotationObjectHelper
_M_copy<std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSON::JSON_value> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSON::JSON_value> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSON::JSON_value> > > >::_Alloc_node>
setvbuf
forward<std::_Rb_tree_iterator<long unsigned int>&>
_Destroy<std::__detail::_State<char> >
_GLOBAL__sub_I__ZN13QPDFTokenizer5resetEv
JSONParser
utf8_to_pdf_doc
_Destroy<std::shared_ptr<QPDFStreamFilter>*, std::shared_ptr<QPDFStreamFilter> >
_Find_first
__shared_count<Pl_String::Members*>
_M_create_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
writeJSONObject
allocate_shared<JSON::JSON_number, std::allocator<JSON::JSON_number>, long long int&>
function<(anonymous namespace)::Handlers::initHandlers()::<lambda(const string&)> >
construct<std::pair<const std::__cxx11::basic_string<char>, QPDFJob::RotationSpec>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
construct<QPDFJob::CopyAttachmentFrom, const QPDFJob::CopyAttachmentFrom&>
_Destroy<QPDFAnnotationObjectHelper>
__allocate_guarded<std::allocator<std::_Sp_counted_deleter<char const**, std::default_delete<char const* []>, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >
function<QPDFPageObjectHelper::getBleedBox(bool, bool)::<lambda()> >
__cxa_atexit
swap<long int>
basic_stringbuf
__uninitialized_copy_a<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >
move<std::shared_ptr<Pl_ASCII85Decoder>&>
_M_access<(anonymous namespace)::Handlers::setupInputFile()::<lambda(char const*)> >
construct<std::pair<int const, std::set<QPDFObjGen> >, const std::piecewise_construct_t&, std::tuple<int const&>, std::tuple<> >
uninitialized_copy<std::move_iterator<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*>, std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*>
allocate_shared<std::__detail::_NFA<std::__cxx11::regex_traits<char> >, std::allocator<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >, const std::locale&, std::regex_constants::syntax_option_type&>
_M_copy<std::_Rb_tree<QPDF::ObjUser, std::pair<const QPDF::ObjUser, std::set<QPDFObjGen> >, std::_Select1st<std::pair<const QPDF::ObjUser, std::set<QPDFObjGen> > >, std::less<QPDF::ObjUser>, std::allocator<std::pair<const QPDF::ObjUser, std::set<QPDFObjGen> > > >::_Reuse_or_alloc_node>
__shared_ptr<std::allocator<QPDFCrypto_gnutls> >
_S_maskbit
wcspbrk
operator!=<const (anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> >
__uninitialized_copy_a<std::move_iterator<QPDFObjGen*>, QPDFObjGen*, QPDFObjGen>
fastRead
_M_addref
file
function<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, false, true> >
move<(anonymous namespace)::Handlers::setupOutputFile()::<lambda(char const*)>&>
operator!=<QPDFJob::PageSpec*, std::vector<QPDFJob::PageSpec> >
swap<void (*)(const std::_Any_data&, const std::__cxx11::basic_string<char>&, bool&&)>
__uninitialized_move_if_noexcept_a<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > >
operator^=
__shared_count<Pl_Flate, std::allocator<Pl_Flate>, char const (&)[15], Pipeline*&, Pl_Flate::action_e>
_M_realloc_insert<QPDFFormFieldObjectHelper>
asNull
__copy_move_a<false, std::__cxx11::sub_match<char const*>*, std::__cxx11::sub_match<char const*>*>
__make_move_if_noexcept_iterator<QPDFJob::PageSpec>
_M_sub_count
function<(anonymous namespace)::Handlers::beginArray((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&)> >
function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, false, false> >
forward<long int&>
endEncrypt128bit
_Bind<QPDFArgParser*&, const std::_Placeholder<1>&>
move<(anonymous namespace)::Handlers::beginArray((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&)>&>
move<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, false, false>&>
copy<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >**, std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >**>
__shared_ptr<std::allocator<SF_FlateLzwDecode>, bool>
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<QPDFFileSpecObjectHelper> > >*&>
_M_enable_shared_from_this_with<QPDFLogger>
checkConfiguration
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, QPDFJob::RotationSpec> >*&, std::_Rb_tree_node_base*&>
move<std::vector<QPDF::HPageOffsetEntry>&>
pair<std::_Rb_tree_iterator<long long int>, bool>
_NFA
_M_access<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, true, true> >
_M_get_allocator
mem_fn<void(char const*, char const*), QPDF>
EVP_aes_128_ecb
pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
__shared_count<char const**, std::default_delete<char const* []> >
_M_realloc_insert<const Buffer&>
uninitialized_copy<std::move_iterator<long unsigned int*>, long unsigned int*>
destroy<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >
getKey
~QPDF_Bool
move<QPDFObjectHandle::StreamDataProvider*&>
wcsstr
getNextKid
copy<char const*, char*>
EVP_MD_CTX_free
registerProgressReporter
anyBadTokens
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<SF_FlateLzwDecode, std::allocator<SF_FlateLzwDecode>, (__gnu_cxx::_Lock_policy)2> > >
pair<char const (&)[4], char const (&)[9]>
initializeFromJson
_M_create_node<const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >
forward<char const*>
allocate_shared<JSONHandler, std::allocator<JSONHandler> >
__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char> >
_M_not_empty_function<(anonymous namespace)::Handlers::initHandlers()::<lambda(const string&)> >
operator!=<QPDFObject>
_M_access<(anonymous namespace)::Handlers::initHandlers()::<lambda(const string&)> >
get<1, unsigned char*, std::default_delete<unsigned char []> >
__uninit_default_n<std::pair<char const*, int>*, long unsigned int>
function<QPDFPageObjectHelper::forEachFormXObject(bool, std::function<void(QPDFObjectHandle&, QPDFObjectHandle&, const std::__cxx11::basic_string<char>&)>)::<lambda(QPDFObjectHandle)> >
__shared_ptr<QPDFArgParser::Members>
forward<std::_Rb_tree_node<std::pair<const QPDFObjGen, QPDF::ObjCache> >*&>
emplace_back<std::unique_ptr<char [], std::default_delete<char []> > >
__copy_move_backward_a<true, char*, char*>
doProcessOnce
__copy_move_b<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >*>
jpeg_CreateDecompress
_Construct<(anonymous namespace)::QPDFPageData, (anonymous namespace)::QPDFPageData>
same_file
malloc_info
_M_realloc_insert<QPDFJob::PageSpec>
__uninit_copy<const QPDFExc*, QPDFExc*>
shared_ptr<JSON::Members>
_M_make_range
getOffset
shared_ptr<QPDFNumberTreeObjectHelper::Members>
forward<std::_Rb_tree_node<std::pair<const QPDFObjGen, QPDFFormFieldObjectHelper> >*&>
forward<std::tuple<const QPDF::ObjUser&> >
deflateEnd
move<std::tuple<Buffer::Members*, std::default_delete<Buffer::Members> >&>
Pl_PNGFilter
argEncPositional
interpretCF
forward<char const (&)[13]>
_M_create_node<const std::pair<const QPDFObjGen, std::set<QPDF::ObjUser, std::less<QPDF::ObjUser>, std::allocator<QPDF::ObjUser> > >&>
function<QPDFJob::doUnderOverlayForPage(QPDF&, QPDFJob::UnderOverlay&, std::map<int, std::vector<int> >&, size_t, std::map<int, QPDFObjectHandle>&, std::vector<QPDFPageObjectHelper>&, QPDFPageObjectHelper&, bool)::<lambda(Pipeline&, const string&)> >
uninitialized_copy<std::move_iterator<QPDFPageObjectHelper*>, QPDFPageObjectHelper*>
isStreamOfType
_GLOBAL__sub_I__ZN10QPDFObject9doResolveEv
endPages
_GLOBAL__sub_I__ZN5QUtil13int_to_stringB5cxx11Exi
~QPDFEFStreamObjectHelper
_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int> > >
operator()<std::pair<long unsigned int const, QPDFObjectHandle>&>
upper_bound
allocator<std::_List_node<QPDFOutlineObjectHelper> >
setbuf
operator==<QPDF::CHSharedObjectEntry*>
operator==<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
init_buffer_source
~AddAttachment
getP
_Destroy<std::__cxx11::basic_string<char>*>
_M_create_node<const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, QPDFObjectHandle>&>
shared_ptr<QPDFAcroFormDocumentHelper::Members>
_Destroy<std::shared_ptr<JSON::JSON_value>*, std::shared_ptr<JSON::JSON_value> >
move_backward<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > > >
_M_destroy_nodes
_M_access<QPDFPageObjectHelper::getBleedBox(bool, bool)::<lambda()>*>
_Hash_node_base
_M_match
setOutputMemory
disableCBC
shared_ptr<std::allocator<JSON::JSON_array> >
SF_DCTDecode
JSONHandler
_M_access<(anonymous namespace)::ArgParser::initOptionTables()::<lambda()> >
is_ascii_printable
__invoke<void ((anonymous namespace)::Handlers::* const&)(JSON), (anonymous namespace)::Handlers*&, JSON>
_M_enable_shared_from_this_with<JSON::JSON_number>
function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, true, false> >
isDestroyed
beginEncrypt128bit
_Unchecked_reset
~_Executor
~SF_FlateLzwDecode
length
hash_V5
transform<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >
_M_next_bkt
__do_alloc_on_move<std::allocator<QPDFPageObjectHelper> >
binary_stdin
move<(anonymous namespace)::Handlers::setupOverlayFile()::<lambda(char const*)>&>
generateTextAppearance
destroy<std::pair<const QPDFObjGen, QPDFObjectHandle> >
~__weak_ptr
_M_dfs
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_RunLength, std::allocator<Pl_RunLength>, (__gnu_cxx::_Lock_policy)2> > >
convert
allocator<JSONHandler>
getBitsInt
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_AES_PDF, std::allocator<Pl_AES_PDF>, (__gnu_cxx::_Lock_policy)2> > >
emplace_back<long int&, const std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&>
emplace_back<long int&, const std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > >&>
operator==<const QPDF::HSharedObjectEntry*, std::vector<QPDF::HSharedObjectEntry> >
free
_M_access<std::_Bind<std::_Mem_fn<void (QPDFArgParser::*)(const std::__cxx11::basic_string<char>&)>(QPDFArgParser*, std::_Placeholder<1>)>*>
getCompressibleObjGens
pair<char const (&)[4], char const (&)[12]>
pair<std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> >, std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> > >
__copy_move_a2<false, std::__cxx11::sub_match<char const*>*, std::__cxx11::sub_match<char const*>*>
allocator<Pl_TIFFPredictor>
__uninit_copy<std::move_iterator<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*>, std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*>
crend
copy<std::move_iterator<long long int*>, long long int*>
__shared_count<(anonymous namespace)::InvalidInputSource*>
StringDecrypter
min<char*>
max<double>
_Destroy<QPDFOutlineObjectHelper*>
move<QPDFJob::PagesConfig*&>
_M_copy<std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::set<long unsigned int> > >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::set<long unsigned int> > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::set<long unsigned int> > > > >::_Alloc_node>
__niter_base<QPDFOutlineObjectHelper*>
dumpHPageOffset
collate
operator!=<(anonymous namespace)::QPDFPageData*>
destroy<long unsigned int>
addBare
_GLOBAL__sub_I__ZN8Pl_Flate17compression_levelE
pair<long unsigned int const&>
allocator<Buffer>
_M_access<QPDF_Stream::pipeStreamData(Pipeline*, bool*, int, qpdf_stream_decode_level_e, bool, bool)::<lambda(char const*, int)> >
allocator<Pl_DCT>
operator()<QPDFArgParser*&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&> >
to_int<long long int>
move<std::__shared_ptr<Pl_Buffer, (__gnu_cxx::_Lock_policy)2>&>
function<(anonymous namespace)::Handlers::setupUnderlayPassword()::<lambda(char const*)> >
_M_enable_shared_from_this_with<Pl_RunLength::Members>
~QPDF_Integer
__copy_move_a2<true, long unsigned int*, long unsigned int*>
ERR_get_error
inputFile
_Node_iterator_base
destroy<ContentNormalizer>
forward<char const (&)[9]>
appendItem
__advance<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, long int>
initializeVector
_M_disjunct
tuple<>
_GLOBAL__sub_I__ZN27QPDFPageLabelDocumentHelperC2ER4QPDF
__invoke_impl<void, std::_Mem_fn<void (QPDF::*)(char const*, char const*)>&, QPDF*, char const*&, char const*>
forward<double&>
flush
forward<void (QPDF::* const&)(std::shared_ptr<InputSource>, char const*)>
test
_M_insert_lookahead
bind<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)(const std::__cxx11::basic_string<char>&)>, (anonymous namespace)::ArgParser*&, const std::_Placeholder<1>&>
~QPDFEmbeddedFileDocumentHelper
writeOutfile
presentEOF
_M_create_node<const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&>
__uniq_ptr_impl
pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>
copy<__gnu_cxx::__normal_iterator<const std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >, __gnu_cxx::__normal_iterator<std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >
__shared_count<Pl_RunLength::Members*>
writeXRefTable
__uninitialized_move_if_noexcept_a<QPDFExc*, QPDFExc*, std::allocator<QPDFExc> >
__destroy<QPDFObjGen*>
generateAppearance
forward<std::__detail::_Node_iterator<std::pair<long unsigned int const, QPDFObjectHandle>, false, false> >
_M_is_ecma
SHA2_finalize
endEncrypt40bit
allocate_shared<Pl_Buffer, std::allocator<Pl_Buffer>, char const (&)[12]>
make_shared<SF_DCTDecode>
getMin
operator-<QPDF::HSharedObjectEntry*, std::vector<QPDF::HSharedObjectEntry> >
forward<std::shared_ptr<QPDFCrypto_gnutls> (&)()>
__do_alloc_on_move<std::allocator<std::_Rb_tree_node<std::__cxx11::basic_string<char> > > >
handleArgFileArguments
getRawDigest
_M_insert_character_class_matcher<false, true>
getVersionAsPDFVersion
createsOutput
qpdf_jpeg_error_mgr
__niter_base<QPDFParser::parser_state_e*>
__destroy<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*>
__uninitialized_copy_a<(anonymous namespace)::QPDFPageData*, (anonymous namespace)::QPDFPageData*, (anonymous namespace)::QPDFPageData>
_M_realloc_insert<char>
setStart
_GLOBAL__sub_I__ZN7QPDFJob6Config18checkConfigurationEv
_M_insert_unique<const std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> >*>
__destroy<std::pair<char const*, int>*>
__addressof<const (anonymous namespace)::Handlers::setupEmpty()::<lambda()> >
operator!=<std::__cxx11::regex_traits<char>::_RegexMask*>
__addressof<QPDF::HPageOffsetEntry>
construct<JSON, JSON>
__shared_ptr<std::allocator<Buffer>, long unsigned int>
_Construct<std::shared_ptr<char const>, std::shared_ptr<char const> >
copyForeignObject
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, false, true>*>
_M_emplace_hint_unique<const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >
__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >
handleData
__shared_count<Pl_OStream*>
move<const std::allocator<Pl_RunLength>&>
_Construct<QPDFOutlineObjectHelper, QPDFOutlineObjectHelper&>
~QPDFUsage
move<std::shared_ptr<QPDFFileSpecObjectHelper>&>
throwIfNull
emplace_back<QPDFParser::parser_state_e>
uninitialized_copy<const std::__detail::_State<char>*, std::__detail::_State<char>*>
longjmp
__cxa_throw
LastChar
convertIIDict
~FileCloser
SF_ASCII85Decode
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<SF_ASCIIHexDecode, std::allocator<SF_ASCIIHexDecode>, (__gnu_cxx::_Lock_policy)2> > >
isInlineImage
file_can_be_opened
log2
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, ClosedFileInputSource*> >*&>
getMessagePrefix
beginCopyAttachmentsFrom
to_ulonglong<long long int>
_M_not_empty_function<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, false, false> >
forward<std::_Rb_tree_iterator<QPDFObjGen>&>
__make_move_if_noexcept_iterator<char>
store
__destroy<std::__detail::_State<char>*>
is_delimiter
setupReplaceInput
__uninit_copy<__gnu_cxx::__normal_iterator<const QPDFObjectHandle*, std::vector<QPDFObjectHandle> >, QPDFObjectHandle*>
updateIfGreater
operator=<Pl_OStream>
Pl_ASCIIHexDecoder
_GLOBAL__sub_I__ZN11QPDF_StringC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_Destroy<__gnu_cxx::__normal_iterator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >
move<NNTreeIterator::PathElement&>
forward<void ((anonymous namespace)::ArgParser::* const&)()>
_Alloc_node
_M_enable_shared_from_this_with<JSON>
destroy<char const*>
make_shared<Pl_StdioFile, char const (&)[12], _IO_FILE*&>
~JSON_dictionary
operator==<std::shared_ptr<QPDFObjectHandle::TokenFilter>*>
~HPageOffset
ferror
destroy<std::pair<const std::__cxx11::basic_string<char>, QPDF*> >
ignoreItem
utf8_to_win_ansi
allocator
generateHintStream
move<(anonymous namespace)::Handlers::setupUnderlayPassword()::<lambda(char const*)>&>
~ProgressReporter
parseNumrange
getVersion
fopen_wrapper
allocator<NNTreeIterator::PathElement>
_M_insert_unique<std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> > >
_M_invoke
_M_hiword
addInvalidChoiceHandler
_M_enable_shared_from_this_with<Pl_AES_PDF>
ignoreXrefStreams
encode_winansi
shared_ptr<QPDFCrypto_gnutls>
getQPDF
__shared_count<QPDFAcroFormDocumentHelper::Members*>
shared_ptr<QPDFNameTreeObjectHelper::Members>
_M_translate
__distance<char*>
__uninitialized_copy_a<std::move_iterator<QPDFOutlineObjectHelper*>, QPDFOutlineObjectHelper*, QPDFOutlineObjectHelper>
parseArgs
move<const std::allocator<QPDFFileSpecObjectHelper>&>
processMemoryFile
_M_insert<QPDFObjectHandle&>
pair<std::_Rb_tree_node<std::pair<const QPDFObjGen, QPDFFormFieldObjectHelper> >*&, std::_Rb_tree_node_base*&>
isLossyCompression
_M_access<(anonymous namespace)::Handlers::beginDict((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&, JSON)>*>
allocate_shared<JSON::JSON_number, std::allocator<JSON::JSON_number>, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
getNamesByResourceType
move<std::shared_ptr<Pl_Buffer::Members>&>
destroy<JSON::JSON_dictionary>
getValueAsUInt
operator!=<char const*, std::vector<char, std::allocator<char> > >
uninitialized_copy<std::move_iterator<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*>, std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*>
allocator<NNTreeImpl>
destroy<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::set<long unsigned int> > > >
operator-<QPDFObjGen*, std::vector<QPDFObjGen> >
atol
allocate_shared<Pl_PNGFilter, std::allocator<Pl_PNGFilter>, char const (&)[11], Pipeline*&, Pl_PNGFilter::action_e, unsigned int, unsigned int, unsigned int>
destroy<(anonymous namespace)::QPDFPageData>
_Destroy<std::shared_ptr<JSON> >
removeKeyAndGetOld
checkLinearization
~QPDFCryptoImpl
check_user_password_V4
_Construct<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, const std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&>
construct<std::__cxx11::regex_traits<char>::_RegexMask, const std::__cxx11::regex_traits<char>::_RegexMask&>
cbegin
_AnyMatcher
fflush
construct<Buffer, long unsigned int&>
_M_insert_line_begin
getBool
_M_not_empty_function<std::_Bind<std::_Mem_fn<void (QPDF::*)(char const*, char const*)>(std::_Placeholder<1>, char const*, std::_Placeholder<2>)> >
__invoke_impl<void, void (QPDFArgParser::* const&)(const std::__cxx11::basic_string<char>&), QPDFArgParser*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
_M_construct_node<const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&>
_M_not_empty_function<(anonymous namespace)::Handlers::setupAddAttachmentFile()::<lambda(char const*)> >
__shared_ptr<std::allocator<SF_DCTDecode> >
jsonInput
~TokenFilter
_M_insert_unique<long long int const&>
__destroy<QPDFParser::parser_state_e*>
_M_access<(anonymous namespace)::Handlers::setupOverlayFile()::<lambda(char const*)>*>
getWarn
_M_realloc_insert<(anonymous namespace)::StackFrame>
__make_move_if_noexcept_iterator<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >
preserveUnreferenced
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_AES_PDF, std::allocator<Pl_AES_PDF>, (__gnu_cxx::_Lock_policy)2> > >
writeStringQDF
handleUnderOverlay
__uninit_copy<std::move_iterator<QPDFOutlineObjectHelper*>, QPDFOutlineObjectHelper*>
getRegisteredImpls
copy<std::move_iterator<int*>, int*>
__shared_count<QPDF, std::allocator<QPDF> >
__stack_chk_fail
getIntValueAsInt
getMediaBox
operator==<const std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*, std::vector<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >, std::allocator<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > > > >
move<const std::allocator<QPDFCrypto_openssl>&>
addChoicesToCompletions
__get_helper<1, std::default_delete<Buffer::Members> >
~FunctionProvider
uninitialized_copy<__gnu_cxx::__normal_iterator<const QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> >, QPDFOutlineObjectHelper*>
move<std::_Tuple_impl<1, std::shared_ptr<InputSource>, std::_Placeholder<2> >&>
forward<std::_Rb_tree_node<std::pair<int const, int> >*&>
__uninit_default_n<QPDF::CHPageOffsetEntry*, long unsigned int>
getObj
pair<const QPDFObjGen&>
nearbyint
operator!=<std::shared_ptr<Pipeline>*>
getGeneration
move<std::allocator<char>&>
__uninit_copy<std::move_iterator<std::shared_ptr<QPDFObjectHandle::TokenFilter>*>, std::shared_ptr<QPDFObjectHandle::TokenFilter>*>
reverse_iterator
~_Reuse_or_alloc_node
to_ulong<unsigned char>
get<0, std::_Placeholder<1>, std::shared_ptr<InputSource>, std::_Placeholder<2> >
destroy<Pl_String>
__shared_ptr<Pl_RC4>
setRadioButtonValue
_M_add_char
_M_access<QPDFJob::handleUnderOverlay(QPDF&)::<lambda(Pipeline&, const string&)>*>
__shared_ptr<std::allocator<JSON::JSON_dictionary> >
__copy_m<int>
allocate_shared<NNTreeIterator, std::allocator<NNTreeIterator>, NNTreeIterator>
swap<std::shared_ptr<QPDFStreamFilter> (*)(const std::_Any_data&)>
_M_not_empty_function<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)(JSON)>((anonymous namespace)::Handlers*, std::_Placeholder<1>)> >
construct<std::pair<const std::__cxx11::basic_string<char>, std::set<long unsigned int> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
__copy_m<(anonymous namespace)::QPDFPageData*, (anonymous namespace)::QPDFPageData*>
__uninitialized_move_if_noexcept_a<long long int*, long long int*, std::allocator<long long int> >
_M_emplace_hint_unique<const std::piecewise_construct_t&, std::tuple<long int const&>, std::tuple<> >
allocator<QUtil::FileCloser>
construct<std::shared_ptr<JSONHandler>, const std::shared_ptr<JSONHandler>&>
swap<QPDFJob::AttConfig*>
tuple<int>
__uninitialized_move_if_noexcept_a<(anonymous namespace)::StackFrame*, (anonymous namespace)::StackFrame*, std::allocator<(anonymous namespace)::StackFrame> >
__uninit_copy<const std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char>*>
pipePageContents
~PipelinePopper
_Head_base<long unsigned int>
construct<QPDFFileSpecObjectHelper, const QPDFObjectHandle&>
json
_M_expression_term<false, false>
_M_not_empty_function<QPDFPageObjectHelper::forEachImage(bool, std::function<void(QPDFObjectHandle&, QPDFObjectHandle&, const std::__cxx11::basic_string<char>&)>)::<lambda(QPDFObjectHandle)> >
operator!=<__gnu_cxx::__normal_iterator<std::shared_ptr<QPDFStreamFilter>*, std::vector<std::shared_ptr<QPDFStreamFilter> > > >
__shared_count<FileInputSource*>
construct<QPDF::JSONReactor::state_e, const QPDF::JSONReactor::state_e&>
__addressof<std::allocator<std::_Sp_counted_deleter<unsigned char*, std::default_delete<unsigned char []>, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >
_M_move_impl
getBitsSigned
increment
_M_create_node<const QPDFJob::AddAttachment&>
pair<std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, std::vector<QPDFObjectHandle> > >, std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, std::vector<QPDFObjectHandle> > > >
allocator<Pl_Buffer>
construct<NNTreeImpl, (anonymous namespace)::NumberTreeDetails&, QPDF&, QPDFObjectHandle&, bool&>
__shared_count<QUtil::FileCloser, std::allocator<QUtil::FileCloser>, _IO_FILE*>
getImages
setImmediateCopyFrom
argEnd128BitEncryption
as<QPDF_String>
_M_root
selectOptionTable
_M_emplace_hint_unique<const std::piecewise_construct_t&, std::tuple<long unsigned int const&>, std::tuple<> >
__shared_ptr<std::allocator<QPDFCrypto_openssl> >
__destroy<__gnu_cxx::__normal_iterator<QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> > >
modf
_Bind
flush_decode
getValueAsOperator
__addressof<const (anonymous namespace)::ImageOptimizer::evaluate(const string&)::<lambda(Pipeline&, const string&)> >
calculateHSharedObject
move<std::__shared_ptr<QPDFWriter::PipelinePopper, (__gnu_cxx::_Lock_policy)2>&>
operator==<Buffer>
shared_ptr<(anonymous namespace)::FunctionProvider>
getLinearizedParts
~Pl_String
_M_enable_shared_from_this_with<QPDFNumberTreeObjectHelper>
__shared_ptr<std::allocator<JSON::JSON_number>, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
__destroy<std::shared_ptr<Pipeline>*>
move<QPDFAcroFormDocumentHelper*&>
destroy<QPDFObjectHandle>
shared_ptr<std::allocator<Pl_Flate>, char const (&)[16], Pipeline*&, Pl_Flate::action_e>
is_utf16
makeReal
__uninit_copy<std::move_iterator<char const**>, char const**>
_M_insert_repeat
_M_access<QPDFJob::writeOutfile(QPDF&)::<lambda(Pipeline&, const string&)>*>
getTrimmedUserPassword
swap<QPDFValue*>
shared_ptr<std::allocator<Pl_DCT>, char const (&)[11], Pipeline*&>
_M_insert<const QPDFObjectHandle&>
__shared_count<QPDFNameTreeObjectHelper, std::allocator<QPDFNameTreeObjectHelper>, QPDFNameTreeObjectHelper&>
makePipeline
deallocate
_M_create_node<int const&>
last
getFormXObjectForPage
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, QPDF*> >*&, std::_Rb_tree_node_base*&>
__uninit_copy<std::move_iterator<std::shared_ptr<JSON::JSON_value>*>, std::shared_ptr<JSON::JSON_value>*>
__builtin_strstr
construct<std::pair<const QPDFObjGen, std::set<QPDF::ObjUser> >, const std::piecewise_construct_t&, std::tuple<QPDFObjGen&&>, std::tuple<> >
InlineImageTracker
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_RunLength, std::allocator<Pl_RunLength>, (__gnu_cxx::_Lock_policy)2> > >
_S_minimum
__shared_ptr<std::allocator<Pl_DCT>, char const (&)[11], Pipeline*&>
_M_deallocate_nodes
ceil
move<(anonymous namespace)::Handlers::initHandlers()::<lambda(const string&)>&>
get<1, std::_Placeholder<1>, std::shared_ptr<InputSource>, std::_Placeholder<2> >
uninitialized_copy<__gnu_cxx::__normal_iterator<const QPDFExc*, std::vector<QPDFExc> >, QPDFExc*>
~EncryptionParameters
assertType
construct<QPDFWriter::PipelinePopper, QPDFWriter*>
function<QPDFJob::writeOutfile(QPDF&)::<lambda(Pipeline&, const string&)> >
construct<std::pair<const QPDFObjGen, int>, std::pair<QPDFObjGen, int> >
__addressof<std::allocator<std::_List_node<QPDFObjectHandle> > >
__shared_count<QPDFCrypto_openssl, std::allocator<QPDFCrypto_openssl> >
SF_Crypt
__addressof<const QPDFPageObjectHelper::getFormXObjects()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
rbegin
createEFStream
set
testJsonSchema
selectMainOptionTable
function<(anonymous namespace)::Handlers::addBare((anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&, const string&)> >
~QPDF_Real
move<std::__shared_ptr<unsigned char, (__gnu_cxx::_Lock_policy)2>&>
pushEncryptionFilter
lower_bound
isUnresolved
construct<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<QPDFFileSpecObjectHelper> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
_M_default_append
emplace_back<(anonymous namespace)::QPDFPageData>
readLine
wcsncmp
operator==<std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> > >
QPDF_InlineImage
_Destroy<int*, int>
_M_move_nodes
_Tuple_impl<std::shared_ptr<InputSource>&, const std::_Placeholder<2>&>
~SF_ASCIIHexDecode
__addressof<std::shared_ptr<Pipeline> >
_M_insert_any_matcher_ecma<false, false>
_M_do_xor
construct<JSON::JSON_bool, bool&>
addPageAt
_M_access<QPDFPageObjectHelper::getCropBox(bool, bool)::<lambda()>*>
move<std::__shared_ptr<QPDFJob::UOConfig, (__gnu_cxx::_Lock_policy)2>&>
__uninit_copy<std::move_iterator<Buffer*>, Buffer*>
_M_enable_shared_from_this_with<QPDFEFStreamObjectHelper::Members>
__uninit_copy<std::move_iterator<std::unique_ptr<char []>*>, std::unique_ptr<char []>*>
~UnderOverlay
setPCLm
os_wrapper
__uninit_copy<__gnu_cxx::__normal_iterator<const std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*, std::vector<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::allocator<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > > >, std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*>
SHA2_init
__shared_ptr<(anonymous namespace)::ContentProvider>
construct<std::shared_ptr<char const>, std::shared_ptr<char const> >
shared_ptr<std::allocator<JSON::JSON_number>, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
move<std::_Tuple_impl<1, char const*, std::_Placeholder<2> >&>
move<std::unique_ptr<Buffer::Members>&>
_M_create_node<const std::piecewise_construct_t&, std::tuple<const QPDFObjGen&>, std::tuple<> >
operator!=<std::shared_ptr<QPDFStreamFilter>*>
append
move<std::pair<char, char>&>
make_shared<JSON::JSON_array>
_M_access<JSONHandler::handle(const string&, JSON)::<lambda(JSON)>*>
json_schema
operator()<(anonymous namespace)::Handlers*&, std::tuple<JSON&&> >
shared_ptr<std::allocator<Pl_StdioFile>, char const (&)[12], _IO_FILE*&>
removeEmbeddedFile
operator()<JSON>
__shared_count<Pl_Buffer*>
putwchar
parse_numrange
_Destroy<QPDFOutlineObjectHelper*, QPDFOutlineObjectHelper>
move<std::shared_ptr<Pl_DCT>&>
_M_construct_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
beginRemoveAttachmentArray
operator-<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<JSONHandler, std::allocator<JSONHandler>, (__gnu_cxx::_Lock_policy)2> > >
_M_access<(anonymous namespace)::Handlers::beginEncrypt(JSON)::<lambda(const string&, JSON)>*>
_M_head
allocate_shared<ContentNormalizer, std::allocator<ContentNormalizer> >
construct<QPDFObjectHandle, QPDFObjectHandle>
uninitialized_copy<const std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char>*>
pipeForeignStreamData
~StringDecrypter
construct<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
lengthNextN
_M_add_collate_element
makeArray
forward<std::tuple<QPDFObjGen&&> >
forward<char const (&)[17]>
_M_add_equivalence_class
swap<char>
forward<std::_Mem_fn<void (QPDF::*)(char const*, char const*)>&>
SF_RunLengthDecode
exp
_M_access<(anonymous namespace)::Handlers::setupAddAttachmentFile()::<lambda(char const*)> >
forward<Buffer::Members*&>
addPositional
allocator<JSON::JSON_number>
getUIntValue
_Construct<QPDF::HPageOffsetEntry, QPDF::HPageOffsetEntry>
move<FileInputSource*&>
arrayStart
makeDictionary
move<(anonymous namespace)::ImageOptimizer::evaluate(const string&)::<lambda(Pipeline&, const string&)>&>
operator delete []
shared_ptr<SF_ASCIIHexDecode>
_M_get_pointer
~QPDFOutlineDocumentHelper
QPDF_Null
__shared_count<char*, std::default_delete<char []> >
_M_insert<long int>
_M_distance
__unguarded_partition<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_less_iter>
__shared_count<QPDFNumberTreeObjectHelper, std::allocator<QPDFNumberTreeObjectHelper>, QPDFObjectHandle, QPDF&>
~_List_base
setNeedAppearances
__addressof<const (anonymous namespace)::Handlers::ignoreItem()::<lambda(const string&, JSON)> >
~MD5
operator-<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >
_Hash_code_base
_Destroy<QPDFFormFieldObjectHelper>
QPDFExc
__shared_count<char const**, std::default_delete<char const* []>, std::allocator<void> >
construct<Pl_Flate, char const (&)[16], Pipeline*&, Pl_Flate::action_e>
get<0, int&&>
allocate_shared<QPDFNameTreeObjectHelper, std::allocator<QPDFNameTreeObjectHelper>, QPDFNameTreeObjectHelper&>
_M_insert_any_matcher_ecma<true, true>
_M_move_assign
forward<QPDFJob::PageSpec>
_M_realloc_insert<QPDFAnnotationObjectHelper>
unparseResolved
move<std::_Mem_fn<void (QPDFArgParser::*)(const std::__cxx11::basic_string<char>&)>&>
pair<std::_Rb_tree_iterator<int>, std::_Rb_tree_iterator<int> >
_M_do_and
__dynamic_cast
setV5EncryptionParameters
forward<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)(JSON)> >
stat
destroy<QPDFObjGen>
forward<const std::pair<char, char>&>
setR4EncryptionParametersInsecure
_Tuple_impl<QPDF*, char const*>
construct<QPDFPageObjectHelper, const QPDFPageObjectHelper&>
destroy<JSON::JSON_null>
__destroy<std::__cxx11::basic_string<char>*>
construct<int, int>
SHA2_digest
_M_copy<std::_Rb_tree<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>, std::_Identity<std::__cxx11::basic_string<char> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::__cxx11::basic_string<char> > >::_Alloc_node>
to_int<long int>
_GLOBAL__sub_I__ZN7QPDFJob18initializeFromArgvEPKPKcS1_
__get_helper<0, const QPDFObjGen&>
setf
_M_not_empty_function<QUtil::read_lines_from_file(char const*, bool)::<lambda(char&)> >
operator<<
move<std::__cxx11::list<NNTreeIterator::PathElement>&>
emplace_back<QPDF::CHSharedObjectEntry>
operator><char, std::char_traits<char>, std::allocator<char> >
construct<char const*, char const* const&>
_M_not_empty_function<QPDFWriter::writeLinearized()::<lambda(QPDFObjectHandle&)> >
__shared_count<Pl_QPDFTokenizer, std::allocator<Pl_QPDFTokenizer>, char const (&)[11], ContentNormalizer*, Pipeline*&>
_M_deallocate
finish
strchr
mktime
deflateInit_
__uninit_copy<(anonymous namespace)::QPDFPageData*, (anonymous namespace)::QPDFPageData*>
to_size<long long int>
~StackFrame
_Tuple_impl<char const*&, const std::_Placeholder<2>&>
move<QPDFJob::addAttachments(QPDF&)::<lambda(Pipeline&, const string&)>&>
_M_access<QUtil::read_lines_from_file(std::istream&, bool)::<lambda(char&)> >
operator!=<QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> >
FunctionProvider
JSON_bool
construct<std::pair<const QPDFObjGen, QPDFXRefEntry>, const std::pair<const QPDFObjGen, QPDFXRefEntry>&>
_M_not_empty_function<(anonymous namespace)::Handlers::setupOutputFile()::<lambda(char const*)> >
_M_enable_shared_from_this_with<Pl_LZWDecoder>
_M_insert_accept
_M_realloc_insert<int>
_M_enable_shared_from_this_with<SF_FlateLzwDecode>
~allocator
_M_construct_node<const std::piecewise_construct_t&, std::tuple<long long unsigned int const&>, std::tuple<> >
construct<std::shared_ptr<QPDF>, const std::shared_ptr<QPDF>&>
__shared_ptr<std::allocator<Pl_RunLength>, char const (&)[17], Pipeline*&, Pl_RunLength::action_e>
copy<__gnu_cxx::__normal_iterator<const QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> >, __gnu_cxx::__normal_iterator<QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> > >
_M_not_empty_function<std::shared_ptr<QPDFCrypto_openssl>()>
addNumberHandler
__shared_ptr<QPDFLogger::Members>
__shared_ptr<QPDFNumberTreeObjectHelper::Members>
getKeyIfDict
front
__concurrence_lock_error
_M_insert<std::shared_ptr<Pipeline> >
__uninit_copy<std::move_iterator<QPDFObjGen*>, QPDFObjGen*>
~Pl_AES_PDF
destroy<std::pair<const std::__cxx11::basic_string<char>, QPDFArgParser::HelpTopic> >
_M_access<(anonymous namespace)::Handlers::setupInputFile()::<lambda(char const*)>*>
destroy<std::pair<const std::__cxx11::basic_string<char>, std::vector<QPDFObjectHandle> > >
getArrayItem
__uninitialized_copy_a<std::move_iterator<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*>, std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*, std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > >
invalidateCache
setItem
endPagesArray
setbase
reverse
hasPageLabels
setPipeline
fabs
_M_realloc_insert<long int&, const std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > >&>
_Head_base<Buffer::Members*&>
_Construct<QPDF::HPageOffsetEntry>
shared_ptr<std::allocator<Pl_DCT>, char const (&)[4], Pipeline*&, unsigned int&, unsigned int&, int&, J_COLOR_SPACE&>
persistAcrossFinish
get<0, bool*, std::default_delete<bool []> >
UnderOverlay
move<std::vector<QPDF::CHPageOffsetEntry>&>
fwrite
forward<const std::pair<const QPDF::ObjUser, std::set<QPDFObjGen> >&>
div
_Tuple_impl<std::__cxx11::basic_string<char> >
registerStreamFilter
__uninitialized_move_if_noexcept_a<std::shared_ptr<QPDFStreamFilter>*, std::shared_ptr<QPDFStreamFilter>*, std::allocator<std::shared_ptr<QPDFStreamFilter> > >
suffix
move<Pipeline*&>
__copy_m<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >*>
swap<Pl_Buffer::Members*>
swap<QPDFFileSpecObjectHelper*>
_M_add_reference
destroy
destroy<std::pair<long unsigned int const, QPDFObjectHandle> >
move<std::shared_ptr<SF_ASCII85Decode>&>
wcscpy
_M_clone_node<std::_Rb_tree<long unsigned int, long unsigned int, std::_Identity<long unsigned int>, std::less<long unsigned int>, std::allocator<long unsigned int> >::_Alloc_node>
move<std::shared_ptr<Pl_OStream>&>
win_ansi_to_utf8
__normal_iterator<char*>
_M_insert<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
_Destroy<std::__cxx11::sub_match<char const*>*>
argEnd40BitEncryption
_M_deallocate_map
__addressof<std::allocator<std::_List_node<QPDFJob::CopyAttachmentFrom> > >
~SparseOHArray
forward<const QPDFObjGen&>
argCompletionBash
registerImpl_internal<QPDFCrypto_openssl>
creationdate
pair<char const (&)[7], QPDF_Stream::<lambda()> >
forward<Pl_PNGFilter::action_e>
adjustAESStreamLength
operator()<std::pair<long long int, QPDFObjectHandle>&>
isEncrypted
__invoke<void ((anonymous namespace)::Handlers::* const&)(), (anonymous namespace)::Handlers*&>
doInspection
_Bind<(anonymous namespace)::ArgParser*&>
inHexstring2nd
_M_length
QPDFSystemError
forward<QPDFObjGen&&>
as<QPDF_Real>
doJSONObject
__shared_ptr<(anonymous namespace)::CoalesceProvider>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_QPDFTokenizer, std::allocator<Pl_QPDFTokenizer>, (__gnu_cxx::_Lock_policy)2> > >
__addressof<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >
_Tuple_impl<char*&, std::default_delete<char []> >
__invoke_impl<void, std::_Mem_fn<void (QPDFArgParser::*)()>&, QPDFArgParser*&>
_Tuple_impl<QPDF::ObjUser>
operator!=<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*>
_Tuple_impl<char const*>
__shared_ptr<QPDFCrypto_openssl>
RandomDataProvider
to_uchar<int>
getKeys
_M_h2
__find_if<__gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, __gnu_cxx::__ops::_Iter_equals_val<const std::__cxx11::basic_string<char> > >
__do_alloc_on_move<std::allocator<std::__detail::_Hash_node<std::pair<long unsigned int const, QPDFObjectHandle>, false> > >
_M_access<QUtil::read_lines_from_file(FILE*, bool)::<lambda(char&)>*>
_M_access<QPDFJob::maybeFixWritePassword(int, std::__cxx11::string&)::<lambda(Pipeline&, const string&)>*>
getParent
_M_initialize_dispatch<std::_List_const_iterator<NNTreeIterator::PathElement> >
to_char_type
operator=<std::shared_ptr<QPDFCrypto_gnutls> (&)()>
disconnect
swap<void (*)(const std::_Any_data&, const std::__cxx11::basic_string<char>&)>
make_shared<Pl_LZWDecoder, char const (&)[11], Pipeline*&, bool&>
move<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, false, false>&>
_M_construct_node<const QPDF::ObjUser&>
_M_getdata
FileCloser
__uninitialized_copy_a<std::move_iterator<(anonymous namespace)::StackFrame*>, (anonymous namespace)::StackFrame*, (anonymous namespace)::StackFrame>
__shared_ptr<std::allocator<Pl_PNGFilter>, char const (&)[11], Pipeline*&, Pl_PNGFilter::action_e, unsigned int, unsigned int, unsigned int>
_Construct<QPDF::CHSharedObjectEntry, QPDF::CHSharedObjectEntry>
__shared_ptr<QPDFJob::UOConfig>
_Destroy<long long int*>
asReal
destroy<(anonymous namespace)::SF_Crypt>
forward<QPDFObjGen>
make_pair<QPDFObjGen&, int&>
pair<std::_Rb_tree_node<std::pair<int const, std::set<QPDFObjGen> > >*&, std::_Rb_tree_node_base*&>
top
construct<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >, std::__detail::_StateSeq<std::__cxx11::regex_traits<char> > >
__make_move_if_noexcept_iterator<long unsigned int>
move<int (*&)(const std::_Any_data&, int&&, char const* const*&&)>
getLinearizationOffset
_M_insert_<const std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >&, std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >::_Alloc_node>
~RC4
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_RC4, std::allocator<Pl_RC4>, (__gnu_cxx::_Lock_policy)2> > >
destroy<QPDFJob::PageSpec>
__invoke<void (QPDFArgParser::* const&)(), QPDFArgParser*&>
_GLOBAL__sub_I__ZN10QPDF_ArrayC2ERKSt6vectorI16QPDFObjectHandleSaIS1_EE
generateAppearancesIfNeeded
EVP_md5
swap<Pl_StdioFile*>
move<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)(JSON)>((anonymous namespace)::Handlers*, std::_Placeholder<1>)>&>
__shared_ptr<JSON::JSON_blob>
uninitialized_copy<std::move_iterator<long long int*>, long long int*>
__uninitialized_move_if_noexcept_a<std::__cxx11::basic_string<char>*, std::__cxx11::basic_string<char>*, std::allocator<std::__cxx11::basic_string<char> > >
pair<std::_Rb_tree_node<std::pair<int const, QPDFObjectHandle> >*&, std::_Rb_tree_node_base*&>
function<(anonymous namespace)::ImageOptimizer::evaluate(const string&)::<lambda(Pipeline&, const string&)> >
compute_encryption_key_from_password
operator()<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, char>
__shared_count<NNTreeImpl, std::allocator<NNTreeImpl>, (anonymous namespace)::NumberTreeDetails&, QPDF&, QPDFObjectHandle&, bool&>
_GLOBAL__sub_I__ZN15QPDF_UnresolvedC2EP4QPDFRK10QPDFObjGen
doIfVerbose
_M_enable_shared_from_this_with<QPDFCryptoProvider::Members>
_M_access<QPDFPageObjectHelper::getTrimBox(bool, bool)::<lambda()> >
~_ReuseOrAllocNode
destroy<Pl_Buffer>
_M_get_insert_unique_pos
getFilterOnWrite
hex
allocator<std::__detail::_Hash_node<std::pair<long unsigned int const, QPDFObjectHandle>, false> >
__copy_m<char const*>
_M_create_node<QPDFOutlineObjectHelper&>
operator-<std::shared_ptr<QPDFStreamFilter>*, std::vector<std::shared_ptr<QPDFStreamFilter> > >
operator()<const QPDF::ObjUser&>
_Destroy<std::shared_ptr<QPDFObjectHandle::TokenFilter>*, std::shared_ptr<QPDFObjectHandle::TokenFilter> >
newInteger
operator-<QPDF::JSONReactor::state_e*, std::vector<QPDF::JSONReactor::state_e> >
__shared_count<Pl_StdioFile, std::allocator<Pl_StdioFile>, char const (&)[12], _IO_FILE*&>
rdstate
copy<(anonymous namespace)::QPDFPageData*, (anonymous namespace)::QPDFPageData*>
get<0, unsigned char*, std::default_delete<unsigned char []> >
__shared_ptr<std::allocator<NNTreeIterator>, NNTreeIterator>
getResourceNames
make_unique<char []>
QPDFCryptoProvider
__uninitialized_move_if_noexcept_a<QPDFPageObjectHelper*, QPDFPageObjectHelper*, std::allocator<QPDFPageObjectHelper> >
~QPDF
_GLOBAL__sub_I__ZN17BufferInputSourceC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP6Bufferb
encode_pdfdoc
construct<std::pair<const QPDFObjGen, std::set<QPDF::ObjUser> >, const std::piecewise_construct_t&, std::tuple<const QPDFObjGen&>, std::tuple<> >
_M_access<QPDFJob::writeOutfile(QPDF&)::<lambda(Pipeline&, const string&)> >
shared_ptr<QPDFJob::Config>
__shared_count<QPDFWriter::Members*>
prefix
_Sp_counted_ptr_inplace<bool&>
__shared_ptr<std::allocator<Buffer>, long unsigned int&>
logb
_M_realloc_insert<const QPDFExc&>
allocate_shared<SF_FlateLzwDecode, std::allocator<SF_FlateLzwDecode>, bool>
allocator<SF_DCTDecode>
move<QPDFCryptoImpl*&>
_M_access<QPDFJob::addAttachments(QPDF&)::<lambda(Pipeline&, const string&)>*>
compareKeyKid
shared_ptr<QPDFCrypto_openssl>
operator!=<Buffer*>
make_shared<QPDFCrypto_openssl>
_M_construct_node<long long int const&>
~NNTreeDetails
_M_insert<const std::shared_ptr<Pipeline>&>
move<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*&>
make_shared<Pl_OStream, char const (&)[7], std::basic_ostream<char, std::char_traits<char> >&>
destroy<QPDF::ObjUser>
__shared_count<QPDF_Destroyed*>
_M_create_node<long unsigned int const&>
destroy<std::pair<long long unsigned int const, std::set<QPDFObjGen> > >
__check_facet<std::ctype<char> >
_Destroy<std::shared_ptr<char const>*>
getCropBox
advance<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, long int>
check
ContentNormalizer
get<1, char**, std::default_delete<char* []> >
operator!=<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*>
forward<Buffer::Members*>
strerror
_M_inc_size
pair<std::_Rb_tree_node<std::pair<int const, int> >*&, std::_Rb_tree_node_base*&>
swap<void (*)(const std::_Any_data&)>
emplace_back<QPDF::HPageOffsetEntry>
_M_access<QPDFJob::maybeFixWritePassword(int, std::__cxx11::string&)::<lambda(Pipeline&, const string&)> >
__builtin_memmove
getRenumberedObjGen
_M_assertion
allocator<Pl_LZWDecoder>
getEmbeddedFiles
__alloc_on_move<std::allocator<std::__cxx11::basic_string<char> > >
__min_element<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__ops::_Iter_less_iter>
swap<JSON*>
checkSchemaInternal
is_iso_latin1_printable
inNameHex2
_Sp_counted_ptr_inplace
destroy<QPDF::HSharedObjectEntry>
emplace_back<std::pair<char, char> >
_M_realloc_insert<long unsigned int const&>
_Head_base<std::default_delete<Buffer::Members> >
operator()<std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&> >
fread
ungetc
forward<std::_Rb_tree_iterator<int>&>
__niter_base<(anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> >
get<2, std::_Placeholder<1>, std::shared_ptr<InputSource>, std::_Placeholder<2> >
getDefaultAppearance
_M_not_empty_function<QPDFPageObjectHelper::getTrimBox(bool, bool)::<lambda()> >
_M_insert_word_bound
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<SF_DCTDecode, std::allocator<SF_DCTDecode>, (__gnu_cxx::_Lock_policy)2> > >
uninitialized_copy<std::move_iterator<QPDFFormFieldObjectHelper*>, QPDFFormFieldObjectHelper*>
__destroy<double*>
argsLeft
~_Sp_counted_base
getValueAsInlineImage
find<__gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >, std::__cxx11::basic_string<char> >
allocator<JSON::JSON_array>
_Destroy<QPDFJob::PageSpec>
forward<std::_Rb_tree_iterator<std::pair<const QPDFObjGen, std::__cxx11::basic_string<char> > > >
regex_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >, char, std::__cxx11::regex_traits<char> >
_State_info
argCopyAttachmentsFrom
addressof<QPDFObjectHandle>
operator==<char>
_M_sync
shared_ptr<JSON::JSON_number>
localeconv
move<QPDFFormFieldObjectHelper&>
_M_construct
SF_FlateLzwDecode
_M_construct_node<int>
encodeFile
uninitialized_copy<std::move_iterator<QPDF::JSONReactor::state_e*>, QPDF::JSONReactor::state_e*>
value_comp
_Bind<const std::_Placeholder<1>&, char const*&, const std::_Placeholder<2>&>
_Destroy<QPDFOutlineObjectHelper>
forward<std::tuple<long long unsigned int const&> >
__niter_base<QPDFObjectHandle*, std::vector<QPDFObjectHandle> >
showNpages
doCheck
__shared_count<QPDFOutlineObjectHelper::Members*>
__uninit_copy<QPDFAnnotationObjectHelper*, QPDFAnnotationObjectHelper*>
CHSharedObject
operator==<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*>
rename_file
function<(anonymous namespace)::Handlers::setupUnderlayFile()::<lambda(char const*)> >
normalizeName
_M_not_empty_function<QPDFJob::doSplitPages(QPDF&, bool&)::<lambda(Pipeline&, const string&)> >
__uninit_copy<std::move_iterator<(anonymous namespace)::JSONParser::parser_state_e*>, (anonymous namespace)::JSONParser::parser_state_e*>
construct<JSON::JSON_array>
uninitialized_copy<std::move_iterator<std::__cxx11::sub_match<char const*>*>, std::__cxx11::sub_match<char const*>*>
EVP_EncryptUpdate
move<std::_Bind<std::_Mem_fn<void (QPDFArgParser::*)()>(QPDFArgParser*)>&>
getDecodePipeline
registerArg
allocator<ContentNormalizer>
global
atan
__addressof<const std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, true, true> >
__addressof<std::shared_ptr<QPDF> >
gnutls_cipher_encrypt2
__shared_count<QPDFFileSpecObjectHelper, std::allocator<QPDFFileSpecObjectHelper>, const QPDFObjectHandle&>
setupPagesFile
function<(anonymous namespace)::Handlers::setupPassword()::<lambda(char const*)> >
construct<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> >, const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::function<std::shared_ptr<QPDFStreamFilter>()> >&>
basic_regex
forward<std::_Rb_tree_node<std::pair<long long unsigned int const, std::set<QPDFObjGen> > >*&>
__niter_base<std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >
function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, true, true> >
_M_alternative
getRawValue
_M_check_len
getNeedAppearances
uninitialized_copy<std::move_iterator<std::shared_ptr<QPDF>*>, std::shared_ptr<QPDF>*>
make_shared<QUtil::FileCloser, _IO_FILE*>
make_shared<Pl_OStream, char const (&)[13], std::basic_ostream<char, std::char_traits<char> >&>
_M_do_sanitize
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<QPDF, std::allocator<QPDF>, (__gnu_cxx::_Lock_policy)2> > >
_M_enable_shared_from_this_with<Pl_StdioFile::Members>
allocate_shared<Pl_DCT, std::allocator<Pl_DCT>, char const (&)[4], Pipeline*&, unsigned int&, unsigned int&, int&, J_COLOR_SPACE&>
job_json_schema_v1
aitems
showLinearization
_GLOBAL__sub_I__ZN8Pl_Count7MembersC2Ev
forward<QPDFObjectHandle>
reserveObjects
sinh
construct<std::pair<const QPDFObjGen, QPDFObjectHandle>, const std::piecewise_construct_t&, std::tuple<const QPDFObjGen&>, std::tuple<> >
__addressof<const (anonymous namespace)::ArgParser::initOptionTables()::<lambda()> >
get<0, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
construct<QPDFFormFieldObjectHelper, QPDFFormFieldObjectHelper>
argJobJsonHelp
_M_access<(anonymous namespace)::StreamBlobProvider*>
shared_ptr<FileInputSource>
allowPrintHighRes
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<JSON::JSON_array, std::allocator<JSON::JSON_array>, (__gnu_cxx::_Lock_policy)2> > >
__destroy<(anonymous namespace)::JSONParser::parser_state_e*>
term_buffer_source
~QPDFNameTreeObjectHelper
move<QPDFObjectHandle*&>
_M_remove_reference
isPushbutton
_M_bucket_begin
basic_ostringstream
getNumericValue
move<std::__shared_ptr<QPDFAcroFormDocumentHelper, (__gnu_cxx::_Lock_policy)2>&>
setStaticAesIV
operator==<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >, std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >&, std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >*>
resetLimits
__invoke_impl<void, void ((anonymous namespace)::ArgParser::* const&)(), (anonymous namespace)::ArgParser*&>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<JSON::JSON_number, std::allocator<JSON::JSON_number>, (__gnu_cxx::_Lock_policy)2> > >
_M_enable_shared_from_this_with<QPDFValue>
__shared_count<QPDFValue*>
__uninitialized_copy_a<std::move_iterator<QPDFJob::PageSpec*>, QPDFJob::PageSpec*, QPDFJob::PageSpec>
erf
construct<std::pair<const QPDFObjGen, QPDFXRefEntry>, const std::piecewise_construct_t&, std::tuple<QPDFObjGen&&>, std::tuple<> >
setEncryptionParametersInternal
getLabelsForPageRange
endCopyAttachmentsFromArray
_Head_base<char*&>
replaceEmbeddedFile
__miter_base<(anonymous namespace)::QPDFPageData*>
__shared_count<NNTreeImpl, std::allocator<NNTreeImpl>, (anonymous namespace)::NameTreeDetails&, QPDF&, QPDFObjectHandle&, bool&>
function<QPDFJob::handleTransformations(QPDF&)::<lambda(Pipeline&, const string&)> >
~__shared_ptr
forward<Pipeline* const&>
filterAsContents
_M_do_to_ullong
_Destroy<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*, std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > >
operator==<const std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >
forward<(anonymous namespace)::NumberTreeDetails&>
__uninitialized_copy_a<int*, int*, int>
_Base_bitset
_M_handle_subexpr_lookahead
__shared_count<ClosedFileInputSource*>
emplace_back<QPDF::JSONReactor::state_e>
forward<char const (&)[12]>
getPageImages
move<std::__shared_ptr<QPDFNameTreeObjectHelper, (__gnu_cxx::_Lock_policy)2>&>
~HPageOffsetEntry
~QPDF_InlineImage
forward<std::pair<long long int, QPDFObjectHandle>&>
_M_construct<char*>
setU
_Head_base<QPDF::ObjUser>
isSpecializedCompression
operator!=<QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> >
_Construct<std::__cxx11::basic_string<char>, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
addNullHandler
getFilePosition
__shared_ptr<Pl_StdioFile::Members>
move<void (*&)(const std::_Any_data&, const std::__cxx11::basic_string<char>&, bool&&)>
destroy<Buffer>
_M_node_allocator
doJSONPageLabels
~vector
_M_not_empty_function<(anonymous namespace)::StreamBlobProvider>
~QPDFLogger
pdf_doc_to_utf8
shared_ptr<std::allocator<QPDFFileSpecObjectHelper>, const QPDFObjectHandle&>
operator==<std::shared_ptr<QPDFStreamFilter>*, std::vector<std::shared_ptr<QPDFStreamFilter> > >
_Destroy<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*, std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >
forward<char const*&&>
_M_enable_shared_from_this_with<Pl_String>
fetch_xor
shared_ptr<std::allocator<Pl_ASCIIHexDecoder>, char const (&)[16], Pipeline*&>
destroy<Pl_AES_PDF>
to_ulong
make_shared<SF_FlateLzwDecode, bool>
addOutlinesToJson
_GLOBAL__sub_I__ZN10QPDFParser5parseERbb
function<QPDFJob::doListAttachments(QPDF&)::<lambda(Pipeline&, const string&)> >
forward<const QPDFPageObjectHelper&>
max_load_factor
checkHSharedObject
uninitialized_copy<std::move_iterator<QPDFObjectHandle*>, QPDFObjectHandle*>
QPDFNameTreeObjectHelper
__niter_base<char*, std::vector<char, std::allocator<char> > >
function<(anonymous namespace)::Handlers::initHandlers()::<lambda()> >
__addressof<char const>
__shared_count<SF_ASCIIHexDecode, std::allocator<SF_ASCIIHexDecode> >
shared_ptr<std::allocator<QPDFFileSpecObjectHelper>, QPDFObjectHandle&>
removeUnreferencedResources
~NNTreeImpl
_Destroy<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*>
assertDictionary
distance<char*>
__shared_count<unsigned char*, std::default_delete<unsigned char []> >
_M_realloc_insert<long long int const&>
__addressof<std::pair<char const*, int> >
bind<std::_Mem_fn<void (QPDF::*)(char const*, char const*)>&, const std::_Placeholder<1>&, char const*&, const std::_Placeholder<2>&>
operator!=<long long int*, std::vector<long long int> >
__niter_base<bool*>
allocator<JSON>
forward<QPDFArgParser*>
noOriginalObjectIds
_M_dispose
EVP_CIPHER_CTX_cipher
__shared_ptr<JSON::JSON_string>
function<QPDFJob::doProcess(std::shared_ptr<QPDF>&, std::function<void(QPDF*, char const*)>, char const*, bool, bool, bool)::<lambda(Pipeline&, const string&)> >
getMatrixForFormXObjectPlacement
strxfrm
replaceStreamData
allocate_shared<JSON, std::allocator<JSON>, JSON>
_M_insert_unique<std::__cxx11::basic_string<char> >
beginCopyAttachmentsFromArray
allocate_shared<Buffer, std::allocator<Buffer>, long unsigned int&>
forward<std::_Rb_tree_iterator<long unsigned int> >
__copy_move_a<false, const QPDFOutlineObjectHelper*, QPDFOutlineObjectHelper*>
__uninitialized_copy_a<std::move_iterator<long unsigned int*>, long unsigned int*, long unsigned int>
move<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, false, true>&>
move<std::allocator<std::__cxx11::regex_traits<char>::_RegexMask>&>
_GLOBAL__sub_I__ZN7QPDFJob8PageSpecC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcS8_
operator-=
_Rb_tree_impl
allocator<QPDF>
move<void (*&)(const std::_Any_data&, JSON&&)>
__copy_m<const std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
_StateSeq
shared_ptr<(anonymous namespace)::ImageOptimizer>
isDelimiter
getParsedOffset
_M_realloc_insert<const QPDF::JSONReactor::state_e&>
operator==<Pipeline, Pipeline>
__shared_ptr<std::allocator<JSON::JSON_null> >
pair<std::_Rb_tree_node<std::pair<const QPDFObjGen, std::__cxx11::basic_string<char> > >*&, std::_Rb_tree_node_base*&>
_ReuseOrAllocNode
__cxa_begin_catch
argCopyAttPositional
compute_O_value
operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__normal_iterator<double*, std::vector<double> > >
_Destroy<QPDF::JSONReactor::state_e*>
move<std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > >&>
_GLOBAL__sub_I__ZN4QPDF11getAllPagesEv
move<JSONHandler::handle(const string&, JSON)::<lambda(const string&, JSON)>&>
as<QPDF_Array>
~SF_ASCII85Decode
shared_ptr<std::allocator<JSON::JSON_null> >
_M_access<(anonymous namespace)::Handlers::beginPages(JSON)::<lambda(const string&, JSON)>*>
_M_enable_shared_from_this_with<QPDFNumberTreeObjectHelper::Members>
operator==<std::pair<long unsigned int const, QPDFObjectHandle>, false>
_Construct<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&>
reportProgress
_M_enable_shared_from_this_with<QPDFObjectHandle::QPDFArrayItems::iterator::Members>
destroy<SF_ASCII85Decode>
operator!=<const QPDFObjectHandle*, std::vector<QPDFObjectHandle> >
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_Buffer, std::allocator<Pl_Buffer>, (__gnu_cxx::_Lock_policy)2> > >
isInteger
_M_get_insert_hint_unique_pos
__shared_ptr<OffsetInputSource>
rotatePage
is_binary_string
provideStreamData
__shared_count<Pl_QPDFTokenizer::Members*>
argAttPositional
function<QUtil::call_main_from_wmain(int, wchar_t const* const*, std::function<int(int, char const* const*)>)::<lambda(int, char**)> >
get<0, int const&>
HSharedObject
_M_create_node<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
_M_access<QPDF_Stream::<lambda()> >
forward<char const (&)[16]>
_M_handle_word_boundary
pair<char const (&)[4], char const (&)[13]>
isText
__invoke_impl<void, void ((anonymous namespace)::Handlers::* const&)(), (anonymous namespace)::Handlers*&>
move<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, false, false>&>
_M_clone_node<std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> > >::_Reuse_or_alloc_node>
_M_mutate
dereference
_M_insert_bracket_matcher<false, false>
_M_enable_shared_from_this_with<QPDFOutlineObjectHelper>
operator==<char const*>
swap<Pl_Buffer*>
_M_push_back_aux<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> > >
move<std::_Mem_fn<void (QPDF::*)(std::shared_ptr<InputSource>, char const*)>&>
qpdf_time_to_pdf_time
shared_ptr<std::allocator<Pl_Flate>, char const (&)[15], Pipeline*&, Pl_Flate::action_e>
_M_get_matcher
_M_access<(anonymous namespace)::Handlers::setupUnderlayFile()::<lambda(char const*)>*>
assertReal
forward<int const&>
__addressof<QPDFFormFieldObjectHelper>
move<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, false, true>&>
_M_not_empty_function<std::shared_ptr<QPDFStreamFilter>()>
construct<QPDFObjGen, QPDFObjGen&>
_M_is_awk
move<std::shared_ptr<JSON::JSON_dictionary>&>
_GLOBAL__sub_I__ZN16QPDF_InlineImageC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
setStreamDataMode
__uninit_copy<std::__cxx11::sub_match<char const*>*, std::__cxx11::sub_match<char const*>*>
to_size<unsigned int>
max_size
getEmbeddedFileStreams
~HSharedObject
operator()<std::__cxx11::basic_string<char> >
_M_access<QPDFPageObjectHelper::externalizeInlineImages(size_t, bool)::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
newString
__addressof<const QPDF_Stream::pipeStreamData(Pipeline*, bool*, int, qpdf_stream_decode_level_e, bool, bool)::<lambda(char const*, int)> >
pair<std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, std::set<QPDFObjGen> > >, std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, std::set<QPDFObjGen> > > >
QPDFObjectHandle
decode
operator!=<const QPDFExc*, std::vector<QPDFExc> >
expectInlineImage
__make_move_if_noexcept_iterator<std::shared_ptr<JSON> >
destroy<std::pair<long long unsigned int const, QPDF::ObjCopier> >
__shared_ptr<QPDFJob::PagesConfig>
__shared_ptr<std::allocator<Pl_QPDFTokenizer>, char const (&)[13], QPDFObjectHandle::TokenFilter*, Pipeline*&>
~Members
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<JSON, std::allocator<JSON>, (__gnu_cxx::_Lock_policy)2> > >
__allocate_guarded<std::allocator<std::_Sp_counted_deleter<unsigned char*, std::default_delete<unsigned char []>, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >
getWarnings
operator<<=
operator<< <char, std::char_traits<char> >
loadBuffer
forward<std::_Rb_tree_node<std::pair<const QPDFObjGen, std::vector<QPDFAnnotationObjectHelper> > >*&>
_S_raw_ptr
allocate_shared<NNTreeImpl, std::allocator<NNTreeImpl>, (anonymous namespace)::NameTreeDetails&, QPDF&, QPDFObjectHandle&, bool&>
_M_access<(anonymous namespace)::Handlers::setupCopyAttachmentsFromPassword()::<lambda(char const*)> >
__copy_move_a2<false, (anonymous namespace)::QPDFPageData*, (anonymous namespace)::QPDFPageData*>
wcscoll
rand
__addressof<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > >
_M_not_empty_function<(anonymous namespace)::Handlers::setupUnderlayPassword()::<lambda(char const*)> >
_M_realloc_insert<const QPDFFormFieldObjectHelper&>
__allocated_ptr
shared_ptr<QPDFWriter::Members>
forward<const std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >&>
__shared_count<Pl_Count*>
disableIncompatibleEncryption
allocator<std::_List_node<NNTreeIterator::PathElement> >
_M_enable_shared_from_this_with<OffsetInputSource>
getUTF8Val
_M_not_empty_function<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)()>((anonymous namespace)::ArgParser*)> >
~QPDFStreamFilter
forward<(anonymous namespace)::ArgParser*>
move<std::shared_ptr<QPDFCrypto_openssl> (*&)()>
__invoke<std::_Mem_fn<void (QPDF::*)(std::shared_ptr<InputSource>, char const*)>&, QPDF*, std::shared_ptr<InputSource>&, char const*>
__uninitialized_move_if_noexcept_a<char const**, char const**, std::allocator<char const*> >
_Destroy<std::shared_ptr<Pipeline> >
__addressof<std::__cxx11::sub_match<char const*> >
_Construct<std::__cxx11::sub_match<char const*> >
_M_tail
__shared_count<QPDFFormFieldObjectHelper::Members*>
emplace_back<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >
_M_get_insert_equal_pos
__uninitialized_move_if_noexcept_a<QPDF::HPageOffsetEntry*, QPDF::HPageOffsetEntry*, std::allocator<QPDF::HPageOffsetEntry> >
move<QPDF_Stream::<lambda()>&>
__shared_count<JSONHandler::Members*>
forward<QPDF::HSharedObjectEntry>
CoalesceProvider
_Destroy<std::pair<char, char>*, std::pair<char, char> >
_M_emplace_hint_unique<const std::piecewise_construct_t&, std::tuple<const QPDF::ObjUser&>, std::tuple<> >
keepFilesOpenThreshold
_Sp_counted_ptr_inplace<QPDFNameTreeObjectHelper&>
_Destroy<__gnu_cxx::__normal_iterator<std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >
adjustDefaultAppearances
__shared_count<Pl_RC4, std::allocator<Pl_RC4>, char const (&)[22], Pipeline*&, unsigned char*, int>
possible_repaired_encodings
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_LZWDecoder, std::allocator<Pl_LZWDecoder>, (__gnu_cxx::_Lock_policy)2> > >
construct<std::pair<long long unsigned int const, QPDF::ObjCopier>, const std::piecewise_construct_t&, std::tuple<long long unsigned int const&>, std::tuple<> >
construct<std::pair<const std::__cxx11::basic_string<char>, QPDF*>, const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >
_M_enable_shared_from_this_with<QPDFObject>
isRadioButton
shared_ptr<ClosedFileInputSource>
QPDFCryptoImpl
QPDFJob
forward<std::_Mem_fn<void (QPDF::*)(std::shared_ptr<InputSource>, char const*)>&>
writeArrayClose
copy<__gnu_cxx::__normal_iterator<const QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> >, __gnu_cxx::__normal_iterator<QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> > >
forward<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> > >
__copy_move_a2<false, QPDFAnnotationObjectHelper*, QPDFAnnotationObjectHelper*>
getInfo
_M_access<(anonymous namespace)::Handlers::addParameter((anonymous namespace)::Handlers::param_handler_t)::<lambda(const string&, const string&)>*>
_M_not_empty_function<(anonymous namespace)::Handlers::setupCopyAttachmentsFromPassword()::<lambda(char const*)> >
rename
forward<char const* const&>
move<(anonymous namespace)::Handlers::addBare((anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&, const string&)>&>
__make_heap<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_less_iter>
pair<std::_Rb_tree_iterator<std::pair<const QPDFObjGen, QPDFFormFieldObjectHelper> >, std::_Rb_tree_iterator<std::pair<const QPDFObjGen, QPDFFormFieldObjectHelper> > >
_M_not_empty_function<(anonymous namespace)::Handlers::addChoices(char const**, bool, (anonymous namespace)::Handlers::param_handler_t)::<lambda(const string&, const string&)> >
_M_begin
isNameAndEquals
_M_access<QUtil::read_lines_from_file(char const*, bool)::<lambda(char&)> >
~_Compiler
shared_ptr<Pl_StdioFile>
__shared_ptr<std::allocator<QPDFWriter::PipelinePopper>, QPDFWriter*>
__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const QPDFObjectHandle*, std::vector<QPDFObjectHandle> >, QPDFObjectHandle*, QPDFObjectHandle>
bucket_count
QPDFUsage
_Construct<(anonymous namespace)::QPDFPageData, const (anonymous namespace)::QPDFPageData&>
linearizePass1
getMatrixForTransformations
unparseChild
__make_move_if_noexcept_iterator<std::__cxx11::basic_string<char> >
__uninitialized_copy_a<QPDFAnnotationObjectHelper*, QPDFAnnotationObjectHelper*, QPDFAnnotationObjectHelper>
move<const std::allocator<Pl_AES_PDF>&>
parseAsContents
initOptionTables
_M_base_alloc
_M_enable_shared_from_this_with<QPDFPageLabelDocumentHelper::Members>
move<QPDFWriter::writeLinearized()::<lambda(QPDFObjectHandle&)>&>
readObjectAtOffset
_Construct<std::shared_ptr<QPDFObjectHandle::TokenFilter>, std::shared_ptr<QPDFObjectHandle::TokenFilter> >
copyEncryption
destroy<long long int>
construct<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
__nonesuch_no_braces
activatePipelineStack
_M_enable_shared_from_this_with<QPDFAcroFormDocumentHelper>
ditems
__rehash_policy
operator-<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*, std::vector<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >, std::allocator<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > > > >
forward<std::_Rb_tree_node<std::__cxx11::basic_string<char> >*&>
emplace_back<int>
_M_realloc_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >
_M_access<std::shared_ptr<QPDFStreamFilter> (**)()>
InvalidInputSource
sendNextCode
construct<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&>
pair<std::_Rb_tree_node<std::pair<long long unsigned int const, bool> >*&, std::_Rb_tree_node_base*&>
__uninitialized_copy_a<std::move_iterator<std::shared_ptr<QPDFStreamFilter>*>, std::shared_ptr<QPDFStreamFilter>*, std::shared_ptr<QPDFStreamFilter> >
__copy_move_backward_a2<true, QPDFObjectHandle*, QPDFObjectHandle*>
_State
_M_enable_shared_from_this_with<Pl_DCT::Members>
generateAppearances
_M_pop
setObjGen
swap<std::pair<char, char>*>
value
_M_find_before_node
ldiv
construct<(anonymous namespace)::QPDFPageData, (anonymous namespace)::QPDFPageData>
put
move<std::__shared_ptr<Pl_ASCIIHexDecoder, (__gnu_cxx::_Lock_policy)2>&>
tzset
__addressof<QPDF::CHSharedObjectEntry>
setSuppressWarnings
swap<void (*)(const std::_Any_data&, int&&)>
destroy<JSON::JSON_bool>
MD5_init
setupOutputFile
_Construct<std::__cxx11::sub_match<char const*>, std::__cxx11::sub_match<char const*>&>
move<(anonymous namespace)::Handlers::setupPassword()::<lambda(char const*)>&>
__miter_base<(anonymous namespace)::JSONParser::parser_state_e*>
forward<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)()>&>
passwordFile
operator!=<QPDFFormFieldObjectHelper*>
RC4_finalize
make_shared<QPDFAcroFormDocumentHelper, QPDF&>
inStringEscape
__uninit_copy<std::move_iterator<QPDFAnnotationObjectHelper*>, QPDFAnnotationObjectHelper*>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_Buffer, std::allocator<Pl_Buffer>, (__gnu_cxx::_Lock_policy)2> > >
getTopLevelField
move<std::_Tuple_impl<1, std::default_delete<Buffer::Members> >&>
_Scanner
__shared_ptr<std::allocator<FileInputSource>, char const*>
forward<std::tuple<long int const&> >
BitStream
allocate_shared<NNTreeIterator, std::allocator<NNTreeIterator>, NNTreeIterator&>
~reference
pair<std::_Rb_tree_node_base*&, std::_Rb_tree_node_base*&>
weak_ptr
~_Head_base
__shared_ptr<JSON::JSON_number>
shared_ptr<std::allocator<Pl_OStream>, char const (&)[13], std::basic_ostream<char, std::char_traits<char> >&>
Config
_M_access<QUtil::read_lines_from_file(FILE*, bool)::<lambda(char&)> >
getMinor
shared_ptr<(anonymous namespace)::Pl_Track>
_Sp_counted_ptr_inplace<char const (&)[22], Pipeline*&, unsigned char*, int>
function<(anonymous namespace)::Handlers::beginEncrypt(JSON)::<lambda(const string&, JSON)> >
__call<void, JSON&&, 0, 1>
~QPDF_Dictionary
~Reactor
__shared_count<QPDFJob::Members*>
construct<std::pair<const QPDFObjGen, QPDFXRefEntry>, const std::piecewise_construct_t&, std::tuple<const QPDFObjGen&>, std::tuple<> >
standardOutput
__invoke<void (QPDFArgParser::* const&)(const std::__cxx11::basic_string<char>&), QPDFArgParser*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
~QPDFDictItems
jpeg_finish_decompress
_M_access<QPDFJob::handleTransformations(QPDF&)::<lambda(Pipeline&, const string&)>*>
move<const std::allocator<Pl_OStream>&>
__addressof<std::allocator<std::_List_node<QPDFPageObjectHelper> > >
_Construct<QPDFAnnotationObjectHelper, QPDFAnnotationObjectHelper&>
insert<QPDFNumberTreeObjectHelper::iterator>
handle
__shared_ptr<QPDFOutlineObjectHelper::Members>
__uninitialized_move_if_noexcept_a<(anonymous namespace)::JSONParser::parser_state_e*, (anonymous namespace)::JSONParser::parser_state_e*, std::allocator<(anonymous namespace)::JSONParser::parser_state_e> >
_M_eq
_Deque_impl
__addressof<std::__detail::_State<char> >
__destroy<__gnu_cxx::__normal_iterator<QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> > >
__copy_move_a2<false, char const*, char*>
getModDate
forward<long int const&>
destroy<std::pair<int const, std::vector<int> > >
allocator<JSON::JSON_dictionary>
_M_destroy_data
inNumber
discardGeneration
to_uint<long long unsigned int>
write_vector_int<QPDF::HPageOffsetEntry, int>
_Sp_counted_ptr_inplace<long long int&>
addToTable
open_memstream
use_facet<const std::ctype<char> >
forward<const std::piecewise_construct_t&>
at_quick_exit
__addressof<const QPDFWriter::writeLinearized()::<lambda(QPDFObjectHandle&)> >
copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int> >, int*>
add_help_2
userPasswordMatched
__invoke_impl<void, void (QPDFArgParser::* const&)(), QPDFArgParser*&>
evaluate
move<QPDFJob::doSplitPages(QPDF&, bool&)::<lambda(Pipeline&, const string&)>&>
move<std::shared_ptr<QPDFOutlineObjectHelper>&>
__shared_ptr<ClosedFileInputSource>
destroy<QPDFNameTreeObjectHelper>
mbtowc
move<std::__shared_ptr<Pl_String, (__gnu_cxx::_Lock_policy)2>&>
handleCode
argReplaceInput
__uninitialized_copy_a<std::__cxx11::sub_match<char const*>*, std::__cxx11::sub_match<char const*>*, std::__cxx11::sub_match<char const*> >
~QPDFCryptoProvider
_M_word_boundary
construct<NNTreeIterator, NNTreeIterator>
string_to_uint
_M_create_node<const QPDFObjectHandle&>
wcscmp
make_shared_cstr
operator()<const std::pair<const QPDFObjGen, QPDFXRefEntry>&>
operator()<std::shared_ptr<InputSource>&, std::tuple<QPDF*&&, char const*&&> >
__get_helper<1, std::default_delete<unsigned char []> >
skip_buffer_input_data
operator()<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > > >
linearize
inflateInit_
__uninitialized_copy_a<std::move_iterator<std::shared_ptr<char const>*>, std::shared_ptr<char const>*, std::shared_ptr<char const> >
_M_enable_shared_from_this_with<ContentNormalizer>
make_shared<JSON::JSON_null>
doResolve
__shared_ptr<Pl_LZWDecoder>
construct<Pl_LZWDecoder, char const (&)[11], Pipeline*&, bool&>
__shared_ptr<std::allocator<QPDFAcroFormDocumentHelper>, QPDF&>
test_json_validators
_Bind<(anonymous namespace)::Handlers*>
modify
_M_enable_shared_from_this_with<QPDFCrypto_openssl>
enqueueObjectsPCLm
~ValueSetter
_M_enable_shared_from_this_with<(anonymous namespace)::ContentProvider>
getObjectByID
Init
iswctype
move<std::__shared_ptr<QPDFJob::AttConfig, (__gnu_cxx::_Lock_policy)2>&>
pair<std::_Rb_tree_iterator<std::pair<const QPDFObjGen, int> >, bool>
shared_ptr<OffsetInputSource>
setupEncryptOwnerPassword
_GLOBAL__sub_I__ZlsRSoRK10QPDFObjGen
_M_disjunction
__shared_count<unsigned char*, std::default_delete<unsigned char []>, std::allocator<void> >
getParam
_M_not_empty_function<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)(const std::__cxx11::basic_string<char>&)>((anonymous namespace)::ArgParser*, std::_Placeholder<1>)> >
construct<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
EVP_MD_CTX_md
_Construct<QPDFObjGen, QPDFObjGen>
destroy<Pl_ASCII85Decoder>
_M_access<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)(JSON)>((anonymous namespace)::Handlers*, std::_Placeholder<1>)>*>
insertPageobjToPage
__shared_count<Pl_Count::Members*>
_Impl
operator()<QPDFObjGen&>
_Construct<QPDFAnnotationObjectHelper, const QPDFAnnotationObjectHelper&>
_GLOBAL__sub_I__ZN10QPDFMatrixC2Ev
~BufferInputSource
is_space
do_widen
function<std::_Bind<std::_Mem_fn<void (QPDFArgParser::*)(const std::__cxx11::basic_string<char>&)>(QPDFArgParser*, std::_Placeholder<1>)> >
operator!=<double*, std::vector<double> >
QPDF_Dictionary
~_Function_base
__addressof<const std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, false, true> >
_Construct<std::pair<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, int> >
NumberTreeDetails
__push_heap<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, long int, char, __gnu_cxx::__ops::_Iter_less_val>
_M_enable_shared_from_this_with<Pl_Buffer>
_M_handle_subexpr_end
__fread_chk
fseek
quick_exit
pair<std::_Rb_tree_node<std::pair<const QPDFObjGen, QPDF::ObjCache> >*&, std::_Rb_tree_node_base*&>
uninitialized_copy<int*, int*>
__shared_count<QPDFJob::PagesConfig*>
QPDFObject
_M_get_use_count
checkHPageOffset
_M_enable_shared_from_this_with<(anonymous namespace)::SF_Crypt>
~QPDFObjectHandle
shared_ptr<std::allocator<NNTreeImpl>, (anonymous namespace)::NumberTreeDetails&, QPDF&, QPDFObjectHandle&, bool&>
_GLOBAL__sub_I__ZN26QPDFAcroFormDocumentHelper7MembersC2Ev
QPDFMatrix
decodeUp
emplace_back<QPDFObjGen>
max<long long int>
_GLOBAL__sub_I__ZN4QPDF7ObjUserC2Ev
move<const std::allocator<QPDF>&>
QPDFFormFieldObjectHelper
to_uc
__addressof<std::allocator<std::_Sp_counted_deleter<char*, std::default_delete<char []>, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >
assertArray
pair<char const (&)[3], char const (&)[9]>
make_shared<NNTreeImpl, (anonymous namespace)::NumberTreeDetails&, QPDF&, QPDFObjectHandle&, bool&>
getToken
compressStreams
move<const std::allocator<Pl_PNGFilter>&>
__miter_base<__gnu_cxx::__normal_iterator<const std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >
__shared_ptr<std::allocator<NNTreeImpl>, (anonymous namespace)::NumberTreeDetails&, QPDF&, QPDFObjectHandle&, bool&>
_Destroy<std::shared_ptr<JSON::JSON_value> >
__uninitialized_move_if_noexcept_a<Buffer*, Buffer*, std::allocator<Buffer> >
__shared_count<Buffer, std::allocator<Buffer>, long unsigned int>
forward<const QPDFJob::CopyAttachmentFrom&>
_M_reallocate_map
function<QPDFPageObjectHelper::removeUnreferencedResources()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
utf16_to_utf8
move<const std::allocator<QPDFCryptoProvider::Members>&>
usage
Pl_Base64
__uninitialized_copy_a<QPDFOutlineObjectHelper*, QPDFOutlineObjectHelper*, QPDFOutlineObjectHelper>
make_pair<char, char>
move<std::__cxx11::list<QPDFObjectHandle>&>
make_shared<QPDFWriter::PipelinePopper, QPDFWriter*>
__fprintf_chk
ObjUser
assertInitialized
addressof<char>
emplace_back<QPDF::HSharedObjectEntry>
destroy<std::pair<const std::__cxx11::basic_string<char>, QPDFJob::RotationSpec> >
getBits
uninitialized_copy<__gnu_cxx::__normal_iterator<char const*, std::vector<char, std::allocator<char> > >, char*>
_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >
operator>>
destroy<QPDFCrypto_gnutls>
allocator<Pl_PNGFilter>
_Hash_node_value_base
operator==<QPDFObject, QPDFObject>
_GLOBAL__sub_I__ZN4QPDF20test_json_validatorsEv
RAND_bytes
getValueAsString
__get_helper<0, Buffer::Members*, std::default_delete<Buffer::Members> >
compute_U_value
~function
rotatex90
to_ulong<long unsigned int>
flattenPagesTree
function<QUtil::read_lines_from_file(FILE*, bool)::<lambda(char&)> >
_M_access<JSONHandler::handle(const string&, JSON)::<lambda(const string&, JSON)>*>
move<provide_data(std::shared_ptr<InputSource>, qpdf_offset_t, qpdf_offset_t)::<lambda(Pipeline*)>&>
_Tuple_impl<int>
__uninit_copy<std::move_iterator<QPDFPageObjectHelper*>, QPDFPageObjectHelper*>
_M_enable_shared_from_this_with<Pl_QPDFTokenizer::Members>
shared_ptr<QPDFEFStreamObjectHelper::Members>
stopOnError
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_QPDFTokenizer, std::allocator<Pl_QPDFTokenizer>, (__gnu_cxx::_Lock_policy)2> > >
move<std::shared_ptr<SF_DCTDecode>&>
shared_ptr<std::allocator<QPDF::ForeignStreamData>, std::shared_ptr<QPDF::EncryptionParameters>&, std::shared_ptr<InputSource>&, QPDFObjGen, long long int, long unsigned int, QPDFObjectHandle&>
__weak_ptr
compareKeys
move<std::allocator<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >&>
_M_realloc_insert<std::__detail::_State<char> >
initializeFromArgv
operator()<(anonymous namespace)::ArgParser*&, std::tuple<> >
forward<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)(const std::__cxx11::basic_string<char>&)> >
_M_access<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, false, true>*>
forward<std::shared_ptr<JSON> >
move<std::shared_ptr<JSON::JSON_null>&>
standardError
bind<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)()>, (anonymous namespace)::ArgParser*&>
vector<char const*>
operator()<unsigned char>
modifyOther
localtime_r
~Pl_RC4
ERR_clear_error
remquo
inParse
ungetwc
setLastObjectDescription
__shared_count<JSON, std::allocator<JSON>, JSON>
_M_reserve_map_at_back
_Construct<std::shared_ptr<Pipeline>, std::shared_ptr<Pipeline> >
not_eof
tan
forward<std::_Rb_tree_node<std::pair<const QPDFObjGen, std::__cxx11::basic_string<char> > >*&>
__shared_count<QPDF::EncryptionParameters*>
__niter_base<int const*, std::vector<int> >
__shared_ptr<QPDFWriter::FunctionProgressReporter>
~Finder
_M_emplace_hint_unique<const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
_M_addr
move<const std::allocator<QPDFWriter::PipelinePopper>&>
move<JSONHandler::handle(const string&, JSON)::<lambda(JSON)>&>
MD5_digest
getLastOffset
to_longlong<long unsigned int>
getAnnotationsForField
findStartxref
getKeyForObject
__uninitialized_move_if_noexcept_a<QPDFParser::parser_state_e*, QPDFParser::parser_state_e*, std::allocator<QPDFParser::parser_state_e> >
getOutlinesForPage
_Unchecked_set
_M_erase_at_end
move<std::shared_ptr<SF_ASCIIHexDecode>&>
forward<const std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >&>
_M_access<std::_Bind<std::_Mem_fn<void (QPDF::*)(std::shared_ptr<InputSource>, char const*)>(std::_Placeholder<1>, std::shared_ptr<InputSource>, std::_Placeholder<2>)>*>
add_help_6
read_xref
unique_ptr<>
EVP_CIPHER_CTX_set_key_length
move<QUtil::FileCloser*&>
move<std::__cxx11::regex_traits<char>::_RegexMask*&>
regex_traits
getAllObjects
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_PNGFilter, std::allocator<Pl_PNGFilter>, (__gnu_cxx::_Lock_policy)2> > >
__niter_base<(anonymous namespace)::JSONParser::parser_state_e*>
shared_ptr<(anonymous namespace)::ResourceReplacer>
numWarnings
forward<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > >
~QPDFCrypto_openssl
writeEncryptionDictionary
_Destroy<Buffer*, Buffer>
atomic
~stack
__get_helper<0, int const&>
move<std::__shared_ptr<Pl_RunLength, (__gnu_cxx::_Lock_policy)2>&>
destroy<QPDFParser::parser_state_e>
_Destroy<QPDFAnnotationObjectHelper*>
shared_ptr<(anonymous namespace)::ContentProvider>
__shared_count<JSON::JSON_array, std::allocator<JSON::JSON_array> >
rend
asArray
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<QPDF::ForeignStreamData, std::allocator<QPDF::ForeignStreamData>, (__gnu_cxx::_Lock_policy)2> > >
move<char const*&>
~ObjUser
pair<long int const&>
forward<const std::__cxx11::sub_match<char const*>&>
replaceDict
forward<(anonymous namespace)::Handlers*>
trim_user_password
destroy<int>
function<(anonymous namespace)::Handlers::setupAddAttachmentFile()::<lambda(char const*)> >
asStream
forward<std::shared_ptr<QPDFCrypto_openssl> (&)()>
~ParseGuard
TC
_M_copy<std::_Rb_tree<QPDFObjGen, QPDFObjGen, std::_Identity<QPDFObjGen>, std::less<QPDFObjGen>, std::allocator<QPDFObjGen> >::_Alloc_node>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<JSON::JSON_blob, std::allocator<JSON::JSON_blob>, (__gnu_cxx::_Lock_policy)2> > >
_M_enable_shared_from_this_with<QPDF>
__is_null_pointer<char const>
readHintStream
mbrtowc
__copy_move_a2<true, __gnu_cxx::__normal_iterator<QPDFObjectHandle*, std::vector<QPDFObjectHandle> >, __gnu_cxx::__normal_iterator<QPDFObjectHandle*, std::vector<QPDFObjectHandle> > >
__addressof<const (anonymous namespace)::Handlers::setupOutputFile()::<lambda(char const*)> >
operator()<std::tuple<QPDF*&&, char const*&&> >
updateIValue
_M_enable_shared_from_this_with<QUtil::FileCloser>
Pl_ASCII85Decoder
allocator<NNTreeIterator>
allocate_shared<Pl_LZWDecoder, std::allocator<Pl_LZWDecoder>, char const (&)[11], Pipeline*&, bool&>
__shared_ptr<std::allocator<JSON::JSON_string>, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
destroy<std::pair<long int const, long int> >
operator=<Pl_DCT>
move<std::shared_ptr<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >&>
__copy_move_backward_a<true, QPDFObjectHandle*, QPDFObjectHandle*>
_M_construct_node<const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::function<std::shared_ptr<QPDFStreamFilter>()> >&>
move<QPDFPageObjectHelper::getBleedBox(bool, bool)::<lambda()>&>
argCopyright
__distance<char const*>
_Destroy<QPDFFormFieldObjectHelper*, QPDFFormFieldObjectHelper>
__copy_move_a<false, const QPDFAnnotationObjectHelper*, QPDFAnnotationObjectHelper*>
getLabelForPage
ContentProvider
~_NFA_base
construct<(anonymous namespace)::JSONParser::parser_state_e, const (anonymous namespace)::JSONParser::parser_state_e&>
move<(anonymous namespace)::Handlers::setupCopyAttachmentsFromPassword()::<lambda(char const*)>&>
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<QPDFFileSpecObjectHelper> > >*&, std::_Rb_tree_node_base*&>
address
__shared_ptr<std::allocator<(anonymous namespace)::SF_Crypt> >
__shared_count<Pl_LZWDecoder, std::allocator<Pl_LZWDecoder>, char const (&)[11], Pipeline*&, bool&>
__make_move_if_noexcept_iterator<QPDFExc>
_M_append
__addressof<const std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, false, false> >
_M_emplace_hint_unique<const std::piecewise_construct_t&, std::tuple<QPDF::ObjUser&&>, std::tuple<> >
encodeRow
basic_ios
uninitialized_copy<std::move_iterator<Buffer*>, Buffer*>
get_next_utf8_codepoint
__shared_count<QPDFCryptoProvider::Members, std::allocator<QPDFCryptoProvider::Members> >
function<(anonymous namespace)::Handlers::setupCopyAttachmentsFromFile()::<lambda(char const*)> >
pair<QPDF::ObjUser&&>
operator()<bool>
forward<QPDFAnnotationObjectHelper&>
operator!=<const std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*, std::vector<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::allocator<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > > >
provideRandomData
setSplitThreshold
write
asinh
writeNext
filterCompressedObjects
setupPagesPassword
pipeStreamData
EVP_aes_192_cbc
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::set<long unsigned int> > > >*&>
allocate_shared<Pl_OStream, std::allocator<Pl_OStream>, char const (&)[13], std::basic_ostream<char, std::char_traits<char> >&>
shared_ptr<JSON::JSON_bool>
construct<std::pair<long unsigned int const, unsigned char>, const std::pair<long unsigned int const, unsigned char>&>
write_vector_int<QPDF::HSharedObjectEntry, int>
_Rb_tree_iterator
construct<std::pair<const QPDFObjGen, QPDF::ObjCache>, const std::piecewise_construct_t&, std::tuple<QPDFObjGen&&>, std::tuple<> >
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::map<long unsigned int, std::__cxx11::basic_string<char> > > >*&>
QPDFLogger
assertStream
__heap_select<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_less_iter>
move<std::function<bool(char)>&>
_M_realloc_insert<const std::shared_ptr<QPDF>&>
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::set<QPDFObjGen> > >*&, std::_Rb_tree_node_base*&>
_Reuse_or_alloc_node
__shared_ptr<std::allocator<QPDFFileSpecObjectHelper>, const QPDFObjectHandle&>
__copy_move_a2<false, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
_GLOBAL__sub_I__ZN14ResourceFinderC2Ev
__get_helper<0, (anonymous namespace)::ArgParser*, std::_Placeholder<1> >
new_allocator
__alloc_on_move<std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > >
getMessageDetail
operator-<QPDF::HPageOffsetEntry*, std::vector<QPDF::HPageOffsetEntry> >
destroy<std::pair<char, char> >
__shared_count<QPDFPageLabelDocumentHelper::Members*>
encodeString
operator==<std::shared_ptr<QPDFStreamFilter>*>
pop_back
CHPageOffset
__uninitialized_move_if_noexcept_a<char*, char*, std::allocator<char> >
operator==<std::unique_ptr<char []>*>
_Alloc_hider
move<std::shared_ptr<char const*>&>
get<0, long unsigned int const&>
to_c
doShowObj
filterable
_M_construct_node<const std::pair<const QPDF::ObjUser, std::set<QPDFObjGen, std::less<QPDFObjGen>, std::allocator<QPDFObjGen> > >&>
destroy<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSONHandler> > >
compute_encryption_parameters_V5
__uninit_copy<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
construct<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSON::JSON_value> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
__addressof<std::shared_ptr<JSON::JSON_value> >
move<void (*&)(const std::_Any_data&, const std::__cxx11::basic_string<char>&, const std::__cxx11::basic_string<char>&)>
hasEmbeddedFiles
_Destroy<__gnu_cxx::__normal_iterator<QPDFObjectHandle*, std::vector<QPDFObjectHandle> > >
__shared_ptr<Pl_RunLength>
~ForeignStreamData
__copy_move_a2<true, __gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > > >
operator=<Pl_QPDFTokenizer>
__builtin_memcmp
getErrorCode
pair<std::_Rb_tree_iterator<std::pair<const QPDFObjGen, int> >, std::_Rb_tree_iterator<std::pair<const QPDFObjGen, int> > >
makeIndirectObject
move<bool (*&)(const std::_Any_data&, char&&)>
move<QPDF::CHSharedObjectEntry&>
_Destroy<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >
_Bind<(anonymous namespace)::Handlers*, const std::_Placeholder<1>&>
_M_transform
operator!=<std::unique_ptr<char []>*>
__shared_count<Pl_Discard*>
_M_not_empty_function<(anonymous namespace)::ImageOptimizer::evaluate(const string&)::<lambda(Pipeline&, const string&)> >
_Tuple_impl
allocator<QPDFObjectHandle>
~QPDFWriter
__miter_base<__gnu_cxx::__normal_iterator<char const*, std::vector<char, std::allocator<char> > > >
__shared_ptr<std::allocator<QPDFNameTreeObjectHelper>, QPDFObjectHandle&, QPDF&>
_Sp_counted_ptr_inplace<char const (&)[13], std::basic_ostream<char, std::char_traits<char> >&>
~PathElement
unique_ptr<unsigned char*>
destroy<QUtil::FileCloser>
make_shared<Pl_DCT, char const (&)[4], Pipeline*&, unsigned int&, unsigned int&, int&, J_COLOR_SPACE&>
__shared_ptr<SF_DCTDecode>
mark_count
destroy<std::pair<long long unsigned int const, std::shared_ptr<QPDFAcroFormDocumentHelper> > >
__uninit_copy<std::move_iterator<std::shared_ptr<QPDF>*>, std::shared_ptr<QPDF>*>
_Tuple_impl<std::default_delete<char []> >
move<std::allocator<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >&>
getCreationDate
make_shared<Pl_TIFFPredictor, char const (&)[12], Pipeline*&, Pl_TIFFPredictor::action_e, unsigned int, unsigned int, unsigned int>
replaceKey
_M_construct<char const*>
_M_not_empty_function<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, true, false> >
_Construct<std::pair<char const*, int> >
get_current_qpdf_time
_GLOBAL__sub_I__ZN4QPDF18checkLinearizationEv
__copy_move_a2<true, QPDFParser::parser_state_e*, QPDFParser::parser_state_e*>
~_Temporary_value
forward<std::__detail::_State<char> >
selectHelpOptionTable
_Destroy<Buffer*>
~__concurrence_lock_error
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, false, true>*>
__addressof<QPDFJob::PageSpec>
__make_move_if_noexcept_iterator<std::unique_ptr<char []> >
_M_handle_repeat
__uninit_default_n<QPDF::HPageOffsetEntry*, long unsigned int>
addArrayHandlers
lookup_classname<char const*>
begin
construct<std::pair<char, char>, std::pair<char, char> >
__shared_ptr<QPDFAcroFormDocumentHelper::Members>
forward<std::__cxx11::basic_string<char>&&>
binary_stdout
__addressof<const (anonymous namespace)::Handlers::initHandlers()::<lambda(const string&, JSON)> >
get<0, long unsigned int&&>
rfind
_M_enable_shared_from_this_with<(anonymous namespace)::ResourceReplacer>
fetch_sub
__shared_ptr<std::allocator<JSON::JSON_bool>, bool&>
move<std::allocator<std::__cxx11::basic_string<char> >&>
move<QPDFObjectHandle&>
forward<Pl_TIFFPredictor::action_e>
shared_ptr<QPDFWriter::FunctionProgressReporter>
newFromRectangle
eof
make_shared<SF_RunLengthDecode>
_M_not_empty_function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, false, true> >
_M_get
updateObjectMapsInternal
stayOpen
_M_access<std::shared_ptr<QPDFCrypto_openssl> (*)()>
destroy<std::__cxx11::basic_string<char> >
~ParserCallbacks
__get_helper<0, QPDFObjGen&&>
compute_encryption_O_U
setArrayItem
string_to_ull
destroy<QPDFFileSpecObjectHelper>
destroy<std::pair<long long unsigned int const, bool> >
newName
move<std::_Any_data&>
operator()<(anonymous namespace)::Handlers*&, std::tuple<> >
containerStart
__miter_base<QPDFAnnotationObjectHelper*>
_M_construct_aux_2
forward<std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, std::vector<QPDFObjectHandle> > > >
operator^
move<QPDFPageObjectHelper*&>
shared_ptr<std::allocator<Pl_QPDFTokenizer>, char const (&)[11], ContentNormalizer*, Pipeline*&>
getFilename
compute_Perms_value_V5_clear
__get_helper<0, std::__cxx11::basic_string<char>&&>
HGeneric
__shared_count<Pl_DCT::Members*>
_M_create_node<const QPDFPageObjectHelper&>
swap<void (*)(const std::_Any_data&, JSON&&)>
setLinearizationPass1Filename
_Sp_counted_ptr_inplace<char const (&)[12], _IO_FILE*&>
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, true, false> >
_M_access<QPDF_Stream::<lambda()>*>
getUE
move<std::__shared_ptr<char, (__gnu_cxx::_Lock_policy)2>&>
_M_clone_node<std::_Rb_tree<QPDF::ObjUser, std::pair<const QPDF::ObjUser, std::set<QPDFObjGen> >, std::_Select1st<std::pair<const QPDF::ObjUser, std::set<QPDFObjGen> > >, std::less<QPDF::ObjUser>, std::allocator<std::pair<const QPDF::ObjUser, std::set<QPDFObjGen> > > >::_Reuse_or_alloc_node>
acos
destroy<QPDFWriter::PipelinePopper>
setStaticID
forward<std::__cxx11::regex_traits<char>::_RegexMask>
addPage
operator std::integral_constant<long unsigned int, 8>::value_type
forward<std::__cxx11::sub_match<char const*> >
_M_match_range
_M_atom
pages
_M_create
move<std::__shared_ptr<JSON, (__gnu_cxx::_Lock_policy)2>&>
__destroy<std::shared_ptr<QPDFObjectHandle::TokenFilter>*>
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, QPDFArgParser::HelpTopic> >*&>
shared_ptr<BufferInputSource>
forward<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)()> >
CHSharedObjectEntry
deterministicId
_Executor
_Destroy<std::shared_ptr<JSON>*>
construct<std::pair<const std::__cxx11::basic_string<char>, ClosedFileInputSource*>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> > >*&>
_M_create_node<const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::function<std::shared_ptr<QPDFStreamFilter>()> >&>
_Head_base<std::default_delete<char []> >
_M_copy<std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> > >::_Reuse_or_alloc_node>
move<(anonymous namespace)::Handlers::ignoreItem()::<lambda(const string&, JSON)>&>
__invoke<std::_Mem_fn<void (QPDFArgParser::*)(const std::__cxx11::basic_string<char>&)>&, QPDFArgParser*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
move<const std::allocator<ContentNormalizer>&>
_M_create_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, QPDFObjectHandle>&>
endCopyAttachmentsFrom
__shared_ptr<std::allocator<SF_ASCII85Decode> >
__shared_count<Pl_QPDFTokenizer, std::allocator<Pl_QPDFTokenizer>, char const (&)[13], QPDFObjectHandle::TokenFilter*, Pipeline*&>
__alloc_on_move<std::allocator<std::__detail::_Hash_node<std::pair<long unsigned int const, QPDFObjectHandle>, false> > >
EVP_aes_128_cbc
feof
parseContentStream
asOperator
__val_comp_iter
move<std::__shared_ptr<QPDFObject, (__gnu_cxx::_Lock_policy)2>&>
decodeLevel
forward<(anonymous namespace)::QPDFPageData>
get<0, long long unsigned int const&>
__uninitialized_copy_a<__gnu_cxx::__normal_iterator<const std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*, std::vector<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::allocator<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > > >, std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*, std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >
_M_realloc_insert<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
_M_insert_unique_<const std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >&, std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >::_Alloc_node>
_GLOBAL__sub_I__ZN25QPDFFormFieldObjectHelperC2E16QPDFObjectHandle
move<std::shared_ptr<QPDFStreamFilter> (*&)(const std::_Any_data&)>
__destroy<QPDF::HPageOffsetEntry*>
__invoke_impl<void, std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)(const std::__cxx11::basic_string<char>&)>&, (anonymous namespace)::ArgParser*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
_M_access<(anonymous namespace)::Handlers::setupOverlayPassword()::<lambda(char const*)> >
_M_v
__move_median_to_first<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_less_iter>
__uninitialized_default_n<QPDF::HPageOffsetEntry*, long unsigned int>
inComment
_M_set_size
inSign
addChoices
allocator<Pl_AES_PDF>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<QPDFCryptoProvider::Members, std::allocator<QPDFCryptoProvider::Members>, (__gnu_cxx::_Lock_policy)2> > >
_M_equal
__get_helper<0, unsigned char*, std::default_delete<unsigned char []> >
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<QPDFOutlineObjectHelper, std::allocator<QPDFOutlineObjectHelper>, (__gnu_cxx::_Lock_policy)2> > >
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<FileInputSource, std::allocator<FileInputSource>, (__gnu_cxx::_Lock_policy)2> > >
~unordered_map
operator!=<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >
pair<int&&, 0>
forcePDFVersion
setObjectDescription
select_on_container_copy_construction
move<std::__shared_ptr<FileInputSource, (__gnu_cxx::_Lock_policy)2>&>
move<(anonymous namespace)::Handlers::setupReplaceInput()::<lambda()>&>
supportsRetry
construct<QPDF::CHSharedObjectEntry, QPDF::CHSharedObjectEntry>
__shared_count<QPDFAcroFormDocumentHelper, std::allocator<QPDFAcroFormDocumentHelper>, QPDF&>
pair<long long unsigned int const&, 0>
swprintf
uninitialized_copy<std::move_iterator<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*>, std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*>
wcslen
__cxa_throw_bad_array_new_length
_M_do_to_ulong
__cxa_free_exception
__alloc_on_move<std::allocator<std::_Rb_tree_node<QPDFObjGen> > >
forward<char const (&)[3]>
doWriteSetup
validatePDFVersion
move<QUtil::read_lines_from_file(char const*, bool)::<lambda(char&)>&>
_M_insert_rval
swap<QPDFOutlineObjectHelper*>
__shared_ptr<QPDFPageLabelDocumentHelper::Members>
operator!=<const std::pair<char, char>*, std::vector<std::pair<char, char>, std::allocator<std::pair<char, char> > > >
move<std::__shared_ptr<Pl_PNGFilter, (__gnu_cxx::_Lock_policy)2>&>
_M_not_empty_function<provide_data(std::shared_ptr<InputSource>, qpdf_offset_t, qpdf_offset_t)::<lambda(Pipeline*)> >
swap<QPDFObjectHandle*>
uninitialized_copy<__gnu_cxx::__normal_iterator<const std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >, std::__cxx11::sub_match<char const*>*>
tuple<(anonymous namespace)::ArgParser*&, const std::_Placeholder<1>&>
CHPageOffsetEntry
NameTreeDetails
EVP_MD_CTX_new
allocate_shared<JSON::JSON_array, std::allocator<JSON::JSON_array> >
set<__gnu_cxx::__normal_iterator<QPDFObjGen*, std::vector<QPDFObjGen> > >
_Destroy<QPDF::HPageOffsetEntry*>
operator==<QPDFJob::PageSpec*>
_Destroy<QPDFJob::PageSpec*, QPDFJob::PageSpec>
willFilterStream
QPDF_Unresolved
__addressof<const (anonymous namespace)::StreamBlobProvider>
_M_clone_node<std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSON::JSON_value> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSON::JSON_value> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSON::JSON_value> > > >::_Alloc_node>
forward<QPDF_Stream::<lambda()> >
_Head_base<char const*&>
operator!=<int*, std::vector<int> >
__errno_location
construct<QPDFObjectHandle, QPDFObjectHandle&>
_Temporary_value<const QPDFObjectHandle&>
strtod
_M_access<(anonymous namespace)::StreamBlobProvider>
_M_not_empty_function<QPDFJob::handleUnderOverlay(QPDF&)::<lambda(Pipeline&, const string&)> >
move<QPDF::HSharedObjectEntry&>
read_bits
operator!=<QPDF::CHSharedObjectEntry*>
operator new
_M_not_empty_function<QUtil::read_lines_from_file(FILE*, bool)::<lambda(char&)> >
__make_move_if_noexcept_iterator<std::__cxx11::sub_match<char const*> >
__get_helper<0, QPDF::ObjUser&&>
EVP_sha512
pair<long unsigned int&&, 0>
as<QPDF_Dictionary>
resize
move<std::shared_ptr<QPDFAcroFormDocumentHelper>&>
fix_rounding
pair<std::_Rb_tree_node<std::pair<const QPDFObjGen, QPDFObjectHandle> >*&, std::_Rb_tree_node_base*&>
c_str
move<std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >&>
operator==<const QPDFJob::PageSpec*, std::vector<QPDFJob::PageSpec> >
~pair
~QPDFWordTokenFinder
operator-<const QPDFObjectHandle*, std::vector<QPDFObjectHandle> >
move<std::shared_ptr<JSON::JSON_bool>&>
forward<void (QPDFArgParser::* const&)()>
forward<const std::__detail::_State<char>&>
forward<const std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> >&>
destroy<std::shared_ptr<JSON> >
__copy_m<std::__cxx11::sub_match<char const*>*, std::__cxx11::sub_match<char const*>*>
getTopLevelOutlines
_Destroy<QPDFPageObjectHelper>
forward<std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&> >
__adjust_heap<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, long int, char, __gnu_cxx::__ops::_Iter_less_iter>
_M_access<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, false, false> >
__destroy<QPDF::CHSharedObjectEntry*>
__shared_count<Pl_StdioFile::Members*>
replaceFilterData
_ScannerBase
__addressof<std::allocator<std::_List_node<std::shared_ptr<Pipeline> > > >
construct<JSON::JSON_null>
wcsncat
_M_access<(anonymous namespace)::Handlers::setupAddAttachmentFile()::<lambda(char const*)>*>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_Flate, std::allocator<Pl_Flate>, (__gnu_cxx::_Lock_policy)2> > >
_M_resize
__iter_less_val
_M_is_basic
EVP_CIPHER_CTX_new
function
load_vector_int<QPDF::HPageOffsetEntry, long long int>
gmtime
prev<char const*>
make_shared<(anonymous namespace)::SF_Crypt>
Pl_Flate
~ContentNormalizer
__advance<__gnu_cxx::__normal_iterator<char const*, std::vector<char, std::allocator<char> > >, long int>
_Sp_counted_ptr_inplace<QPDFWriter*>
_M_leftmost
getchar
move<const std::allocator<SF_RunLengthDecode>&>
getJSON
operator=<Pl_RC4>
_S_initialize_once
uninitialized_copy<char const*, char*>
__get_helper<1, std::_Placeholder<1> >
distance<char const*>
bsearch
readArgsFromFile
__shared_ptr<SF_RunLengthDecode>
__shared_ptr<std::allocator<Pl_Flate>, char const (&)[16], Pipeline*&, Pl_Flate::action_e>
_M_valptr
_M_pop_front_aux
__copy_move_a<false, long int**, long int**>
Handlers
transform_primary<char const*>
pair
wcsrchr
transcode_utf8
operator==<const QPDFExc*, std::vector<QPDFExc> >
__call<void, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, 0, 1>
completionCommon
forward<int>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<JSONHandler, std::allocator<JSONHandler>, (__gnu_cxx::_Lock_policy)2> > >
__niter_base<char const*, std::vector<char, std::allocator<char> > >
doJSONAttachments
~Pl_DCT
~__allocated_ptr
pushInheritedAttributesToPageInternal
UOConfig
_M_create_node<NNTreeIterator::PathElement>
move<std::shared_ptr<JSON::JSON_string>&>
__shared_count<QPDFFileSpecObjectHelper, std::allocator<QPDFFileSpecObjectHelper>, QPDFObjectHandle&>
construct<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >
construct<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
destroy<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFCryptoImpl>()> > >
shared_ptr<std::allocator<Pl_OStream>, char const (&)[7], std::basic_ostream<char, std::char_traits<char> >&>
_M_not_empty_function<(anonymous namespace)::Handlers::addParameter((anonymous namespace)::Handlers::param_handler_t)::<lambda(const string&, const string&)> >
destroy<QPDFNumberTreeObjectHelper>
forward<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)()> >
_M_create_node<const NNTreeIterator::PathElement&>
_M_copy<std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> > >::_Alloc_node>
forward<const (anonymous namespace)::JSONParser::parser_state_e&>
operator std::integral_constant<bool, false>::value_type
emplace_back<char const*>
__addressof<std::shared_ptr<QPDFCrypto_gnutls> (* const)()>
uninitialized_copy<std::move_iterator<(anonymous namespace)::QPDFPageData*>, (anonymous namespace)::QPDFPageData*>
operator!=<void, char const*, int>
getBoolValue
~CoalesceProvider
_M_enable_shared_from_this_with<QPDFWriter::Members>
operator!=<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >
Finder
_M_access<QPDFJob::doSplitPages(QPDF&, bool&)::<lambda(Pipeline&, const string&)>*>
__shared_count<Pl_PNGFilter, std::allocator<Pl_PNGFilter>, char const (&)[11], Pipeline*&, Pl_PNGFilter::action_e, unsigned int, unsigned int, unsigned int>
get<0, long int const&>
_M_hash_code
~_State
__niter_base<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >**>
_M_access<(anonymous namespace)::Handlers::ignoreItem()::<lambda(const string&, JSON)>*>
__copy_move_a2<true, QPDF::JSONReactor::state_e*, QPDF::JSONReactor::state_e*>
_Destroy<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*, std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >
_M_insert_<QPDFObjGen, std::_Rb_tree<QPDFObjGen, QPDFObjGen, std::_Identity<QPDFObjGen>, std::less<QPDFObjGen>, std::allocator<QPDFObjGen> >::_Alloc_node>
__cxa_rethrow
make_shared<ContentNormalizer>
move<std::__shared_ptr<QPDFObjectHandle::StreamDataProvider, (__gnu_cxx::_Lock_policy)2>&>
basic_string
move<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)()>((anonymous namespace)::Handlers*)>&>
updateFromJSON
_M_manager
atof
function<(anonymous namespace)::Handlers::setupOverlayFile()::<lambda(char const*)> >
__shared_ptr<Pl_QPDFTokenizer>
_M_do_right_shift
__invoke<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)(const std::__cxx11::basic_string<char>&)>&, (anonymous namespace)::ArgParser*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
_M_realloc_insert<long int&, const std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&>
get<0, QPDF::ObjUser&&>
unique
mem_fn<void(JSON), (anonymous namespace)::Handlers>
finalize
show_encryption_method
__shared_count<QPDFObject*>
move<std::_Bind<std::_Mem_fn<void (QPDF::*)(char const*, char const*)>(std::_Placeholder<1>, char const*, std::_Placeholder<2>)>&>
getwc
move<std::__shared_ptr<QPDFFileSpecObjectHelper, (__gnu_cxx::_Lock_policy)2>&>
~JSON_number
forward<const Buffer&>
construct<Pl_DCT, char const (&)[4], Pipeline*&, unsigned int&, unsigned int&, int&, J_COLOR_SPACE&>
__uninitialized_default_n<double*, long unsigned int>
__uninit_copy<__gnu_cxx::__normal_iterator<char const*, std::vector<char, std::allocator<char> > >, char*>
_M_insert_unique<int const&>
wcrtomb
_M_enable_shared_from_this_with<(anonymous namespace)::FunctionProvider>
allocate_shared<JSON::JSON_bool, std::allocator<JSON::JSON_bool>, bool&>
operator()<__gnu_cxx::__normal_iterator<char const*, std::vector<char, std::allocator<char> > >, char const>
setOutputFilename
_M_clone
__atomic_add
argUOPositional
pair<std::_Rb_tree_node<std::pair<long long int const, QPDFObjectHandle> >*&, std::_Rb_tree_node_base*&>
distance<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >
substr
_M_access<QPDFJob::shouldRemoveUnreferencedResources(QPDF&)::<lambda(Pipeline&, const string&)>*>
_M_not_empty_function<(anonymous namespace)::Handlers::setupUnderlayFile()::<lambda(char const*)> >
QPDF
bitset
construct<std::pair<const QPDFObjGen, std::set<QPDF::ObjUser> >, const std::pair<const QPDFObjGen, std::set<QPDF::ObjUser, std::less<QPDF::ObjUser>, std::allocator<QPDF::ObjUser> > >&>
__throw_bad_alloc
emplace_back<QPDFJob::PageSpec>
encodeDataIncrementally
_Destroy<QPDFPageObjectHelper*>
shallowCopyPage
construct<QPDF::StringDecrypter, QPDF*, const QPDFObjGen&>
fmin
construct<std::pair<long unsigned int const, QPDFObjectHandle>, const std::piecewise_construct_t&, std::tuple<long unsigned int const&>, std::tuple<> >
__shared_ptr<(anonymous namespace)::InvalidInputSource>
__addressof<std::default_delete<char const* []> >
writeCStr
__addressof<QPDFExc>
move<std::tuple<(anonymous namespace)::Handlers*>&>
insertXrefEntry
destroy<Pl_DCT>
getloc
forward<std::_Rb_tree_iterator<std::__cxx11::basic_string<char> > >
make_shared<Buffer, long unsigned int>
AddAttachment
toI<long int>
parse_object_id
forward<const std::shared_ptr<JSON>&>
__shared_ptr<QPDFNameTreeObjectHelper::Members>
what
__shared_ptr<QPDFJob::Config>
forward<std::__cxx11::basic_string<char>&>
_Destroy<std::pair<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, int>*>
hex_decode
encode_string
__copy_m<(anonymous namespace)::JSONParser::parser_state_e>
forward<std::_Placeholder<2> >
forward<std::shared_ptr<QPDFObjectHandle::TokenFilter> >
__copy_move_a2<true, (anonymous namespace)::JSONParser::parser_state_e*, (anonymous namespace)::JSONParser::parser_state_e*>
_M_construct_node<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
addOptionHelp
allocator<QPDF::ForeignStreamData>
distance<__gnu_cxx::__normal_iterator<char const*, std::vector<char, std::allocator<char> > > >
shared_ptr<std::allocator<SF_RunLengthDecode> >
warnIfPossible
~atomic
regex_error
deflate
_M_access<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)()>((anonymous namespace)::Handlers*)>*>
construct<long long int, long long int>
isRectangle
copy_backward<long int**, long int**>
__get_helper<0, bool*, std::default_delete<bool []> >
_Sp_counted_ptr_inplace<_IO_FILE*>
_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >
_M_less
_M_realloc_insert<std::unique_ptr<char [], std::default_delete<char []> > >
swap<QPDFPageObjectHelper*>
writeHGeneric
getEncryptionStatus
isChecked
dumpHGeneric
move<std::tuple<QPDFArgParser*, std::_Placeholder<1> >&>
endAddAttachmentArray
_M_enable_shared_from_this_with<char>
_M_create_node<const std::shared_ptr<JSONHandler>&>
_M_realloc_insert<const QPDFOutlineObjectHelper&>
_M_insert<double>
forward<std::function<void(Pipeline*)>&>
operator()<const std::pair<const std::__cxx11::basic_string<char>, std::set<long unsigned int> >&>
getObjectID
__shared_count<QPDFWriter::FunctionProgressReporter*>
toUTF16
move<std::__shared_ptr<QPDFValue, (__gnu_cxx::_Lock_policy)2>&>
get<0, Buffer*, std::default_delete<Buffer> >
shared_ptr<std::allocator<JSON::JSON_bool>, bool&>
isIndirect
_Destroy<__gnu_cxx::__normal_iterator<(anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> > >
construct<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle>, const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, QPDFObjectHandle>&>
__make_move_if_noexcept_iterator<std::shared_ptr<Pipeline> >
_Head_base<std::shared_ptr<InputSource> >
endl<char, std::char_traits<char> >
_Head_base<Buffer::Members*>
_GLOBAL__sub_I__ZN13QPDFXRefEntryC2Ev
make_shared<NNTreeImpl, (anonymous namespace)::NameTreeDetails&, QPDF&, QPDFObjectHandle&, bool&>
_M_is_extended
operator+=
_M_enable_shared_from_this_with<QPDF::Members>
destroy<SF_FlateLzwDecode>
fetch_add
__uninit_copy<std::move_iterator<int*>, int*>
_GLOBAL__sub_I__ZN10Pl_OStream7MembersC2ERSo
pair<char const (&)[5], char const (&)[11]>
swap<QPDF*>
__copy_m<QPDFOutlineObjectHelper*, QPDFOutlineObjectHelper*>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<JSON::JSON_number, std::allocator<JSON::JSON_number>, (__gnu_cxx::_Lock_policy)2> > >
destroy<std::shared_ptr<char const> >
shared_ptr<(anonymous namespace)::ProgressReporter>
~unique_ptr
operator()<std::pair<std::__cxx11::basic_string<char>, QPDFObjectHandle> >
_M_access<QPDFPageObjectHelper::forEachFormXObject(bool, std::function<void(QPDFObjectHandle&, QPDFObjectHandle&, const std::__cxx11::basic_string<char>&)>)::<lambda(QPDFObjectHandle)> >
__uninit_copy<std::move_iterator<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*>, std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*>
jsonKey
_M_not_empty_function<QPDFJob::copyAttachments(QPDF&)::<lambda(Pipeline&, const string&)> >
_M_scan_in_bracket
parseRotationParameter
fixDanglingReferences
move<std::shared_ptr<QUtil::FileCloser>&>
~SF_RunLengthDecode
make_shared_array<char>
_Destroy<std::unique_ptr<char []>*, std::unique_ptr<char []> >
init
EVP_sha384
writeJSON
_M_copy<std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::set<long unsigned int> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::set<long unsigned int> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::set<long unsigned int> > > >::_Alloc_node>
operator=<Pl_TIFFPredictor>
pair<std::_Rb_tree_iterator<std::pair<const QPDFObjGen, std::__cxx11::basic_string<char> > >, std::_Rb_tree_iterator<std::pair<const QPDFObjGen, std::__cxx11::basic_string<char> > > >
move<std::vector<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >, std::allocator<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > > >&>
setupPassword
operator-<std::shared_ptr<QPDF>*, std::vector<std::shared_ptr<QPDF> > >
newReal
inName
forward<const QPDFJob::AddAttachment&>
throwException
~basic_ios
eq
operator()<std::pair<long long int, QPDFObjectHandle> >
add_help_4
setProvider
_M_access<QPDFPageObjectHelper::getImages()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
setTrailer
__destroy<__gnu_cxx::__normal_iterator<std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >
handleRotations
__copy_move_a<false, char const*, char*>
swap<std::__cxx11::basic_string<char>*>
_M_clone_node<std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >::_Alloc_node>
__shared_count<Pl_DCT, std::allocator<Pl_DCT>, char const (&)[11], Pipeline*&>
bind<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)()>, (anonymous namespace)::Handlers*>
_GLOBAL__sub_I__ZN17ContentNormalizerC2Ev
forward<std::pair<std::__cxx11::basic_string<char>, QPDFObjectHandle>&>
writeBits
__uninitialized_move_if_noexcept_a<std::shared_ptr<QPDF>*, std::shared_ptr<QPDF>*, std::allocator<std::shared_ptr<QPDF> > >
QPDF_String
move<long int&>
pair<std::_Rb_tree_node<std::pair<const QPDFObjGen, int> >*&, std::_Rb_tree_node_base*&>
forward<std::_Rb_tree_node<std::pair<int const, std::set<QPDFObjGen> > >*&>
create
~__pair_base
move<QPDFPageObjectHelper::getTrimBox(bool, bool)::<lambda()>&>
construct<NNTreeIterator, NNTreeIterator&>
destroy<std::pair<const std::__cxx11::basic_string<char>, QPDF::encryption_method_e> >
ftello
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >*&>
shared_ptr<QPDFPageLabelDocumentHelper::Members>
showEncryption
pair<int const&>
_Destroy<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*>
_M_clone_node<std::_Rb_tree<QPDFObjGen, std::pair<const QPDFObjGen, std::set<QPDF::ObjUser> >, std::_Select1st<std::pair<const QPDFObjGen, std::set<QPDF::ObjUser> > >, std::less<QPDFObjGen>, std::allocator<std::pair<const QPDFObjGen, std::set<QPDF::ObjUser> > > >::_Reuse_or_alloc_node>
writeHintStream
setupOverlayPassword
handle_u_code
perror
move<std::__shared_ptr<QPDFJob::PagesConfig, (__gnu_cxx::_Lock_policy)2>&>
_M_not_empty_function<std::_Bind<std::_Mem_fn<void (QPDF::*)(std::shared_ptr<InputSource>, char const*)>(std::_Placeholder<1>, std::shared_ptr<InputSource>, std::_Placeholder<2>)> >
isPagesObject
__get_helper<0, QPDFArgParser*, std::_Placeholder<1> >
~QPDFPageLabelDocumentHelper
__miter_base<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > > >
_M_move_assign2
_M_create_node<const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&>
contentSize
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<SF_DCTDecode, std::allocator<SF_DCTDecode>, (__gnu_cxx::_Lock_policy)2> > >
_List_base
minVersion
destroy<std::pair<const QPDFObjGen, std::vector<QPDFAnnotationObjectHelper> > >
move<std::shared_ptr<QPDFCryptoImpl> (*&)(const std::_Any_data&)>
_M_insert_unique_<std::pair<std::__cxx11::basic_string<char>, QPDFObjectHandle>&, std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> > >::_Alloc_node>
info
move<QPDF::ObjUser&>
PDFVersion
setObjectStreamMode
__printf_chk
__uninitialized_copy_a<std::move_iterator<std::pair<char, char>*>, std::pair<char, char>*, std::pair<char, char> >
wcstod
~<lambda>
move<std::less<std::__cxx11::basic_string<char> >&>
forward<const QPDFObjectHandle&>
_M_realloc_insert<QPDF::CHSharedObjectEntry>
doProcess
_M_scan_in_brace
forward<std::_Rb_tree_iterator<long long int> >
_M_construct_node<const std::pair<const QPDFObjGen, QPDFXRefEntry>&>
operator!=<QPDFObjGen*, std::vector<QPDFObjGen> >
__shared_count<ContentNormalizer, std::allocator<ContentNormalizer> >
replaceKeyAndGetNew
__uninitialized_copy_a<std::move_iterator<long long int*>, long long int*, long long int>
forward<std::_Rb_tree_node<std::pair<long int const, long int> >*&>
_M_access<QPDFJob::doProcess(std::shared_ptr<QPDF>&, std::function<void(QPDF*, char const*)>, char const*, bool, bool, bool)::<lambda(Pipeline&, const string&)>*>
pair<std::_Rb_tree_node<std::pair<int const, std::vector<int> > >*&, std::_Rb_tree_node_base*&>
__make_move_if_noexcept_iterator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > >
construct<QPDFAcroFormDocumentHelper, QPDF&>
__destroy<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*>
__shared_ptr<std::allocator<NNTreeImpl>, (anonymous namespace)::NameTreeDetails&, QPDF&, QPDFObjectHandle&, bool&>
_M_enable_shared_from_this_with<unsigned char>
pair<std::_Rb_tree_node<std::pair<long unsigned int const, unsigned char> >*&, std::_Rb_tree_node_base*&>
forward<long long int const&>
allocator<SF_FlateLzwDecode>
getDA
preserveUnreferencedResources
wcsspn
endJsonKeyArray
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<SF_RunLengthDecode, std::allocator<SF_RunLengthDecode>, (__gnu_cxx::_Lock_policy)2> > >
_S_propagate_on_swap
destroy<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> > >
unsetf
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::__detail::_NFA<std::__cxx11::regex_traits<char> >, std::allocator<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >, (__gnu_cxx::_Lock_policy)2> > >
error_handler
_M_not_empty_function<QPDFJob::doListAttachments(QPDF&)::<lambda(Pipeline&, const string&)> >
enqueuePart
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, true, true>*>
~JSON_null
doSplitPages
__addressof<const (anonymous namespace)::Handlers::setupPassword()::<lambda(char const*)> >
reserveObject
operator()<char>
move_backward<QPDFObjectHandle*, QPDFObjectHandle*>
shared_ptr<QPDFJob::PagesConfig>
__addressof<const QPDFJob::doSplitPages(QPDF&, bool&)::<lambda(Pipeline&, const string&)> >
~OptionEntry
_Destroy<double*, double>
move<const std::allocator<Pl_QPDFTokenizer>&>
__shared_count<QPDFJob::EncConfig*>
move<std::__shared_ptr<QPDFOutlineObjectHelper, (__gnu_cxx::_Lock_policy)2>&>
__shared_count<QPDFLogger::Members*>
NNTreeDetails
replaceObject
construct<QPDFObjGen, const QPDFObjGen&>
password
min<int>
_Destroy<char const**, char const*>
getBufferSharedPointer
getPageContents
EVP_CipherInit_ex
asString
allocate_shared<QPDF::StringDecrypter, std::allocator<QPDF::StringDecrypter>, QPDF*, const QPDFObjGen&>
destroy<Pl_TIFFPredictor>
bindJSON
_S_select_on_copy
handleTransformations
to_ulonglong<int>
_M_not_empty_function<QUtil::call_main_from_wmain(int, wchar_t const* const*, std::function<int(int, char const* const*)>)::<lambda(int, char**)> >
_Construct<Buffer, Buffer>
getc
wcstof
_M_not_empty_function<std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, true, true> >
getOriginalID1
function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, true, true> >
move<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > > >
__addressof<std::__detail::_Hash_node<std::pair<long unsigned int const, QPDFObjectHandle>, false> >
_M_enable_shared_from_this_with<QPDFAcroFormDocumentHelper::Members>
forward<std::pair<QPDFObjGen, int> >
strcasecmp
__distance<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> > >
move<QPDFJob::handleUnderOverlay(QPDF&)::<lambda(Pipeline&, const string&)>&>
__get_helper<0, long long unsigned int const&>
construct<QPDFCryptoProvider::Members>
_M_access<QPDFJob::doProcess(std::shared_ptr<QPDF>&, std::function<void(QPDF*, char const*)>, char const*, bool, bool, bool)::<lambda(Pipeline&, const string&)> >
atanh
make_unique<char* []>
_Sp_counted_base
construct<std::pair<int const, QPDFObjectHandle>, const std::piecewise_construct_t&, std::tuple<int const&>, std::tuple<> >
_M_insert_<const std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> >&, std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::function<std::shared_ptr<QPDFStreamFilter>()> > > >::_Alloc_node>
shared_ptr<SF_FlateLzwDecode>
strtof
destroy<std::__cxx11::regex_traits<char>::_RegexMask>
forward<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >
_GLOBAL__sub_I__ZN11InputSource13setLastOffsetEx
~JSONReactor
_Mem_fn_base
forward<std::tuple<long unsigned int const&> >
move<const std::allocator<SF_ASCII85Decode>&>
registerImpl_internal<QPDFCrypto_gnutls>
_M_enable_shared_from_this_with<Pl_Flate::Members>
allocator<QPDFFileSpecObjectHelper>
__copy_move_a<true, (anonymous namespace)::JSONParser::parser_state_e*, (anonymous namespace)::JSONParser::parser_state_e*>
_M_construct_node<std::pair<QPDFObjGen, int> >
construct<std::pair<const std::__cxx11::basic_string<char>, std::vector<QPDFObjectHandle> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
key_eq
insertCompletions
__miter_base<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >**>
__addressof<const (anonymous namespace)::Handlers::setupOverlayFile()::<lambda(char const*)> >
argPages
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<QPDFOutlineObjectHelper, std::allocator<QPDFOutlineObjectHelper>, (__gnu_cxx::_Lock_policy)2> > >
QPDFPageLabelDocumentHelper
move<InputSource*&>
~LastChar
QPDFTokenizer
__addressof<const QPDFJob::shouldRemoveUnreferencedResources(QPDF&)::<lambda(Pipeline&, const string&)> >
_M_at_begin
move<(anonymous namespace)::Handlers::beginEncrypt(JSON)::<lambda(const string&, JSON)>&>
~NameTreeDetails
remove_last
pair<char const (&)[3], char const (&)[12]>
move<std::__shared_ptr<Pl_OStream, (__gnu_cxx::_Lock_policy)2>&>
_M_access<QPDFPageObjectHelper::forEachFormXObject(bool, std::function<void(QPDFObjectHandle&, QPDFObjectHandle&, const std::__cxx11::basic_string<char>&)>)::<lambda(QPDFObjectHandle)>*>
ValueSetter
lastTokenWasBad
_M_realloc_insert<QPDFOutlineObjectHelper>
uninitialized_copy<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
tuple<Buffer::Members*&, std::default_delete<Buffer::Members> >
insert<std::_Rb_tree_const_iterator<std::__cxx11::basic_string<char> > >
_M_ready
_M_enable_shared_from_this_with<QPDF::ForeignStreamData>
swap<std::__cxx11::sub_match<char const*>*>
forward<ContentNormalizer*>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_LZWDecoder, std::allocator<Pl_LZWDecoder>, (__gnu_cxx::_Lock_policy)2> > >
destroy<QPDFAcroFormDocumentHelper>
initializeEncryption
_M_destroy_node
find_last_not_of
__addressof<const (anonymous namespace)::Handlers::setupOverlayPassword()::<lambda(char const*)> >
getObject
_M_find_node
gnutls_hash_init
shared_ptr<QPDFJob::Members>
shared_ptr<Buffer>
eraseItem
basic_string<char const*>
uninitialized_copy<std::move_iterator<(anonymous namespace)::StackFrame*>, (anonymous namespace)::StackFrame*>
__shared_ptr<char, std::default_delete<char []> >
__shared_count<QPDF::StringDecrypter, std::allocator<QPDF::StringDecrypter>, QPDF*, const QPDFObjGen&>
__invoke_impl<void, std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)()>&, (anonymous namespace)::ArgParser*&>
strtol
_M_create_node<const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<long unsigned int, std::less<long unsigned int>, std::allocator<long unsigned int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<long unsigned int, std::less<long unsigned int>, std::allocator<long unsigned int> > > > > >&>
__addressof<const std::__detail::_CharMatcher<std::__cxx11::regex_traits<char>, true, false> >
_M_insert_node
operator!=<__gnu_cxx::__normal_iterator<std::shared_ptr<QPDFObjectHandle::TokenFilter>*, std::vector<std::shared_ptr<QPDFObjectHandle::TokenFilter> > > >
forward<const QPDFAnnotationObjectHelper&>
bytesNeeded
vswscanf
__do_alloc_on_move<std::allocator<std::_Rb_tree_node<QPDFObjGen> > >
objectStreams
_M_add_character_class
move<QPDFPageObjectHelper&>
_M_realloc_insert<const QPDFObjectHandle&>
uninitialized_copy<(anonymous namespace)::QPDFPageData*, (anonymous namespace)::QPDFPageData*>
move<long unsigned int&>
usageExit
replaceForeignIndirectObjects
__fill_n_a<double*, long unsigned int, double>
move<std::shared_ptr<Pl_Flate>&>
as<QPDF_Integer>
_M_not_empty_function<(anonymous namespace)::Handlers::setupInputFile()::<lambda(char const*)> >
fseeko
swap<QUtil::FileCloser*>
move<QPDF::CHPageOffsetEntry*&>
_M_enable_shared_from_this_with<Pl_Count::Members>
pair<long long unsigned int const&>
copy<__gnu_cxx::__normal_iterator<char const*, std::vector<char, std::allocator<char> > >, char*>
addAnyHandler
containerEnd
moddate
getFullyQualifiedName
forward<(anonymous namespace)::ArgParser*&>
allowModifyAssembly
make_shared<QPDFCryptoProvider::Members>
__distance<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >
__shared_count<JSON::JSON_dictionary, std::allocator<JSON::JSON_dictionary> >
forward<QPDFObjectHandle&>
_Construct<QPDFAnnotationObjectHelper, QPDFAnnotationObjectHelper>
move<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, true, true>&>
operator std::__cxx11::sub_match<char const*>::string_type
destroy<JSON::JSON_blob>
_Find_next
move<char*&>
prepareFileForWrite
~QPDFCrypto_gnutls
toI<long unsigned int>
_M_enable_shared_from_this_with<Pl_Buffer::Members>
memcpy
getError
construct<QPDFCrypto_gnutls>
__shared_ptr
QPDFFileSpecObjectHelper
swap<QPDF::CHSharedObjectEntry*>
shared_ptr<Pl_Discard>
anyErrors
__shared_count<QPDFOutlineObjectHelper, std::allocator<QPDFOutlineObjectHelper>, QPDFOutlineObjectHelper&>
jsonStreamPrefix
QPDFArrayItems
newInlineImage
_M_construct_node<const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >
_Destroy<std::shared_ptr<QPDFObjectHandle::TokenFilter>*>
uninitialized_copy<__gnu_cxx::__normal_iterator<const std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*, std::vector<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, std::allocator<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > > >, std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*>
_S_cget
gnutls_cipher_deinit
setDecodeLevel
~_Scanner
repair
_M_enable_shared_from_this_with<QPDFCrypto_gnutls>
_Node_const_iterator
forward<const std::pair<const QPDFObjGen, std::set<QPDF::ObjUser> >&>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<JSON::JSON_dictionary, std::allocator<JSON::JSON_dictionary>, (__gnu_cxx::_Lock_policy)2> > >
make_shared<JSONHandler>
__uninitialized_move_if_noexcept_a<std::shared_ptr<char const>*, std::shared_ptr<char const>*, std::allocator<std::shared_ptr<char const> > >
_M_enable_shared_from_this_with<JSON::JSON_null>
mbrlen
pair<std::_Rb_tree_node<QPDFObjGen>*&, std::_Rb_tree_node_base*&>
__uninitialized_copy_a<std::move_iterator<Buffer*>, Buffer*, Buffer>
__shared_count<QPDFJob::UOConfig*>
forward<std::__cxx11::sub_match<char const*>&>
__uninit_copy<std::move_iterator<std::__cxx11::regex_traits<char>::_RegexMask*>, std::__cxx11::regex_traits<char>::_RegexMask*>
freopen
__lower_bound<__gnu_cxx::__normal_iterator<char const*, std::vector<char, std::allocator<char> > >, char, __gnu_cxx::__ops::_Iter_less_val>
assertNumber
move<const std::allocator<Pl_StdioFile>&>
move<std::shared_ptr<JSON::JSON_blob>&>
getLastChar
__miter_base<char*>
operator()<char*>
_M_not_empty_function<(anonymous namespace)::Handlers::beginEncrypt(JSON)::<lambda(const string&, JSON)> >
construct<std::pair<const QPDFObjGen, QPDF::ObjCache>, const std::piecewise_construct_t&, std::tuple<const QPDFObjGen&>, std::tuple<> >
operator++
fputws
construct<QPDFParser::parser_state_e, QPDFParser::parser_state_e>
_Construct<std::pair<char, char>, std::pair<char, char> >
_M_enable_shared_from_this_with<QPDFNameTreeObjectHelper::Members>
__invoke<std::_Mem_fn<void (QPDFArgParser::*)()>&, QPDFArgParser*&>
copy<std::move_iterator<QPDFParser::parser_state_e*>, QPDFParser::parser_state_e*>
_Head_base<JSON>
imbue
pair<std::_Rb_tree_iterator<long unsigned int>, bool>
operator&=
forward<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >
handleBashArguments
__uninitialized_copy_a<std::move_iterator<std::unique_ptr<char []>*>, std::unique_ptr<char []>*, std::unique_ptr<char []> >
__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int> >, int*>
_M_capacity
allocator<SF_RunLengthDecode>
construct<std::pair<int const, QPDFXRefEntry>, const std::piecewise_construct_t&, std::tuple<int const&>, std::tuple<> >
forward<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)()>&>
__uninitialized_copy_a<__gnu_cxx::__normal_iterator<char const*, std::vector<char, std::allocator<char> > >, char*, char>
bindParam<(anonymous namespace)::ArgParser>
forward<NNTreeIterator::PathElement>
getAllPages
allocate_shared<FileInputSource, std::allocator<FileInputSource>, char const*>
_S_copy_chars
_M_realloc_insert<QPDFPageObjectHelper>
makeNumber
_M_erase
__normal_iterator<QPDFObjectHandle*>
shared_ptr<QPDF_Destroyed>
function<QPDFPageObjectHelper::getFormXObjects()::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
_Destroy<QPDF::CHPageOffsetEntry*, QPDF::CHPageOffsetEntry>
getUsed
insert<QPDFNameTreeObjectHelper::iterator>
~QPDFPageData
digest
translate_nocase
_Head_base<QPDF*>
_M_construct_node<int const&>
QPDF_Integer
move<std::shared_ptr<QPDFObjectHandle::TokenFilter>&>
_M_not_empty_function<JSONHandler::handle(const string&, JSON)::<lambda(JSON)> >
_Compiler
uninitialized_copy<std::move_iterator<std::shared_ptr<JSON>*>, std::shared_ptr<JSON>*>
_S_do_it
__uninitialized_default_n<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, long unsigned int>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<QPDFCryptoProvider::Members, std::allocator<QPDFCryptoProvider::Members>, (__gnu_cxx::_Lock_policy)2> > >
__copy_move_a2<false, __gnu_cxx::__normal_iterator<const QPDFObjectHandle*, std::vector<QPDFObjectHandle> >, __gnu_cxx::__normal_iterator<QPDFObjectHandle*, std::vector<QPDFObjectHandle> > >
forward<std::_Rb_tree_iterator<std::pair<const QPDFObjGen, QPDFFormFieldObjectHelper> > >
getInstance
advance<char const*, long int>
~InvalidInputSource
uninitialized_copy<QPDFObjectHandle*, QPDFObjectHandle*>
__addressof<const (anonymous namespace)::Handlers::initHandlers()::<lambda()> >
__destroy<std::shared_ptr<QPDFStreamFilter>*>
__shared_ptr<(anonymous namespace)::ValueSetter>
_Head_base<std::_Placeholder<2> >
size
_M_insert_<const QPDFObjGen&, std::_Rb_tree<QPDFObjGen, QPDFObjGen, std::_Identity<QPDFObjGen>, std::less<QPDFObjGen>, std::allocator<QPDFObjGen> >::_Alloc_node>
readHGeneric
__uninit_copy<std::move_iterator<long unsigned int*>, long unsigned int*>
operator!=<QPDFOutlineObjectHelper*>
wctob
pair<QPDFObjGen&, int&>
inHexstring
_M_push_back_aux<const std::__detail::_StateSeq<std::__cxx11::regex_traits<char> >&>
_Construct<QPDFOutlineObjectHelper, const QPDFOutlineObjectHelper&>
move<std::__shared_ptr<QPDF::StringDecrypter, (__gnu_cxx::_Lock_policy)2>&>
_M_realloc_insert<const std::shared_ptr<QPDFObjectHandle::TokenFilter>&>
pair<std::_Rb_tree_node<std::pair<long long unsigned int const, QPDF::ObjCopier> >*&, std::_Rb_tree_node_base*&>
move<std::shared_ptr<QPDFNameTreeObjectHelper>&>
__aligned_buffer
setItemNumber
_M_add_ref_lock_nothrow
forward<long unsigned int&&>
move<std::shared_ptr<FileInputSource>&>
getRoot
function<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)()>((anonymous namespace)::ArgParser*)> >
btowc
_Destroy<int*>
__copy_move_a<false, const std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
_M_access<(anonymous namespace)::ImageOptimizer::evaluate(const string&)::<lambda(Pipeline&, const string&)> >
assemble
closeInputSource
count
hasAcroForm
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Pl_OStream, std::allocator<Pl_OStream>, (__gnu_cxx::_Lock_policy)2> > >
_Destroy<__gnu_cxx::__normal_iterator<std::__cxx11::sub_match<char const*>*, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >, std::__cxx11::sub_match<char const*> >
move<std::__shared_ptr<QPDFCryptoImpl, (__gnu_cxx::_Lock_policy)2>&>
move<std::tuple<QPDFArgParser*>&>
getRect
QPDF_Reserved
forward<std::_Rb_tree_node<std::pair<long unsigned int const, unsigned char> >*&>
forward<std::_Rb_tree_node<std::pair<const QPDFObjGen, int> >*&>
PageSpec
__uninitialized_copy_a<std::move_iterator<(anonymous namespace)::JSONParser::parser_state_e*>, (anonymous namespace)::JSONParser::parser_state_e*, (anonymous namespace)::JSONParser::parser_state_e>
Pl_Count
shared_ptr<std::allocator<QPDFNumberTreeObjectHelper>, QPDFObjectHandle, QPDF&>
__miter_base<std::__cxx11::sub_match<char const*>*>
_Head_base<QPDFObjGen>
get<0, QPDFArgParser*>
_M_realloc_insert<std::shared_ptr<JSON::JSON_value> >
construct<FileInputSource, char const*>
_M_insert_dummy
__make_move_if_noexcept_iterator<std::shared_ptr<QPDFObjectHandle::TokenFilter> >
copy<__gnu_cxx::__normal_iterator<const std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > >
initializer_list
__shared_count<QPDFCrypto_gnutls, std::allocator<QPDFCrypto_gnutls> >
move<std::shared_ptr<SF_FlateLzwDecode>&>
__throw_out_of_range_fmt
move<const std::allocator<Pl_String>&>
__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int> >, int*>
__niter_base<const QPDFObjectHandle*, std::vector<QPDFObjectHandle> >
operator()<std::tuple<JSON&&> >
shared_ptr<std::allocator<QPDFWriter::PipelinePopper>, QPDFWriter*>
doShowPages
move<void (*&)(const std::_Any_data&, const std::__cxx11::basic_string<char>&)>
_S_on_swap
__addressof<const QPDFPageObjectHelper::forEachImage(bool, std::function<void(QPDFObjectHandle&, QPDFObjectHandle&, const std::__cxx11::basic_string<char>&)>)::<lambda(QPDFObjectHandle)> >
setOutputStreams
do_create
__addressof<QPDF::CHPageOffsetEntry>
uninitialized_copy<__gnu_cxx::__normal_iterator<const QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> >, QPDFAnnotationObjectHelper*>
getIntValue
__uninitialized_copy_a<std::move_iterator<QPDF::JSONReactor::state_e*>, QPDF::JSONReactor::state_e*, QPDF::JSONReactor::state_e>
_M_access<QPDFJob::handleTransformations(QPDF&)::<lambda(Pipeline&, const string&)> >
destroy<std::pair<int const, QPDFObjectHandle> >
__shared_count<SF_DCTDecode, std::allocator<SF_DCTDecode> >
forward<NNTreeIterator>
argEmpty
construct<std::pair<const std::__cxx11::basic_string<char>, std::set<QPDFObjGen> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
hasName
assertInlineImage
sort
uninitialized_copy<std::move_iterator<char*>, char*>
_M_access<std::shared_ptr<QPDFStreamFilter> (*)()>
arrayOrStreamToStreamArray
_M_enable_shared_from_this_with<QPDF::EncryptionParameters>
_M_access<(anonymous namespace)::Handlers::setupUnderlayPassword()::<lambda(char const*)> >
__uniq_ptr_impl<std::default_delete<char []> >
narrow
vwscanf
__regex_algo_impl<char const*, std::allocator<std::__cxx11::sub_match<char const*> >, char, std::__cxx11::regex_traits<char>, (std::__detail::_RegexExecutorPolicy)0, false>
copy<long int**, long int**>
operator!=<std::shared_ptr<JSON::JSON_value>*, std::vector<std::shared_ptr<JSON::JSON_value> > >
forward<std::_Rb_tree_node<std::pair<long long int const, QPDFObjectHandle> >*&>
_M_val
_Sp_counted_ptr_inplace<QPDF*, const QPDFObjGen&>
forward<char const (&)[5]>
forward<const QPDFOutlineObjectHelper&>
function<JSONHandler::handle(const string&, JSON)::<lambda(JSON)> >
make_shared<Pl_QPDFTokenizer, char const (&)[13], QPDFObjectHandle::TokenFilter*, Pipeline*&>
__uninitialized_copy_a<std::move_iterator<QPDFObjectHandle*>, QPDFObjectHandle*, QPDFObjectHandle>
function<QPDFJob::handleUnderOverlay(QPDF&)::<lambda(Pipeline&, const string&)> >
__shared_ptr<std::allocator<Pl_OStream>, char const (&)[7], std::basic_ostream<char, std::char_traits<char> >&>
deque
__cxa_bad_cast
back
shared_ptr<std::allocator<NNTreeIterator>, NNTreeIterator>
__addressof<const QPDFPageObjectHelper::getCropBox(bool, bool)::<lambda()> >
utf8_to_ascii
_M_insert_any_matcher_posix<false, false>
~QPDFPageDocumentHelper
_M_not_empty_function<QPDFPageObjectHelper::getCropBox(bool, bool)::<lambda()> >
operator-<QPDFPageObjectHelper*, std::vector<QPDFPageObjectHelper> >
operator==<char, std::char_traits<char>, std::allocator<char> >
inStringAfterCR
allocate_shared<QPDFFileSpecObjectHelper, std::allocator<QPDFFileSpecObjectHelper>, QPDFObjectHandle&>
_M_access<(anonymous namespace)::Handlers::initHandlers()::<lambda()>*>
_Sp_counted_ptr_inplace<QPDFObjectHandle&>
writeDictionaryOpen
initializeWithRandomBytes
allocator<Pl_Flate>
__pair_base
operator!=<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*, std::vector<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >, std::allocator<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > > > >
_M_insert<const QPDFJob::CopyAttachmentFrom&>
checkFileChecksum
_M_node_count
is_bit_set
_M_realloc_insert<char const*>
check_user_password_V5
pair<long long int, QPDFObjectHandle>
__copy_move_a<false, const std::__cxx11::sub_match<char const*>*, std::__cxx11::sub_match<char const*>*>
_M_realloc_insert<QPDFParser::parser_state_e>
pair<std::_Rb_tree_node<std::pair<int const, long long int> >*&, std::_Rb_tree_node_base*&>
_M_range_check
_Rb_tree_header
addOptionalParameter
pair<int&&>
_Hashtable_ebo_helper
_M_copy<std::_Rb_tree<QPDF::ObjUser, QPDF::ObjUser, std::_Identity<QPDF::ObjUser>, std::less<QPDF::ObjUser>, std::allocator<QPDF::ObjUser> >::_Alloc_node>
forward<std::_Rb_tree_node<QPDFObjGen>*&>
operator()<const std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >&>
move<const std::allocator<QPDFNameTreeObjectHelper>&>
memset
destroy<Pl_Flate>
_Destroy<char const**>
setMessagePrefix
setFile
make_shared<NNTreeIterator, NNTreeIterator&>
move<std::shared_ptr<Pl_String>&>
get<0, (anonymous namespace)::Handlers*>
__builtin_unwind_resume
__invoke<void (QPDF::* const&)(char const*, char const*), QPDF*, char const*&, char const*>
useStaticIV
_Destroy<std::shared_ptr<QPDFStreamFilter>*>
_Destroy<QPDF::CHPageOffsetEntry*>
pushMD5Pipeline
forceVersion
~InlineImageTracker
move<std::allocator<QPDFPageObjectHelper>&>
__is_null_pointer<char>
fopen
__shared_ptr<std::allocator<QPDF::ForeignStreamData>, std::shared_ptr<QPDF::EncryptionParameters>&, std::shared_ptr<InputSource>&, QPDFObjGen, long long int, long unsigned int, QPDFObjectHandle&>
_M_realloc_insert<std::shared_ptr<QPDFStreamFilter> >
isStream
getFormFieldsForPage
get<0, (anonymous namespace)::ArgParser*, std::_Placeholder<1> >
fixed
construct<QPDF::HPageOffsetEntry, QPDF::HPageOffsetEntry>
destroy<NNTreeImpl>
~_Sp_ebo_helper
~PatternFinder
_M_new_elements_at_back
__get_helper<1, std::shared_ptr<InputSource>, std::_Placeholder<2> >
bucket_size
QPDFAnnotationObjectHelper
_GLOBAL__sub_I__ZN9QPDF_BoolC2Eb
destroy<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSON::JSON_value> > >
_M_access<QPDFPageObjectHelper::getCropBox(bool, bool)::<lambda()> >
shared_ptr<QPDFArgParser::Members>
doJSONAcroform
move<std::shared_ptr<QPDFStreamFilter> (*&)()>
__make_move_if_noexcept_iterator<QPDF::HSharedObjectEntry>
__shared_ptr<QPDFEFStreamObjectHelper::Members>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<QPDFCrypto_openssl, std::allocator<QPDFCrypto_openssl>, (__gnu_cxx::_Lock_policy)2> > >
writeBitsSigned
getString
move<std::tuple<QPDF*&&, char const*&&>&>
is_hex_digit
__shared_ptr<QPDFEmbeddedFileDocumentHelper::Members>
coalesceContentStreams
_Destroy<std::shared_ptr<QPDF>*>
__shared_ptr<std::allocator<ContentNormalizer> >
allocator<Pl_OStream>
beginAddAttachmentArray
jpeg_read_scanlines
__destroy<std::shared_ptr<JSON>*>
indicateProgress
isImage
_M_access<QPDFPageObjectHelper::getBleedBox(bool, bool)::<lambda()> >
function<(anonymous namespace)::ArgParser::initOptionTables()::<lambda(const string&)> >
forward<void ((anonymous namespace)::Handlers::* const&)()>
assertBool
newStream
getValue
_Construct<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >, const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&>
processInputSource
~JSONHandler
_M_allocate_map
__uninitialized_copy_a<std::move_iterator<QPDF::HSharedObjectEntry*>, QPDF::HSharedObjectEntry*, QPDF::HSharedObjectEntry>
_M_copy<std::_Rb_tree<QPDFObjGen, std::pair<const QPDFObjGen, QPDFXRefEntry>, std::_Select1st<std::pair<const QPDFObjGen, QPDFXRefEntry> >, std::less<QPDFObjGen>, std::allocator<std::pair<const QPDFObjGen, QPDFXRefEntry> > >::_Alloc_node>
round
destroy<JSON::JSON_array>
_Destroy<std::pair<char const*, int>*>
#realmain
move<std::tuple<JSON&&>&>
processFile
load_vector_int<QPDF::HPageOffsetEntry, int>
destroy<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<QPDFFileSpecObjectHelper> > >
emplace_back<std::shared_ptr<JSON::JSON_value> >
target_type
strncmp
random
getTypeName
JSON
copy<std::move_iterator<QPDF::JSONReactor::state_e*>, QPDF::JSONReactor::state_e*>
shared_ptr<std::allocator<Pl_RC4>, char const (&)[22], Pipeline*&, unsigned char*, int>
_M_copy_code
_M_access<(anonymous namespace)::Handlers::setupUnderlayFile()::<lambda(char const*)> >
QPDFArgParser
~Pl_Flate
construct<QPDFJob::PageSpec, QPDFJob::PageSpec>
parseContentStream_data
addDictHandlers
writeObject
__copy_move_a2<false, long int**, long int**>
_GLOBAL__sub_I__ZN9QPDF_NullC2Ev
shared_ptr<Pl_String::Members>
move<std::shared_ptr<Pl_StdioFile>&>
binarySearch
shared_ptr<std::allocator<NNTreeIterator>, NNTreeIterator&>
_M_access<(anonymous namespace)::ArgParser::initOptionTables()::<lambda(const string&)>*>
move<QPDFJob::writeOutfile(QPDF&)::<lambda(Pipeline&, const string&)>&>
gnutls_strerror
__uninit_copy<std::move_iterator<std::shared_ptr<JSON>*>, std::shared_ptr<JSON>*>
add_help_1
__uninit_copy<std::move_iterator<(anonymous namespace)::QPDFPageData*>, (anonymous namespace)::QPDFPageData*>
pair<long int&>
inTop
_M_insert<Pipeline* const&>
_M_clone_node<std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> > >::_Alloc_node>
ImageOptimizer
reset<unsigned char*>
_M_not_empty_function<(anonymous namespace)::Handlers::setupEmpty()::<lambda()> >
forward<QPDFWriter*>
shared_ptr<(anonymous namespace)::InvalidInputSource>
handleCompletion
_Vector_impl
__miter_base<QPDFObjectHandle*>
nouppercase
operator|
skipToNextByte
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<(anonymous namespace)::SF_Crypt, std::allocator<(anonymous namespace)::SF_Crypt>, (__gnu_cxx::_Lock_policy)2> > >
removeFormFields
__addressof<std::pair<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> >, int> >
argEndCopyAttachment
__const_get<long unsigned int const, QPDFObjectHandle>
newDictionary
_Head_base<std::shared_ptr<InputSource>&>
__fill_n_a<bool*, long unsigned int, bool>
operator==<QPDFObjectHandle*>
move<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, true, true>&>
forward<QPDFParser::parser_state_e>
operator!=<(anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> >
QPDFDocumentHelper
__niter_base<QPDFAnnotationObjectHelper*>
strrchr
operator!=<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*>
QPDFStreamFilter
max<unsigned int>
_M_not_empty_function<(anonymous namespace)::Handlers::addBare((anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&, const string&)> >
_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
forward<QPDF::ObjUser>
_M_realloc_insert<const (anonymous namespace)::JSONParser::parser_state_e&>
_M_realloc_insert<char const* const&>
move<char&>
_GLOBAL__sub_I__ZN13QPDFArgParser7MembersC2EiPKPKcS2_
_M_insert_unique<const std::pair<long unsigned int const, unsigned char>*>
pair<std::_Rb_tree_node<int>*&, std::_Rb_tree_node_base*&>
getDefaultValue
_M_insert_any_matcher_posix<true, false>
pptr
__shared_count<Pl_RunLength, std::allocator<Pl_RunLength>, char const (&)[17], Pipeline*&, Pl_RunLength::action_e>
getUniqueResourceName
makeInt
move<std::allocator<int>&>
_M_not_empty_function<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)()>((anonymous namespace)::Handlers*)> >
_M_not_empty_function<QUtil::read_lines_from_file(std::istream&, bool)::<lambda(char&)> >
calculateXrefStreamPadding
endJsonObjectArray
construct<long int, long int const&>
_GLOBAL__sub_I__ZN13QPDF_ReservedC2Ev
move<const std::allocator<Pl_LZWDecoder>&>
_M_access<(anonymous namespace)::Handlers::setupPassword()::<lambda(char const*)> >
__get_helper<0, long int const&>
move<std::shared_ptr<JSON>&>
isCached
construct<std::shared_ptr<QPDFObjectHandle::TokenFilter>, const std::shared_ptr<QPDFObjectHandle::TokenFilter>&>
appendString
forward<std::default_delete<Buffer::Members> >
_M_enable_shared_from_this_with<Pl_StdioFile>
_S_assign
_M_enable_shared_from_this_with<Pl_DCT>
_Destroy<QPDF::HSharedObjectEntry*, QPDF::HSharedObjectEntry>
operator==
to_ulong<int>
_M_construct_node<const std::piecewise_construct_t&, std::tuple<QPDFObjGen&&>, std::tuple<> >
system
_M_not_empty_function<QPDFJob::handlePageSpecs(QPDF&, bool&, std::vector<std::shared_ptr<QPDF> >&)::<lambda(Pipeline&, const string&)> >
__uninit_copy<std::move_iterator<char*>, char*>
EVP_CIPHER_CTX_free
__addressof<std::allocator<std::_Sp_counted_deleter<char const**, std::default_delete<char const* []>, std::allocator<void>, (__gnu_cxx::_Lock_policy)2> > >
_Destroy<QPDFFormFieldObjectHelper*>
Pl_OStream
shared_ptr<char const*, std::default_delete<char const* []> >
_Destroy<__gnu_cxx::__normal_iterator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > >
move<QPDFJob::UOConfig*&>
function<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, false, false> >
fwide
pdf_time_to_qpdf_time
pair<std::_Rb_tree_node<std::pair<int const, QPDFXRefEntry> >*&, std::_Rb_tree_node_base*&>
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_String, std::allocator<Pl_String>, (__gnu_cxx::_Lock_policy)2> > >
construct<std::shared_ptr<QPDFStreamFilter>, std::shared_ptr<QPDFStreamFilter> >
_M_enable_shared_from_this_with<Pl_Flate>
construct<Pipeline*, Pipeline* const&>
_M_do_reset
_M_enable_shared_from_this_with<QPDFJob::PagesConfig>
move<const std::allocator<QPDFNumberTreeObjectHelper>&>
__shared_ptr<JSONHandler::Members>
_Sp_counted_ptr_inplace<std::shared_ptr<QPDF::EncryptionParameters>&, std::shared_ptr<InputSource>&, QPDFObjGen, long long int, long unsigned int, QPDFObjectHandle&>
move<std::shared_ptr<JSON::Members>&>
__get<long unsigned int const, QPDFObjectHandle>
__atomic_add_dispatch
move<std::shared_ptr<Pl_RC4>&>
_Destroy<QPDFExc*>
make_shared<Buffer, long unsigned int&>
getUncompressedObject
function<QPDFJob::copyAttachments(QPDF&)::<lambda(Pipeline&, const string&)> >
copyEncryptionParameters
operator==<QPDF::HPageOffsetEntry*>
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::vector<QPDFObjectHandle> > >*&>
getAlternativeName
_S_get
__uninit_copy<std::move_iterator<QPDF::HPageOffsetEntry*>, QPDF::HPageOffsetEntry*>
DiscardContents
operator()<QPDFArgParser*&, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
_M_quantifier
move<const std::allocator<Pl_Buffer>&>
_M_replace_categories
__addressof<const std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, false, true> >
ObjCopier
localtime
__uninitialized_move_if_noexcept_a<std::shared_ptr<JSON>*, std::shared_ptr<JSON>*, std::allocator<std::shared_ptr<JSON> > >
function<QPDFJob::doSplitPages(QPDF&, bool&)::<lambda(Pipeline&, const string&)> >
move<const std::allocator<Buffer>&>
strcmp
_Tuple_impl<QPDFArgParser*&>
move<std::shared_ptr<QPDFJob::EncConfig>&>
__shared_ptr<QPDFObject>
__make_move_if_noexcept_iterator<Buffer>
operator()<char const*>
__destroy<QPDFExc*>
~_Hashtable_alloc
pow
_M_not_empty_function<(anonymous namespace)::Handlers::setupOverlayPassword()::<lambda(char const*)> >
forward<std::_Rb_tree_node<std::pair<const QPDFObjGen, QPDFXRefEntry> >*&>
emplace_back<QPDFObjectHandle&>
iter_swap<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > > >
move<std::_Bind<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)(const std::__cxx11::basic_string<char>&)>((anonymous namespace)::ArgParser*, std::_Placeholder<1>)>&>
_M_not_empty_function<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, false, true> >
__get_helper<0, long unsigned int&&>
_GLOBAL__sub_I__ZN25QPDFOutlineDocumentHelperC2ER4QPDF
clear
expm1
isNull
allocator<SF_ASCIIHexDecode>
getSave
__make_move_if_noexcept_iterator<(anonymous namespace)::QPDFPageData>
decodeSub
pair<long int const&, 0>
__get_helper<0, std::_Placeholder<1>, char const*, std::_Placeholder<2> >
_M_create_node<QPDFObjectHandle&>
prev<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >
QPDFDictItems
getEncryptionKey
__shared_ptr<std::allocator<Pl_LZWDecoder>, char const (&)[11], Pipeline*&, bool&>
pair<const QPDF::ObjUser&, 0>
operator==<double*, std::vector<double> >
_M_copy<std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > > >::_Alloc_node>
unsafeShallowCopy
__fread_alias
shared_ptr<std::allocator<JSON>, JSON>
_M_insert_any_matcher_ecma<false, true>
construct<int, int const&>
ParseGuard
move<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)()>&>
split
_M_set_node
__shared_count<JSON::JSON_bool, std::allocator<JSON::JSON_bool>, bool&>
argUnderlay
~QPDFParser
move<std::__cxx11::list<QPDFOutlineObjectHelper>&>
construct<QPDFObjectHandle, const QPDFObjectHandle&>
filterContents
~_BracketMatcher
_Destroy<std::shared_ptr<QPDFStreamFilter> >
nextafter
_M_insert_<long unsigned int const&, std::_Rb_tree<long unsigned int, long unsigned int, std::_Identity<long unsigned int>, std::less<long unsigned int>, std::allocator<long unsigned int> >::_Alloc_node>
swap<void (*)(const std::_Any_data&, const std::__cxx11::basic_string<char>&, const std::__cxx11::basic_string<char>&)>
swap<void (*)(const std::_Any_data&, char const*&&, int&&)>
__uninitialized_move_if_noexcept_a<QPDF::JSONReactor::state_e*, QPDF::JSONReactor::state_e*, std::allocator<QPDF::JSONReactor::state_e> >
__insertion_sort<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_less_iter>
encryptionFilePassword
construct<std::pair<long long int const, QPDFObjectHandle>, std::pair<long long int, QPDFObjectHandle>&>
int_to_string
getExtensionLevel
shared_ptr<std::allocator<QPDFAcroFormDocumentHelper>, QPDF&>
getPartialName
is_name
get<1, Buffer::Members*, std::default_delete<Buffer::Members> >
insert<__gnu_cxx::__normal_iterator<QPDFObjectHandle*, std::vector<QPDFObjectHandle> > >
~CopiedStreamDataProvider
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<NNTreeIterator, std::allocator<NNTreeIterator>, (__gnu_cxx::_Lock_policy)2> > >
forward<std::_Mem_fn<void ((anonymous namespace)::ArgParser::*)(const std::__cxx11::basic_string<char>&)>&>
forward<std::_Rb_tree_node<std::pair<const QPDFObjGen, std::vector<QPDFOutlineObjectHelper> > >*&>
_M_insert<const QPDFPageObjectHelper&>
pair<std::_Rb_tree_iterator<QPDF::ObjUser>, bool>
_M_rehash_aux
setDeterministicID
function<QPDFJob::maybeFixWritePassword(int, std::__cxx11::string&)::<lambda(Pipeline&, const string&)> >
copy_string
_GLOBAL__sub_I__ZNK4QPDF14EncryptionData4getVEv
insert
lock
readObject
_Destroy<std::shared_ptr<Pipeline>*>
__uninitialized_move_if_noexcept_a<std::shared_ptr<Pipeline>*, std::shared_ptr<Pipeline>*, std::allocator<std::shared_ptr<Pipeline> > >
jpeg_std_error
construct<SF_RunLengthDecode>
endOverlay
_M_allocate_node
flush<char, std::char_traits<char> >
replaceInput
move<const std::allocator<NNTreeImpl>&>
flattenAnnotationsForPage
construct<char, char>
forward<std::tuple<const QPDFObjGen&> >
QPDFValue
_M_insert_character_class_matcher<true, false>
shared_ptr<QPDF::Members>
putwc
__shared_ptr<std::allocator<Pl_ASCII85Decoder>, char const (&)[15], Pipeline*&>
function<(anonymous namespace)::Handlers::beginArray((anonymous namespace)::Handlers::json_handler_t, (anonymous namespace)::Handlers::bare_handler_t)::<lambda(const string&, JSON)> >
move<std::allocator<std::__cxx11::sub_match<char const*> >&>
_M_enable_shared_from_this_with<Pl_String::Members>
malloc
__make_move_if_noexcept_iterator<QPDF::JSONReactor::state_e>
_M_move_assign1
pair<std::_Rb_tree_iterator<long unsigned int>&, bool&>
__uninitialized_move_if_noexcept_a<long unsigned int*, long unsigned int*, std::allocator<long unsigned int> >
_RegexMask
_Destroy<__gnu_cxx::__normal_iterator<QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> >, QPDFAnnotationObjectHelper>
allocator<QPDFCrypto_openssl>
allocator_arg_t
__shared_count<(anonymous namespace)::ImageOptimizer*>
_M_not_empty_function<(anonymous namespace)::Handlers::setupReplaceInput()::<lambda()> >
_M_access<(anonymous namespace)::Handlers::ignoreItem()::<lambda(const string&, JSON)> >
removeAttachment
_M_not_empty_function<(anonymous namespace)::Handlers::setupCopyAttachmentsFromFile()::<lambda(char const*)> >
compute_encryption_key
_M_construct_node<const std::piecewise_construct_t&, std::tuple<QPDF::ObjUser&&>, std::tuple<> >
swap<JSON::Members*>
wscanf
move<std::default_delete<char []>&>
operator()<QPDFArgParser*&, std::tuple<> >
move<std::vector<std::__cxx11::regex_traits<char>::_RegexMask, std::allocator<std::__cxx11::regex_traits<char>::_RegexMask> >&>
_M_unhook
copy<QPDFAnnotationObjectHelper*, QPDFAnnotationObjectHelper*>
~__shared_count
_M_not_empty_function<(anonymous namespace)::ArgParser::initOptionTables()::<lambda(const string&)> >
_M_create_node<const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
_M_access<(anonymous namespace)::Handlers::setupCopyAttachmentsFromPassword()::<lambda(char const*)>*>
_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
_M_lookahead
_M_not_empty_function<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, false, false> >
pair<char const (&)[3], char const (&)[6]>
shared_ptr<(anonymous namespace)::ValueSetter>
inLt
_M_create_node<QPDFPageObjectHelper>
move<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)(JSON)>&>
setRecompressFlate
move<void (*&)(const std::_Any_data&, const std::__cxx11::basic_string<char>&, JSON&&)>
registerForeignStream
list<std::_List_const_iterator<NNTreeIterator::PathElement> >
__addressof<const QPDFPageObjectHelper::getArtBox(bool, bool)::<lambda()> >
__alloc_on_move<std::allocator<char> >
jpeg_write_scanlines
construct<std::pair<long long unsigned int const, bool>, const std::piecewise_construct_t&, std::tuple<long long unsigned int const&>, std::tuple<> >
add_help_7
_M_create_node<const std::pair<const QPDF::ObjUser, std::set<QPDFObjGen, std::less<QPDFObjGen>, std::allocator<QPDFObjGen> > >&>
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, QPDFArgParser::OptionEntry> >*&>
move<std::shared_ptr<Pl_TIFFPredictor>&>
__shared_ptr<std::allocator<QPDFNumberTreeObjectHelper>, QPDFObjectHandle, QPDF&>
uninitialized_copy<std::move_iterator<std::shared_ptr<QPDFStreamFilter>*>, std::shared_ptr<QPDFStreamFilter>*>
~RandomDataProvider
__get_helper<0, JSON&&>
eraseItemAndGetOld
_M_lower_bound
_GLOBAL__sub_I__ZN4QPDF12qpdf_versionB5cxx11E
_Sp_counted_ptr_inplace<bool>
writeDictionaryItem
parseOptions
operator==<std::shared_ptr<JSON>*>
move<std::__cxx11::sub_match<char const*>*&>
_M_equals
_GLOBAL__sub_I__ZN16QPDFObjectHandle18StreamDataProviderC2Eb
is_lock_free
getOrCreateAcroForm
operator()<const std::__cxx11::basic_string<char>&>
_M_match_token
_GLOBAL__sub_I__ZN16Pl_QPDFTokenizer7MembersC2Ev
getLengthBytes
_S_always_equal
forward<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >*&>
__addressof<const std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, true, true, false> >
forward<Pipeline*&>
__shared_ptr<std::allocator<SF_ASCIIHexDecode> >
tanh
_M_construct_node<QPDFObjGen>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<QPDFFileSpecObjectHelper, std::allocator<QPDFFileSpecObjectHelper>, (__gnu_cxx::_Lock_policy)2> > >
EVP_MD_CTX_reset
getVal
operator-<(anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> >
getImpl
__shared_count<Buffer*>
__make_move_if_noexcept_iterator<QPDF::HPageOffsetEntry>
move<std::allocator<std::_Rb_tree_node<QPDFObjGen> >&>
_M_create_node<const std::pair<const QPDFObjGen, QPDFXRefEntry>&>
construct<std::pair<const std::__cxx11::basic_string<char>, QPDF*>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
__copy_move_a2<false, __gnu_cxx::__normal_iterator<char const*, std::vector<char, std::allocator<char> > >, char*>
_M_access<(anonymous namespace)::Handlers::setupEmpty()::<lambda()>*>
forward<char const* const*>
uninitialized_copy<__gnu_cxx::__normal_iterator<const std::pair<char, char>*, std::vector<std::pair<char, char>, std::allocator<std::pair<char, char> > > >, std::pair<char, char>*>
get<0, (anonymous namespace)::ArgParser*>
operator*
forward<(anonymous namespace)::NameTreeDetails&>
_M_do_find_first
__shared_ptr<Pl_StdioFile>
hex_encode
removeKey
destroy<(anonymous namespace)::StackFrame>
tuple
__do_alloc_on_move<std::allocator<std::__cxx11::basic_string<char> > >
writeHPageOffset
_M_enable_shared_from_this_with<QPDFJob::Members>
__addressof<const (anonymous namespace)::ImageOptimizer::makePipeline(const string&, Pipeline*)::<lambda(Pipeline&, const string&)> >
operator!=<std::shared_ptr<JSON::JSON_value>*>
__destroy<QPDFPageObjectHelper*>
move<std::allocator<std::pair<char, char> >&>
operator()<const std::pair<long unsigned int const, unsigned char>&>
operator()<char const*&, std::tuple<QPDF*&&, char const*&&> >
compute_U_value_R2
operator-<QPDFExc*, std::vector<QPDFExc> >
swap<QPDF::CHPageOffsetEntry*>
push
max<int>
__copy_move_a<true, int*, int*>
allocator<QPDFAcroFormDocumentHelper>
pair<>
setArrayFromVector
getO
_M_not_empty_function<QPDFJob::handleTransformations(QPDF&)::<lambda(Pipeline&, const string&)> >
~CopyAttachmentFrom
enqueueObject
destroy<std::pair<const std::__cxx11::basic_string<char>, std::map<long unsigned int, std::__cxx11::basic_string<char> > > >
_M_handle_alternative
shared_ptr<unsigned char, std::default_delete<unsigned char []> >
format
operator-<std::shared_ptr<QPDFObjectHandle::TokenFilter>*, std::vector<std::shared_ptr<QPDFObjectHandle::TokenFilter> > >
move<QPDFFileSpecObjectHelper*&>
do_narrow
operator-<std::shared_ptr<Pipeline>*, std::vector<std::shared_ptr<Pipeline> > >
swscanf
_M_init
_M_hook
shared_ptr<std::allocator<SF_ASCII85Decode> >
_M_do_flip
forward<const std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > >&>
copysign
pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >
__addressof<const (anonymous namespace)::Handlers::setupInputFile()::<lambda(char const*)> >
forward<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >&>
wcstold
_GLOBAL__sub_I__ZN17SF_FlateLzwDecodeC2Eb
_Destroy<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >
openObject
_M_allocate_node<const std::piecewise_construct_t&, std::tuple<long unsigned int&&>, std::tuple<> >
write_vector_int<QPDF::HPageOffsetEntry, long long int>
construct<std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::set<long unsigned int> > >, const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<long unsigned int, std::less<long unsigned int>, std::allocator<long unsigned int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::set<long unsigned int, std::less<long unsigned int>, std::allocator<long unsigned int> > > > > >&>
move<const std::allocator<JSON>&>
pop
__shared_count<(anonymous namespace)::ProgressReporter*>
wmemmove
get_afdh_for_qpdf
QPDFObjectHelper
_Destroy<QPDFParser::parser_state_e*, QPDFParser::parser_state_e>
__cxa_allocate_exception
_M_enable_shared_from_this_with<QPDFFormFieldObjectHelper::Members>
~DiscardContents
__shared_ptr<JSON::JSON_bool>
compressionLevel
importJSON
forward<std::_Rb_tree_node<std::pair<const QPDF::ObjUser, std::set<QPDFObjGen> > >*&>
construct<std::pair<const QPDFObjGen, std::vector<QPDFOutlineObjectHelper> >, const std::piecewise_construct_t&, std::tuple<const QPDFObjGen&>, std::tuple<> >
~deque
getAppearanceState
gnutls_cipher_init
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, QPDF::encryption_method_e> >*&, std::_Rb_tree_node_base*&>
allocate_shared<QPDFCryptoProvider::Members, std::allocator<QPDFCryptoProvider::Members> >
parseVersion
__advance<char const*, long int>
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, QPDFArgParser::HelpTopic> >*&, std::_Rb_tree_node_base*&>
objectWarning
EncConfig
operator()<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
_M_check_length
__uninit_default_n<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, long unsigned int>
get<1, QPDF*&&, char const*&&>
_M_enable_shared_from_this_with<(anonymous namespace)::ImageOptimizer>
atoi
createWhat
getObjGen
_M_opcode
move<const std::allocator<FileInputSource>&>
~_Sp_counted_deleter
emplace_back<std::__detail::_StateSeq<std::__cxx11::regex_traits<char> > >
isName
tuple<(anonymous namespace)::ArgParser*&>
addArrayElement
pair<std::_Rb_tree_iterator<int>, bool>
move<std::__shared_ptr<JSON::Members, (__gnu_cxx::_Lock_policy)2>&>
_M_not_empty_function<QPDFPageObjectHelper::getArtBox(bool, bool)::<lambda()> >
_Head_base<std::_Placeholder<1> >
~QPDFFileSpecObjectHelper
pipeContentStreams
copy<__gnu_cxx::__normal_iterator<const (anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> >, __gnu_cxx::__normal_iterator<(anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> > >
_Destroy<std::shared_ptr<QPDFObjectHandle::TokenFilter> >
_M_create_node<const std::pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<JSON::JSON_value> >&>
jpeg_destroy_decompress
__miter_base<__gnu_cxx::__normal_iterator<const QPDFAnnotationObjectHelper*, std::vector<QPDFAnnotationObjectHelper> > >
operator()<const std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >&>
_GLOBAL__sub_I__ZN9Pl_Base64C2EPKcP8PipelineNS_8action_eE
_M_reserve_map_at_front
allocator<QPDFCrypto_gnutls>
assertPageObject
__make_move_if_noexcept_iterator<(anonymous namespace)::JSONParser::parser_state_e>
construct<std::pair<long long unsigned int const, std::shared_ptr<QPDFAcroFormDocumentHelper> >, const std::piecewise_construct_t&, std::tuple<long long unsigned int const&>, std::tuple<> >
__copy_m<long unsigned int>
move<std::__shared_ptr<Pl_ASCII85Decoder, (__gnu_cxx::_Lock_policy)2>&>
move<std::shared_ptr<char>&>
move<QPDF::JSONReactor::state_e&>
__miter_base<__gnu_cxx::__normal_iterator<const QPDFObjectHandle*, std::vector<QPDFObjectHandle> > >
encrypt
forward<char>
__shared_ptr<std::allocator<QPDFCryptoProvider::Members> >
forward<QPDF::CHSharedObjectEntry>
shared_ptr<QPDFValue>
move<std::allocator<std::__detail::_Hash_node<std::pair<long unsigned int const, QPDFObjectHandle>, false> >&>
~_Hashtable_ebo_helper
swap<QPDFJob::PagesConfig*>
_Rb_tree_increment
construct<QPDFObjGen, QPDFObjGen>
__uninit_copy<std::move_iterator<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*>, std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >*>
_Construct<(anonymous namespace)::StackFrame, (anonymous namespace)::StackFrame>
move<std::vector<std::__cxx11::basic_string<char> >&>
_Construct<std::__cxx11::sub_match<char const*>, const std::__cxx11::sub_match<char const*>&>
BitWriter
__make_move_if_noexcept_iterator<QPDFAnnotationObjectHelper>
checkOwnership
_M_create_node<Pipeline*>
move<std::allocator<QPDFObjectHandle>&>
inBeforeToken
operator-<const QPDFObjectHandle*, QPDFObjectHandle*, std::vector<QPDFObjectHandle> >
make_shared<Pl_AES_PDF, char const (&)[22], Pipeline*&, bool, unsigned char*, long unsigned int>
safe_fopen
construct<NNTreeImpl, (anonymous namespace)::NameTreeDetails&, QPDF&, QPDFObjectHandle&, bool&>
writeLinearized
_GLOBAL__sub_I__ZN23QPDFOutlineObjectHelper7MembersC2ER25QPDFOutlineDocumentHelper
move<std::allocator<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >&>
shared_ptr<QPDFJob::EncConfig>
_M_construct_node<const std::pair<long unsigned int const, unsigned char>&>
getEmbeddedFileStream
~NumberTreeDetails
crbegin
NNTreeIterator
forward<const std::pair<const std::__cxx11::basic_string<char>, std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >&>
__uninitialized_copy_a<std::move_iterator<std::shared_ptr<QPDFObjectHandle::TokenFilter>*>, std::shared_ptr<QPDFObjectHandle::TokenFilter>*, std::shared_ptr<QPDFObjectHandle::TokenFilter> >
_Sp_counted_ptr_inplace<char const (&)[13], Pipeline*&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>
get<0, Buffer::Members*, std::default_delete<Buffer::Members> >
forward<int&>
dictionaryStart
uninitialized_copy<__gnu_cxx::__normal_iterator<const (anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> >, (anonymous namespace)::QPDFPageData*>
__miter_base<QPDFOutlineObjectHelper*>
addressof<std::__detail::_Hash_node_base*>
move<QPDFJob::doProcess(std::shared_ptr<QPDF>&, std::function<void(QPDF*, char const*)>, char const*, bool, bool, bool)::<lambda(Pipeline&, const string&)>&>
destroy<std::unique_ptr<char []> >
asin
removeUnreferencedResourcesHelper
checkSchema
__throw_bad_cast
move<QPDFNameTreeObjectHelper*&>
_Unchecked_flip
operator==<unsigned char>
_M_not_empty_function<QPDFJob::maybeFixWritePassword(int, std::__cxx11::string&)::<lambda(Pipeline&, const string&)> >
setDefaultProvider
_Sp_counted_ptr_inplace<NNTreeIterator&>
pair<std::_Rb_tree_node<std::pair<const QPDFObjGen, std::vector<QPDFOutlineObjectHelper> > >*&, std::_Rb_tree_node_base*&>
__ostream_insert<char, std::char_traits<char> >
emplace_back<QPDFOutlineObjectHelper>
showLinearizationData
__distance<const std::__cxx11::basic_string<char>*>
move<std::shared_ptr<QPDFJob::AttConfig>&>
cos
isOrHasName
__destroy<QPDFObjectHandle*>
function<(anonymous namespace)::ArgParser::initOptionTables()::<lambda()> >
everPushedInheritedAttributesToPages
operator()<(anonymous namespace)::ArgParser*&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&> >
findObjectAtOrBelow
__shared_count<QPDF::Members*>
getProvider
_Destroy<(anonymous namespace)::QPDFPageData*, (anonymous namespace)::QPDFPageData>
__niter_base<char const**>
dictionaryItem
__miter_base<__gnu_cxx::__normal_iterator<const std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > > >
~regex_traits
utf8_to_utf16
_M_not_empty_function<QPDFPageObjectHelper::forEachFormXObject(bool, std::function<void(QPDFObjectHandle&, QPDFObjectHandle&, const std::__cxx11::basic_string<char>&)>)::<lambda(QPDFObjectHandle)> >
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_Flate, std::allocator<Pl_Flate>, (__gnu_cxx::_Lock_policy)2> > >
getTrailer
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Buffer, std::allocator<Buffer>, (__gnu_cxx::_Lock_policy)2> > >
rethrow_exception
destroy<std::pair<int const, long long int> >
getNames
allocate_shared<JSON::JSON_number, std::allocator<JSON::JSON_number>, double&>
__shared_count<QPDFWriter::PipelinePopper, std::allocator<QPDFWriter::PipelinePopper>, QPDFWriter*>
forEachXObject
__builtin___memcpy_chk
operator==<const std::shared_ptr<char const>*, std::vector<std::shared_ptr<char const> > >
reset
__shared_ptr<QPDFFormFieldObjectHelper::Members>
swap<QPDFJob::CopyAttConfig*>
__addressof<std::allocator<std::_Sp_counted_ptr_inplace<ContentNormalizer, std::allocator<ContentNormalizer>, (__gnu_cxx::_Lock_policy)2> > >
_M_handle_subexpr_begin
__invoke_impl<void, void ((anonymous namespace)::Handlers::* const&)(JSON), (anonymous namespace)::Handlers*&, JSON>
construct<std::shared_ptr<JSONHandler>, std::shared_ptr<JSONHandler> >
inString
_M_get_Node_allocator
forward<(anonymous namespace)::QPDFPageData&>
allocate_shared<SF_ASCIIHexDecode, std::allocator<SF_ASCIIHexDecode> >
__alloc_on_move<std::allocator<QPDF::HPageOffsetEntry> >
move<std::__shared_ptr<QPDF, (__gnu_cxx::_Lock_policy)2>&>
rint
_M_access<(anonymous namespace)::Handlers::addChoices(char const**, bool, (anonymous namespace)::Handlers::param_handler_t)::<lambda(const string&, const string&)>*>
move<const std::allocator<QPDFOutlineObjectHelper>&>
wcstoul
operator==<QPDFPageObjectHelper*>
all
_GLOBAL__sub_I__ZN13QPDF_OperatorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
wctomb
_M_insert_alt
allocator<Pl_QPDFTokenizer>
_M_create_node<std::pair<QPDFObjGen, int> >
__make_move_if_noexcept_iterator<std::shared_ptr<JSON::JSON_value> >
allocator<Pl_StdioFile>
addStringHandler
make_unique_cstr
erfc
move<void (*&)(const std::_Any_data&, char const*&&, int&&)>
forward<std::_Rb_tree_node<QPDF::ObjUser>*&>
__iter_equals_val<const std::__cxx11::basic_string<char> >
setLineBuf
operator!=<char const*, std::__cxx11::basic_string<char> >
destroy<JSON::JSON_number>
function<(anonymous namespace)::Handlers::initHandlers()::<lambda(const string&, JSON)> >
__do_alloc_on_move<std::allocator<std::__cxx11::sub_match<char const*> > >
setupUnderlayPassword
~PageSpec
copy<std::move_iterator<char const**>, char const**>
allocator<std::__detail::_NFA<std::__cxx11::regex_traits<char> > >
_M_insert<QPDFPageObjectHelper>
forward<QPDFAnnotationObjectHelper>
forward<std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, QPDFObjectHandle> > >
construct<QPDFFileSpecObjectHelper, QPDFObjectHandle&>
_M_end
__get_helper<0, (anonymous namespace)::ArgParser*>
destroy<std::pair<int const, int> >
_M_not_empty_function<QPDFPageObjectHelper::externalizeInlineImages(size_t, bool)::<lambda(QPDFObjectHandle&, QPDFObjectHandle&, const string&)> >
doJSONOutlines
operator std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >::string_type
~StreamDataProvider
_M_create_node<QPDFObjGen>
__invoke<void ((anonymous namespace)::ArgParser::* const&)(), (anonymous namespace)::ArgParser*&>
findLast
JSON_value
PathElement
__invoke<std::_Mem_fn<void ((anonymous namespace)::Handlers::*)(JSON)>&, (anonymous namespace)::Handlers*&, JSON>
forward<QPDFOutlineObjectHelper>
~HelpTopic
operator>>=
copyAttachmentsFrom
basic_streambuf
makeBool
mem_fn<void(std::shared_ptr<InputSource>, char const*), QPDF>
parse
pair<std::_Rb_tree_iterator<QPDFObjGen>, std::_Rb_tree_iterator<QPDFObjGen> >
_Construct<std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >, std::pair<long int, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > > >
JSON_blob
_M_matches
getTitle
allocate_shared<Pl_OStream, std::allocator<Pl_OStream>, char const (&)[7], std::basic_ostream<char, std::char_traits<char> >&>
~Pl_Track
assertReserved
get<0, JSON&&>
strtok
destroy<QPDFOutlineObjectHelper>
ForeignStreamData
forward<std::shared_ptr<InputSource> >
_M_enable_shared_from_this_with<JSONHandler>
__uninitialized_move_if_noexcept_a<std::unique_ptr<char []>*, std::unique_ptr<char []>*, std::allocator<std::unique_ptr<char []> > >
_GLOBAL__sub_I__ZN10QPDFLogger7MembersC2Ev
operator-<int*, std::vector<int> >
_M_access<(anonymous namespace)::Handlers::setupUnderlayPassword()::<lambda(char const*)>*>
swap<QPDFNumberTreeObjectHelper*>
construct<QPDF::ObjUser, const QPDF::ObjUser&>
Pl_MD5
_M_create_node<const std::piecewise_construct_t&, std::tuple<long unsigned int const&>, std::tuple<> >
doShowAttachment
destroy<Pl_LZWDecoder>
_M_insert_char_matcher<true, true>
function<(anonymous namespace)::StreamBlobProvider>
__niter_base<int*>
time
~ResourceReplacer
allocator<JSON::JSON_blob>
_Destroy<QPDFObjGen*>
operator-<long unsigned int*, std::vector<long unsigned int> >
isDirectNull
_Construct<QPDF::CHPageOffsetEntry>
make_shared<Pl_RC4, char const (&)[22], Pipeline*&, unsigned char*, int>
_M_not_empty_function<JSONHandler::handle(const string&, JSON)::<lambda(const string&, JSON)> >
_Hashtable
__shared_ptr<std::allocator<JSON::JSON_number>, long long int&>
_M_do_or
rotate
move<std::tuple<(anonymous namespace)::ArgParser*, std::_Placeholder<1> >&>
setDecodeParms
swapWith
~_Deque_impl
function<std::__detail::_BracketMatcher<std::__cxx11::regex_traits<char>, false, true> >
inDecimal
construct<std::pair<const std::__cxx11::basic_string<char>, std::shared_ptr<JSON::JSON_value> >, const std::piecewise_construct_t&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >
load_vector_vector<QPDF::HPageOffsetEntry>
__compile_nfa<char const*, std::__cxx11::regex_traits<char> >
pair<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > >*&, std::_Rb_tree_node_base*&>
__do_alloc_on_move<std::allocator<QPDF::CHSharedObjectEntry> >
get<0, long unsigned int const, QPDFObjectHandle>
getAttribute
_M_enable_shared_from_this_with<Pl_Count>
__addressof<std::shared_ptr<QPDFCrypto_openssl> (* const)()>
_M_initialize_map
to_ulong<char>
forward<void (QPDFArgParser::* const&)(const std::__cxx11::basic_string<char>&)>
move<std::allocator<std::_Rb_tree_node<std::pair<long unsigned int const, unsigned char> > >&>
argEncrypt
move<Buffer::Members*&>
_M_unmatched_sub
setAt
__miter_base<long int**>
construct<std::shared_ptr<Pipeline>, const std::shared_ptr<Pipeline>&>
__do_alloc_on_move<std::allocator<int> >
FunctionProgressReporter
AttConfig
jpeg_start_compress
addBoolHandler
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Pl_ASCII85Decoder, std::allocator<Pl_ASCII85Decoder>, (__gnu_cxx::_Lock_policy)2> > >
shared_ptr<(anonymous namespace)::CoalesceProvider>
_M_enable_shared_from_this_with<(anonymous namespace)::CoalesceProvider>
forward<std::pair<char, char> >
get<0, char*, std::default_delete<char []> >
invalidHelpArg
__addressof<const QPDFJob::doProcess(std::shared_ptr<QPDF>&, std::function<void(QPDF*, char const*)>, char const*, bool, bool, bool)::<lambda(Pipeline&, const string&)> >
getFilenames
uninitialized_copy<std::move_iterator<int*>, int*>
inflate
_M_pop_back_aux
_M_check_equal_allocators
llround
~QPDFTokenizer
useZeroIV
getWantedJSONObjects
operator&
allocator<void>
toS<long long int>
operator!=<void>
getLogger
EVP_DigestFinal
asName
_GLOBAL__sub_I__ZN14NNTreeIteratorC2ER10NNTreeImpl
setQDFMode
_S_right
shallowCopyInternal
_M_construct_node<long unsigned int const&>
uint_to_string_base
copyObject
~new_allocator
reconstruct_xref
_M_access<QPDFPageObjectHelper::forEachImage(bool, std::function<void(QPDFObjectHandle&, QPDFObjectHandle&, const std::__cxx11::basic_string<char>&)>)::<lambda(QPDFObjectHandle)> >
pdf_time_to_iso8601
_M_realloc_insert<QPDFObjGen>
operator std::integral_constant<int, 1>::value_type
__get_helper<0, char**, std::default_delete<char* []> >
getMappingName
operator std::integral_constant<long unsigned int, 1>::value_type
get<1, (anonymous namespace)::Handlers*, std::_Placeholder<1> >
makeResourcesIndirect
getRandomDataProvider
_M_access<QUtil::file_provider(const string&)::<lambda(Pipeline*)>*>
shared_ptr<QPDFEmbeddedFileDocumentHelper::Members>
doJSONPages
operator!=<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*, std::vector<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >, std::allocator<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > > > > >
uninitialized_copy<std::move_iterator<QPDFAnnotationObjectHelper*>, QPDFAnnotationObjectHelper*>
__copy_move_a2<false, __gnu_cxx::__normal_iterator<const (anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> >, __gnu_cxx::__normal_iterator<(anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> > >
load_factor
forward<const std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >&>
calculateLinearizationData
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, false, false> >
useAes
_M_insert_<std::pair<long long int, QPDFObjectHandle>&, std::_Rb_tree<long long int, std::pair<long long int const, QPDFObjectHandle>, std::_Select1st<std::pair<long long int const, QPDFObjectHandle> >, std::less<long long int>, std::allocator<std::pair<long long int const, QPDFObjectHandle> > >::_Alloc_node>
_M_not_empty_function<(anonymous namespace)::ArgParser::initOptionTables()::<lambda()> >
setRandomDataProvider
getDefaultProvider
tuple<char*&, std::default_delete<char []> >
updateCache
get<1, std::_Placeholder<1>, char const*, std::_Placeholder<2> >
pair<std::_Rb_tree_node<std::pair<const QPDFObjGen, std::set<QPDF::ObjUser> > >*&, std::_Rb_tree_node_base*&>
range_check<long long int>
function<(anonymous namespace)::ImageOptimizer::makePipeline(const string&, Pipeline*)::<lambda(Pipeline&, const string&)> >
handleToken
_GLOBAL__sub_I__ZN17QPDFCrypto_gnutlsC2Ev
_GLOBAL__sub_I__ZN9BitStreamC2EPKhm
swap<bool (*)(std::_Any_data&, const std::_Any_data&, std::_Manager_operation)>
_M_access<QPDFJob::doUnderOverlayForPage(QPDF&, QPDFJob::UnderOverlay&, std::map<int, std::vector<int> >&, size_t, std::map<int, QPDFObjectHandle>&, std::vector<QPDFPageObjectHelper>&, QPDFPageObjectHelper&, bool)::<lambda(Pipeline&, const string&)>*>
allocate_shared<Pl_TIFFPredictor, std::allocator<Pl_TIFFPredictor>, char const (&)[12], Pipeline*&, Pl_TIFFPredictor::action_e, unsigned int, unsigned int, unsigned int>
operator()<QPDF*, char const*>
_Destroy<std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >*>
__builtin_memcpy
__addressof<std::default_delete<unsigned char []> >
_Sp_counted_ptr_inplace<char const (&)[11], Pipeline*&, Pl_PNGFilter::action_e, unsigned int, unsigned int, unsigned int>
_M_insert_aux<QPDFObjectHandle>
makeNull
move<std::shared_ptr<InputSource>&>
_Destroy<QPDFAnnotationObjectHelper*, QPDFAnnotationObjectHelper>
__shared_count<QPDF::CopiedStreamDataProvider*>
lround
__copy_m<const (anonymous namespace)::QPDFPageData*, (anonymous namespace)::QPDFPageData*>
_M_allocate_and_copy<__gnu_cxx::__normal_iterator<const (anonymous namespace)::QPDFPageData*, std::vector<(anonymous namespace)::QPDFPageData> > >
_M_add_ref_copy
allocator<SF_ASCII85Decode>
__addressof<const (anonymous namespace)::Handlers::setupCopyAttachmentsFromPassword()::<lambda(char const*)> >
newUnicodeString
locale
__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_less_iter>
checkSeen
__shared_count<Pl_OStream::Members*>
_M_insert_bracket_matcher<false, true>
argEndAttachment
__uninit_copy<__gnu_cxx::__normal_iterator<const std::pair<char, char>*, std::vector<std::pair<char, char>, std::allocator<std::pair<char, char> > > >, std::pair<char, char>*>
function<QPDFPageObjectHelper::getTrimBox(bool, bool)::<lambda()> >
shared_ptr<std::allocator<Pl_ASCII85Decoder>, char const (&)[15], Pipeline*&>
shared_ptr<Pl_StdioFile::Members>
__uninitialized_default_n_a<double*, long unsigned int, double>
pushKey
__uninitialized_copy_a<std::move_iterator<std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*>, std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > >*, std::pair<long int, std::vector<std::__cxx11::sub_match<char const*>, std::allocator<std::__cxx11::sub_match<char const*> > > > >
__make_move_if_noexcept_iterator<QPDFOutlineObjectHelper>
jpeg_destroy_compress
pair<std::_Rb_tree_iterator<QPDFObjGen>&, bool&>
betweenTokens
addPageContents
forward_as_tuple<int>
operator-<std::__detail::_State<char>*, std::vector<std::__detail::_State<char>, std::allocator<std::__detail::_State<char> > > >
addFallbackDictHandler
write_vector_vector<QPDF::HPageOffsetEntry>
throw_system_error
move<std::allocator<std::_Rb_tree_node<std::__cxx11::basic_string<char> > >&>
forward<bool&>
_M_access<(anonymous namespace)::ArgParser::initOptionTables()::<lambda()>*>
pushPipeline
_M_access<std::__detail::_AnyMatcher<std::__cxx11::regex_traits<char>, false, true, true> >
move<void (*&)(const std::_Any_data&)>
int_to_string_base
__make_move_if_noexcept_iterator<std::shared_ptr<QPDFStreamFilter> >
_M_access<(anonymous namespace)::Handlers::setupOverlayFile()::<lambda(char const*)> >
parse_xrefEntry
_M_new_elements_at_front
vfwprintf
__alloc_on_move<std::allocator<std::__cxx11::sub_match<char const*> > >
getUOPagenos
move<std::_Bind<std::_Mem_fn<void (QPDF::*)(std::shared_ptr<InputSource>, char const*)>(std::_Placeholder<1>, std::shared_ptr<InputSource>, std::_Placeholder<2>)>&>
__addressof<const QPDFJob::addAttachments(QPDF&)::<lambda(Pipeline&, const string&)> >
__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<SF_RunLengthDecode, std::allocator<SF_RunLengthDecode>, (__gnu_cxx::_Lock_policy)2> > >
swap<QPDFCryptoImpl*>
~basic_string
__addressof<const QPDFPageObjectHelper::forEachFormXObject(bool, std::function<void(QPDFObjectHandle&, QPDFObjectHandle&, const std::__cxx11::basic_string<char>&)>)::<lambda(QPDFObjectHandle)> >
_Sp_counted_ptr_inplace<char const (&)[11], Pipeline*&>
construct<std::pair<const std::__cxx11::basic_string<char>, QPDFArgParser::OptionEntry>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<> >
jsonStreamData
__copy_move_a<true, long long int*, long long int*>
terminateParsing
operator-<std::shared_ptr<char const>*, std::vector<std::shared_ptr<char const> > >
_Construct<std::shared_ptr<JSON::JSON_value>, std::shared_ptr<JSON::JSON_value> >
forward_as_tuple<JSON>
__uninit_copy<__gnu_cxx::__normal_iterator<const QPDFOutlineObjectHelper*, std::vector<QPDFOutlineObjectHelper> >, QPDFOutlineObjectHelper*>
function<(anonymous namespace)::Handlers::setupCopyAttachmentsFromPassword()::<lambda(char const*)> >
move<QPDFJob::maybeFixWritePassword(int, std::__cxx11::string&)::<lambda(Pipeline&, const string&)>&>
_M_visited
_M_insert_character_class_matcher<true, true>
rijndael_finalize
unique_ptr
operator()<int const&>
makeString
_M_construct_aux<char*>
__get_helper<0, long unsigned int const&>
forward<std::_Rb_tree_node<std::pair<long long unsigned int const, bool> >*&>
copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int> >, __gnu_cxx::__normal_iterator<int*, std::vector<int> > >
operator==<const QPDF::HPageOffsetEntry*, std::vector<QPDF::HPageOffsetEntry> >
operator==<std::__cxx11::sub_match<char const*>*>
emplace_back<QPDFAnnotationObjectHelper>
_Destroy<QPDF::JSONReactor::state_e*, QPDF::JSONReactor::state_e>
__shared_ptr<Buffer>
operator< <char*, std::vector<char, std::allocator<char> > >
_M_insert_unique<QPDFNameTreeObjectHelper::iterator>
~QPDFJob
__destroy<std::__cxx11::sub_match<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char> > >*>
